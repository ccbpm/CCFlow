<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <title>JS开发框架展示</title>
    <script src="../WF/Scripts/jquery-1.4.1.min.js" type="text/javascript"></script>
    <script src="../WF/Comm/Gener.js" type="text/javascript"></script>
    <script src="../WF/Scripts/config.js" type="text/javascript"></script>

    <script type="text/javascript">

        window.onload =

		function Test() {

		    //获得当前用户信息.
			var webUser = new WebUser();
		    var no = webUser.No;
		    var name = webUser.Name;
		    var fk_dept = webUser.FK_Dept;
		    var deptName = webUser.FK_DeptName;


			return;
		    // entity
		    // 创建一个空实体.
		    var emp = new Entity("BP.Port.Emp");
		    emp.No = "ranzun";
		    emp.Name = "冉尊";
		    emp.FK_Dept = "1";
		    var insert = emp.Insert(); //增加.
		    alert("插入结果:" + insert);

		    //更新.
		    emp.Name = "张三风";
		    var update = emp.Update();
		    alert("更新结果:" + update);

		    //执行保存.
		    var save = emp.Save();
		    alert("保存结果:" + save);

		    //删除.
		    var del = emp.Delete();
		    alert("删除结果:" + del);

		    //创建一个实体,获取实体的属性.
		    var emp = new Entity("BP.Port.Emp", "liyan");
		    var name = emp.Name;
		    var deptNo = emp.FK_Dept;  //部门编号
		    var deptName = emp.FK_DeptText; //部门名称.
		    alert("用户编号:" + emp.No + ",名称:" + emp.Name + "部门编号:" + emp.FK_Dept + ",部门名称:" + emp.FK_DeptText);

		    //执行实体的方法.
		    var result_ResetPass = emp.Do("ResetPass"); //重置密码:不带参数的方法.
		    alert(result_ResetPass);

		    //执行实体的方法.
		    var result_ChangePass = emp.Do("ChangePass", "@oldpass=123@pass1=456@pass2=456"); //重置密码:不带参数的方法.
		    alert(result_ChangePass);
		}

        function TestEns() {

            var emps = Entities("BP.Port.Emps", "FK_Dept", "1");
            alert("BP.Port.Emps查询到:" + emps.length);
          

            //获得性别为女的学生.
            var students1 = Entities("BP.Demo.BPFramework.Students", "XB", "0");
            alert("Students XB=0 查询到:" + students1.length);


            //获得性别为女的学生并且按年龄排序.
            var students2 = Entities("BP.Demo.BPFramework.Students", "XB", "0", "Age");
            alert("Students XB=0 查询到:" + students2.length);


            //获得性别为女的,并且班级为01 的学生.
            var students3 = Entities("BP.Demo.BPFramework.Students", "XB", "0", "FK_BanJi", "01");
            alert("Students XB=0 ,FK_BanJi=01 查询到:" + students3.length);


            //获得性别为女的,并且班级为01 的学生, 按照年龄排序.
            var students3 = Entities("BP.Demo.BPFramework.Students", "XB", "0", "FK_BanJi", "01", "Age");
            alert("Students XB=0 ,FK_BanJi=01 查询到:" + students3.length);

        }
        function TestEns_Adv() {

            var emps = new Entities("BP.Port.Emps");
            var num=emps.RetrieveAll(); //调用查询全部，返回num个数量.
            alert("BP.Port.Emps查询到:" + emps.length);


            //获得性别为女的学生.
            var students = new Entities("BP.Demo.BPFramework.Students");
            students.Retrieve("XB", 0);
            alert("Students XB=0 查询到:" + students.length);

            //查询性别为女的并按照年龄排序.
            students.Retrieve("XB", 0, "Age");
            alert("Students XB=0 查询到:" + students.length);



            //查询性别为女的并班级=01的学生, 按照年龄排序.
            students.Retrieve("XB", 0, "FK_BanJi","01");
            alert("Students XB=0 查询到:" + students.length);


            //查询性别为女的并班级=01的学生, 按照年龄排序.
            students.Retrieve("XB", 0, "FK_BanJi", "01","Age");
            alert("Students XB=0 查询到:" + students.length);


            //获得性别为女的,并且班级为01 的学生.
            var students3 = Entities("BP.Demo.BPFramework.Students", "XB", "0", "FK_BanJi", "01");
            alert("Students XB=0 ,FK_BanJi=01 查询到:" + students3.length);


            //获得性别为女的,并且班级为01 的学生, 按照年龄排序.
            var students3 = Entities("BP.Demo.BPFramework.Students", "XB", "0", "FK_BanJi", "01", "Age");
            alert("Students XB=0 ,FK_BanJi=01 查询到:" + students3.length);

        }

        function ExecHttpHandlerMonthod() {

            //执行非静态的方法,有参数,仅仅传递指定的参数其他参数不处理.
            var handler = CreateHttpHandler("BP.WF.HttpHandler.WF_AppClassic");
            handler.AddUrlData();  //把url参数加入里面去.
            handler.AddFormData(); //把form数据加入里面去.

            handler.AddPara("TB_UserNo", "zhoupeng");
            handler.AddPara("TB_Pass", "123");


            //执行提交.
            var result = handler.Login_Submit();

            var result = handler.DoMethodReturnJSON("Login_Submit");
            var result = handler.DoMethodReturnString("Login_Submit");

            //处理结果.
            if (result.indexOf('err@') == 0) {
                alert(result); //登录失败.
                return;
            }
        }

        //直接访问数据库.
        function DBAccessRun() {

            var sql = "UPDATE Port_Emp SET Name='张三' WHERE No='zhangsan' ";
            var result = DBAccess.RunSQL(sql);
            alert("一共[" + result + "] 条记录被更新");

            sql = "SELECT No,Name FROM Demo_Student WHERE XB='0' ";
            var dt = DBAccess.RunSQLReturnTable(sql);
            alert("一共[" + dt.lenght + "] 条记录被查询到");
        }
    </script>
     
</head>
<body>



</body>
</html>
