<!DOCTYPE>
<html>
<head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <title>驰骋工作流程引擎设计器ccflow6</title>
     <!--引入CSS样式-->
    <link href="../../Scripts/bootstrap/css/bootstrap.min.css" rel="stylesheet" type="text/css" />
    <link href="../../Scripts/bootstrap/css/font-awesome.css" rel="stylesheet" type="text/css" />
    <link href="../../Style/skin/font/iconfont.css" rel="stylesheet" type="text/css" />
    <link href="../../../DataUser/Style/admin/skins/_all-skins.css" rel="stylesheet" type="text/css" />
    <link href="../../../DataUser/Style/admin/designer.css" rel="stylesheet" type="text/css" />

    <!--本页面CSS-->
    <link href="../CCFormDesigner/normalize/css/ns-default.css" rel="stylesheet" type="text/css" />
    <link href="../CCFormDesigner/normalize/css/ns-style-bar.css" rel="stylesheet" type="text/css" />

     <!--引入通用JS-->
    <script src="../../Scripts/jquery-1.11.0.min.js" type="text/javascript"></script>
    <script src="../../Scripts/QueryString.js" type="text/javascript" ></script>
    <script src="../../Scripts/config.js" type="text/javascript" ></script>
    <script src="../../Scripts/Cookie.js" type="text/javascript"></script>
    <script src="../../Comm/Gener.js" type="text/javascript"></script>

    <!--引入bootstrap的JS-->
    <script src="../../Scripts/bootstrap/js/bootstrap.min.js" type="text/javascript"></script>
    <script src="../../Scripts/bootstrap/BootstrapUIDialog.js" type="text/javascript"></script>
    <script src="../../Admin/CCFlowEnum.js" type="text/javascript"></script>  
    <script src="../../Comm/JS/layer/layer.js" type="text/javascript"></script>
    
    <!--本页面JS-->
   
    <script src="js/browserReady.js" type="text/javascript"></script>
    <script src="js/CCBPMDesignerData.js" type="text/javascript"></script>
    <script src="js/FuncTrees.js" type="text/javascript"></script>

    <script type="text/javascript">
        var osModel = 1;
        var runOnPlant = "BP";
        var initData = null;

        //退出
        function LoginOut() {
            if (confirm("定需要退出？") == false)
                return;
            window.location.href = "Login.htm?DoType=Logout";

        }

        //登陆前台页面
        function Login2App() {
            if (initData.RunOnPlant == "jeesite") {
                window.location.href = "/js/a/logout";
                return;
            }

            window.location.href = "../../AppClassic/Login.htm?DoType=Logout";
            return;
        }

        //弹出消息统一样式设置
        function BPMN_Msg(msg, callBack) {
            var notification = new NotificationFx({
                message: '<span class="icon icon-megaphone"></span><div class="ns-p"><p>' + msg + '</p></div>',
                layout: 'bar',
                effect: 'slidetop',
                type: 'notice', // notice, warning or error
                onClose: function () {
                    if (callBack) callBack();
                }
            });
            notification.show();
        }
    </script>
    
    
    <script type="text/javascript">
        var FLOW_TREE = "flowTree";
        var FORM_TREE = "formTree";
        var ORG_TREE = "OrgTree";

        //设计器加载完毕隐藏等待页面   待定
        function DesignerLoaded() {
            $(".mymask").hide();
        }

        //----------------------------------------------流程树节点操作 Start------------------------------------------------------------------------------------------

        /// <summary>新建流程</summary>
        function newFlow() {
            var currSort = $('#flowTree').tree('getSelected');
            var currSortId = "99";
            if (currSort && currSort.attributes["IsParent"] != 0) { //edit by qin 2016/2/16
                currSortId = $('#flowTree').tree('getSelected').id; //liuxc,20150323
            }
            var dgId = "iframDg";
            var url = "NewFlow.htm?sort=" + currSortId + "&s=" + Math.random();

            var W = document.body.clientWidth - 80;
            var H = document.body.clientHeight - 120;

            OpenBootStrapModal(url, "eudlgframe", '导入数据', W, H, "icon-new", true, function () {
                var win = document.getElementById(dgId).contentWindow;
                var newFlowInfo = win.getNewFlowInfo();

                if (newFlowInfo.flowName == null || newFlowInfo.flowName.length == 0 || newFlowInfo.flowSort == null || newFlowInfo.flowSort.length == 0) {
                    $.messager.alert('错误', '信息填写不完整', 'error');
                    return false;
                }
                var html = $("#ShowMsg").html();
                $("#ShowMsg").html(html + " ccbpm 正在创建流程请稍后....");
                $("#ShowMsg").css({ "width": "320px" });
                $(".mymask").show();

                var handler = new HttpHandler("BP.WF.HttpHandler.WF_Admin_CCBPMDesigner");
                handler.AddPara("paras", newFlowInfo.flowSort + ',' + newFlowInfo.flowName + ',' + newFlowInfo.dataStoreModel + ',' + newFlowInfo.pTable + ',' + newFlowInfo.flowCode + ',' + newFlowInfo.FlowVersion);
                var data = handler.DoMethodReturnString("NewFlow");
                if (data.indexOf('err@') == 0) {
                    alert(data);
                    return;
                }


                var flowNo = data;
                var flowName = newFlowInfo.flowName;

                //在左侧流程树上增加新建的流程,并选中
                //获取新建流程所属的类别节点
                //todo:此处还有问题，类别id与流程id可能重复，重复就会出问题，解决方案有待进一步确定
                var parentNode = $('#flowTree').tree('find', "F" + newFlowInfo.flowSort);
                var node = $('#flowTree').tree('append', {
                    parent: parentNode.target,
                    data: [{
                        id: flowNo,
                        text: flowNo + '.' + flowName,
                        attributes: { ISPARENT: '0', TTYPE: 'FLOW', DTYPE: newFlowInfo.FlowVersion, MenuId: "mFlow", Url: "Designer.htm?FK_Flow=@@id&UserNo=@@WebUser.No&SID=@@WebUser.SID" },
                        iconCls: 'icon-flow1',
                        checked: false
                    }]
                });
                var nodeData = {
                    id: flowNo,
                    text: flowNo + '.' + flowName,
                    attributes: { ISPARENT: '0', TTYPE: 'FLOW', DTYPE: newFlowInfo.FlowVersion, MenuId: "mFlow", Url: "Designer.htm?FK_Flow=@@id&UserNo=@@WebUser.No&SID=@@WebUser.SID" },
                    iconCls: 'icon-flow1',
                    checked: false
                };
                //展开到指定节点
                $('#flowTree').tree('expandTo', $('#flowTree').tree('find', flowNo).target);
                $('#flowTree').tree('select', $('#flowTree').tree('find', flowNo).target);

                //在右侧流程设计区域打开新建的流程
                RefreshFlowJson();

            }, null, null, null, 'black'); 

            
        }

        /// <summary>新建流程类别子级</summary>
        /// <param name="isSub" type="Boolean">是否是新建子级流程类别</param>
        function newFlowSort(isSub) {

            var currSort = $('#flowTree').tree('getSelected');
            if (currSort == null || undefined == currSort.attributes.ISPARENT ||
                currSort.attributes.ISPARENT != '1' || (currSort.attributes.IsRoot == '1' && isSub == false))
                return;

            var propName = (isSub ? '子级' : '同级') + '流程类别';
            var val = window.prompt(propName, '');
            if (val == null || val.length == 0) {
                alert('必须输入名称.');
                return false;
            }

            //传入参数
            var doWhat = isSub ? 'NewSubFlowSort' : 'NewSameLevelFlowSort';
            var handler = new HttpHandler("BP.WF.HttpHandler.WF_Admin_CCBPMDesigner");
            handler.AddPara("No", currSort.id);
            handler.AddPara("Name", val);
            var data = handler.DoMethodReturnString(doWhat);
            if (data.indexOf("err@") != -1) {
                alert(data);
                return;
            }
            var parentNode = isSub ? currSort : $('#flowTree').tree('getParent', currSort.target);

            $('#flowTree').tree('append', {
                parent: parentNode.target,
                data: [{
                    id: data,
                    text: val,
                    attributes: { ISPARENT: '1', MenuId: "mFlowSort", TType: "FLOWTYPE" },
                    checked: false,
                    iconCls: 'icon-flowtree',
                    state: 'open',
                    children: []
                }]
            });

            $('#flowTree').tree('select', $('#flowTree').tree('find', data).target);


        }

        //导入流程模板
        function ImpFlowBySort() {
            var currFlow = $('#flowTree').tree('getSelected');
            var fk_flowSort = currFlow.id;
            fk_flowSort = fk_flowSort.replace("F", "");
            url = "./../AttrFlow/Imp.htm?FK_FlowSort=" + fk_flowSort + "&Lang=CH";
            addTab(fk_flowSort + "PO", "导入流程模版", url);
        }


        //修改流程类别
        function editFlowSort() {
            /// <summary>编辑流程类别</summary>
            var currSort = $('#flowTree').tree('getSelected');
            if (currSort == null)
                return;

            var val = prompt("请输入类别名称", currSort.text);
            if (val == null || val == '')
                return;

            var handler = new HttpHandler("BP.WF.HttpHandler.WF_Admin_CCBPMDesigner");
            handler.AddPara("No", currSort.id);
            handler.AddPara("Name", val);
            var data = handler.DoMethodReturnString("EditFlowSort");
            if (data.indexOf("err@") != -1) {
                alert(data);
                return;
            }

            $('#flowTree').tree('update', {
                target: currSort.target,
                text: val
            });

        }

        function deleteFlowSort() {
            /// <summary>删除流程类别</summary>
            var currSort = $('#flowTree').tree('getSelected');
            if (currSort == null || currSort.attributes.IsParent == undefined) return;
            if (confirm("你确定要删除名称为“" + currSort.text + "”的流程类别吗？") == false)
                return;

            var handler = new HttpHandler("BP.WF.HttpHandler.WF_Admin_CCBPMDesigner");
            handler.AddPara("FK_FlowSort", currSort.id);
            var data = handler.DoMethodReturnString("DelFlowSort");
            if (data.indexOf("err@") != -1) {
                alert(data);
                return;
            }

            alert(data);
            //删除节点
            $('#flowTree').tree('remove', currSort.target);

            
        }

        /// <summary>流程树节点属性</summary>
        function viewFlowSort() {

            var currSort = $('#flowTree').tree('getSelected');
            var currSortId = "99";
            if (currSort && currSort.attributes["ISPARENT"] != 0) {
                currSortId = $('#flowTree').tree('getSelected').id;
            }

            currSortId = currSortId.replace(/'F'/, '');
            currSortId = currSortId.replace("F", "");

            var dgId = "iframDgView";
          //  var url = "viewFlowShort.htm?sort=" + currSortId + "&s=" + Math.random();
            var url = "../../Comm/EnOnly.htm?EnName=BP.WF.Template.FlowSort&No=" + currSortId + "&s=" + Math.random();

            OpenEasyUiDialog(url, dgId, '流程树节点属性', 420, 300, 'icon-flow', false, function () {

                var win = document.getElementById(dgId).contentWindow;


            }, null);
        }

        //上移流程类别
        function moveUpFlowSort() {
            var currSort = $('#flowTree').tree('getSelected');
            if (currSort == null) return;

            var handler = new HttpHandler("BP.WF.HttpHandler.WF_Admin_CCBPMDesigner");
            handler.AddPara("FK_FlowSort", currSort.id);
            var data = handler.DoMethodReturnString("MoveUpFlowSort");
            if (data.indexOf("err@") != -1) {
                alert(data);
                return;
            }

            var before = $(currSort.target).parent().prev();
            if (before.length == 0 || $('#flowTree').tree('getData', before.children()[0]).attributes.TTYPE != "FLOWTYPE") {
                return;
            }

            $(currSort.target).parent().insertBefore(before);

           
        }

        //下移流程类别
        function moveDownFlowSort() {
            var currSort = $('#flowTree').tree('getSelected');
            if (currSort == null) return;

            var handler = new HttpHandler("BP.WF.HttpHandler.WF_Admin_CCBPMDesigner");
            handler.AddPara("FK_FlowSort", currSort.id);
            var data = handler.DoMethodReturnString("MoveDownFlowSort");
            if (data.indexOf("err@") != -1) {
                alert(data);
                return;
            }
            var next = $(currSort.target).parent().next();
            if (next.length == 0 || $('#flowTree').tree('getData', next.children()[0]).attributes.TTYPE != "FLOWTYPE") {
                return;
            }

            $(currSort.target).parent().insertAfter(next);
        }


        //----------------------------------------------流程树节点操作 End------------------------------------------------------------------------------------------


        //----------------------------------------------流程属性操作 Start------------------------------------------------------------------------------------------
        //导入流程
        function ImpFlow() {
            var currFlow = $('#flowTree').tree('getSelected');
            if (currFlow == null || currFlow.attributes.ISPARENT != '0') {
                alert('没有获得当前的流程编号.');
                return;
            }
            var fk_flow = currFlow.id;
            url = "./../AttrFlow/Imp.htm?FK_Flow=" + fk_flow + "&Lang=CH";
            addTab(fk_flow + "PO", "导入流程模版", url);
        }

       
        //添加流程到流程树
        function AppendFlowToFlowSortTree(FK_FlowSort, FK_Flow, FlowName) {
            var flowSortNode = $('#flowTree').tree('find', "F" + FK_FlowSort);
            $('#flowTree').tree('append', {
                parent: flowSortNode.target,
                data: [{
                    id: FK_Flow,
                    text: FK_Flow + "." + FlowName,
                    attributes: { ISPARENT: '0', MenuId: "mFlow", TType: "FLOW" },
                    checked: false,
                    iconCls: 'icon-flow1',
                    state: 'open',
                    children: []
                }]
            });

            $("#flowTree").tree("expand", flowSortNode.target);
            $('#flowTree').tree('select', $('#flowTree').tree('find', FK_Flow).target);

            //在右侧流程设计区域打开新建的流程
            RefreshFlowJson();
        }

        //导出流程
        function ExpFlow() {
            var currFlow = $('#flowTree').tree('getSelected');
            if (currFlow == null || currFlow.attributes.ISPARENT != '0') {
                alert('没有获得当前的流程编号.');
                return;
            }

            var fk_flow = currFlow.id;
            url = "./../AttrFlow/Exp.htm?FK_Flow=" + fk_flow + "&Lang=CH";
            addTab(fk_flow + "PO", "导出流程模版", url);
        }

        //删除流程
        function DeleteFlow() {
            /// <summary>删除流程</summary>
            var currFlow = $('#flowTree').tree('getSelected');
            if (currFlow == null || currFlow.attributes.ISPARENT != '0')
                return;

            if (window.confirm("你确定要删除名称为“" + currFlow.text + "”的流程吗？") == false)
                return;

            //执行删除流程.
            var en = new Entity("BP.WF.Flow", currFlow.id);
            var data = en.DoMethodReturnString("DoDelete");
            alert(data);
            if (data.indexOf('err@') == 0) {
                alert(data);
                return;
            }

            //如果右侧有打开该流程，则关闭
            var currFlowTab = $('#tabs').tabs('getTab', currFlow.text);
            if (currFlowTab) {
                //todo:此处因为有关闭前事件，直接这样用会弹出提示关闭框，怎么解决有待进一步确认
                $('#tabs').tabs('close', currFlow.text);
            }
            $('#flowTree').tree('remove', currFlow.target);
        }

        //流程属性,树上的.
        function FlowProperty() {

            var currFlow = $('#flowTree').tree('getSelected');
            if (currFlow == null || currFlow.attributes.ISPARENT != '0')
                return;

            var userNo = GetQueryString("UserNo");

            var fk_flow = currFlow.id;
            url = "../../Comm/En.htm?DoType=En&EnName=BP.WF.Template.FlowExt&PKVal=" + fk_flow + "&Lang=CH&UserNo=" + WebUser.No;
            addTab(currFlow + "PO", "流程属性" + fk_flow, url);

        }

        //上移流程
        function moveUpFlow() {
            var currFlow = $('#flowTree').tree('getSelected');
            if (currFlow == null || currFlow.attributes.ISPARENT != '0')
                return;

            var handler = new HttpHandler("BP.WF.HttpHandler.WF_Admin_CCBPMDesigner");
            handler.AddPara("FK_Flow", currFlow.id);
            var data = handler.DoMethodReturnString("MoveUpFlow");
            if (data.indexOf("err@") != -1) {
                alert(data);
                return;
            }

            var before = $(currFlow.target).parent().prev();
            if (before.length == 0 || $('#flowTree').tree('getData', before.children()[0]).attributes.TTYPE != "FLOW") {
                return;
            }

            $(currFlow.target).parent().insertBefore(before);

            
        }

        //下移流程
        function moveDownFlow() {
            var currFlow = $('#flowTree').tree('getSelected');
            if (currFlow == null || currFlow.attributes.ISPARENT != '0')
                return;

            var handler = new HttpHandler("BP.WF.HttpHandler.WF_Admin_CCBPMDesigner");
            handler.AddPara("FK_Flow", currFlow.id);
            var data = handler.DoMethodReturnString("MoveDownFlow");
            if (data.indexOf("err@") != -1) {
                alert(data);
                return;
            }

            var next = $(currFlow.target).parent().next();
            if (next.length == 0 || $('#flowTree').tree('getData', next.children()[0]).attributes.TTYPE != "FLOW") {
                return;
            }

            $(currFlow.target).parent().insertAfter(next);
        }
        //----------------------------------------------流程属性操作 End------------------------------------------------------------------------------------------

        //----------------------------------------------表单树节点操作 Start------------------------------------------------------------------------------------------
        //新建表单树类别
        function newCCFormSort(isSub) {

            var currCCFormSort = $('#formTree').tree('getSelected');
            if (currCCFormSort == null || currCCFormSort.attributes.TType != "FORMTYPE")
                return;

            var propName = (isSub ? '子级' : '同级') + '表单类别';

            OpenEasyUiSampleEditDialog(propName, '新建', null, function (val) {
                if (val == null || val.length == 0) {
                    $.messager.alert('错误', '请输入' + propName + '！', 'error');
                    return false;
                }

                //执行的方法
                var doWhat = isSub ? 'CCForm_NewSubSort' : 'CCForm_NewSameLevelSort';

                var handler = new HttpHandler("BP.WF.HttpHandler.WF_Admin_CCBPMDesigner");
                handler.AddPara("No", currCCFormSort.id);
                handler.AddPara("Name", val);
                var data = handler.DoMethodReturnString(doWhat);
                if (data.indexOf("err@") != -1) {
                    alert(data);
                    return;
                }
                var parentNode = isSub ? currCCFormSort : $('#formTree').tree('getParent', currCCFormSort.target);

                $('#formTree').tree('append', {
                    parent: parentNode.target,
                    data: [{
                        id: data,
                        text: val,
                        attributes: { MenuId: "mFormSort", TType: "FORMTYPE" },
                        checked: false,
                        iconCls: 'icon-tree_folder',
                        state: 'open',
                        children: []
                    }]
                });

                $('#formTree').tree('select', $('#formTree').tree('find', data).target);
              
               
            }, null, false, 'icon-new');
        }

        //编辑表单树类别
        function EditCCFormSort() {

            var currCCFormSort = $('#formTree').tree('getSelected');
            if (currCCFormSort == null || currCCFormSort.attributes.TType != "FORMTYPE")
                return;

            OpenEasyUiSampleEditDialog("编辑类别名称", '', currCCFormSort.text, function (val) {
                if (val == null || val.length == 0) {
                    $.messager.alert('错误', '请输入类别名称', 'error');
                    return false;
                }

                //传入参数
                var params = {
                    action: "CCForm_EditCCFormSort",
                    No: currCCFormSort.id,
                    Name: val
                };

                var handler = new HttpHandler("BP.WF.HttpHandler.WF_Admin_CCBPMDesigner");
                handler.AddPara("No", currCCFormSort.id);
                var data = handler.DoMethodReturnString("CCForm_EditCCFormSort");
                if (data.indexOf("err@") != -1) {
                    alert(data);
                    return;
                }
                $('#formTree').tree('update', {
                    target: currCCFormSort.target,
                    text: val
                });
                $('#formTree').tree('select', $('#formTree').tree('find', data).target);

               
            }, null, false, 'icon-new');
        }
        //删除表单树类别
        function DeleteCCFormSort() {
            var currFormSort = $('#formTree').tree('getSelected');
            if (currFormSort == null || currFormSort.attributes.TType != 'FORMTYPE')
                return;

            OpenEasyUiConfirm("你确定要删除名称为“" + currFormSort.text + "”的类别吗？", function () {

                var handler = new HttpHandler("BP.WF.HttpHandler.WF_Admin_CCBPMDesigner");
                handler.AddPara("No", currCCFormSort.id);
                var data = handler.DoMethodReturnString("CCForm_DelFormSort");
                if (data.indexOf("err@") != -1) {
                    alert(data);
                    return;
                }
                alert(data);
                $('#flowTree').tree('remove', currFormSort.target);

               
            });
        }

        //上移表单类别
        function moveUpCCFormSort() {
            var currFormSort = $('#formTree').tree('getSelected');
            if (currFormSort == null)
                return;

            var handler = new HttpHandler("BP.WF.HttpHandler.WF_Admin_CCBPMDesigner");
            handler.AddPara("No", currCCFormSort.id);
            var data = handler.DoMethodReturnString("CCForm_MoveUpCCFormSort");
            if (data.indexOf("err@") != -1) {
                alert(data);
                return;
            }

            var before = $(currFormSort.target).parent().prev();
            if (before.length == 0 || $('#formTree').tree('getData', before.children()[0]).attributes.TType != "FORMTYPE") {
                return;
            }

            $(currFormSort.target).parent().insertBefore(before);

        }

        //下移表单类别
        function moveDownCCFormSort() {
            var currFormSort = $('#formTree').tree('getSelected');
            if (currFormSort == null)
                return;

            var handler = new HttpHandler("BP.WF.HttpHandler.WF_Admin_CCBPMDesigner");
            handler.AddPara("No", currCCFormSort.id);
            var data = handler.DoMethodReturnString("CCForm_MoveUpCCFormSort");
            if (data.indexOf("err@") != -1) {
                alert(data);
                return;
            }

            var next = $(currFormSort.target).parent().next();
            if (next.length == 0 || $('#formTree').tree('getData', next.children()[0]).attributes.TType != "FORMTYPE") {
                return;
            }

            $(currFormSort.target).parent().insertAfter(next);

           
        }
        //----------------------------------------------表单树节点操作 End------------------------------------------------------------------------------------------

        //----------------------------------------------表单属性操作 End------------------------------------------------------------------------------------------
        //新建表单
        function newFrm() {
            var node = $('#formTree').tree('getSelected');
            if (!node) {
                return;
            }

            var url = "../CCFormDesigner/NewFrmGuide.htm?Step=0";
            if (node.attributes) {
                if (node.attributes.TType == "SRC") {
                    url += "&Src=" + node.id;
                } else if (node.attributes.TType == "FORMTYPE") {
                    //在表单类别上单击，则传递表单类别
                    var pnode = $('#formTree').tree('getParent', node.target);
                    if (pnode != null) {
                        url += "&FK_FrmSort=" + node.id;

                        while (pnode && pnode.attributes) {
                            if (pnode.attributes.TType == "SRC") {
                                url += "&Src=" + pnode.id;
                                break;
                            }
                            pnode = $('#formTree').tree('getParent', pnode.target);
                        }
                    }
                }
            }
            //如果右侧有打开该表单，则关闭
            var currTab = $('#tabs').tabs('getTab', "新建表单");
            if (currTab) {
                $('#tabs').tabs('close', "新建表单");
            }
            addTab("NewFrm", "新建表单", url);
        }

        ///表单树添加表单项
        ///FK_FormTree:表单类别编号，No:表单编号，Name:表单名称
        function AppendFrmToFormTree(FK_FormTree, No, Name) {
            var sortNode = $('#formTree').tree('find', FK_FormTree);
            $('#formTree').tree('append', {
                parent: sortNode.target,
                data: [{
                    id: No,
                    text: Name,
                    attributes: { MenuId: "mForm", TType: "FORM", Url: "../CCFormDesigner/GoToFrmDesigner.htm?FK_MapData=" + No },
                    checked: false,
                    iconCls: 'icon-form',
                    state: 'open',
                    children: []
                }]
            });
            $("#formTree").tree("expand", sortNode.target);
            $('#formTree').tree('select', $('#formTree').tree('find', No).target);

            //打开表单
            addTab("DesignerFreeFrm" + No, Name, "../CCFormDesigner/GoToFrmDesigner.htm?FK_MapData=" + No);
        }

        //表单属性
        function CCForm_Attr() {
            var node = $('#formTree').tree('getSelected');
            if (!node) {
                alert('请选择表单.');
                return;
            }
            var url = '../../Comm/En.htm?EnName=BP.WF.Template.MapFrmFree&PKVal=' + node.id;
            OpenEasyUiDialog(url, "CCForm_Attr", '表单属性', 900, 560, "icon-window");
        }

        //设计自由表单
        function designFreeFrm() {
            var node = $('#formTree').tree('getSelected');
            if (!node) {
                alert('请选择表单.');
                return;
            }
            addTab("DesignerFreeFrm" + node.id, node.text, "../CCFormDesigner/GoToFrmDesigner.htm?FK_MapData=" + node.id);
        }

        //设计傻瓜表单
        function designFoolFrm() {
            var node = $('#formTree').tree('getSelected');
            if (!node) {
                alert('请选择表单.');
                return;
            }
            addTab("DesignerFoolFrm" + node.id, node.text, "../FoolFormDesigner/Designer.htm?FK_MapData=" + node.id + "&IsFirst=1&MyPK=" + node.id + "&IsEditMapData=True");
        }

       
        //上移表单
        function moveUpCCFormTree() {
            var currForm = $('#formTree').tree('getSelected');
            if (currForm == null)
                return;

            var handler = new HttpHandler("BP.WF.HttpHandler.WF_Admin_CCBPMDesigner");
            handler.AddPara("FK_MapData", currForm.id);
            var data = handler.DoMethodReturnString("CCForm_MoveUpCCFormTree");
            if (data.indexOf("err@") != -1) {
                alert(data);
                return;
            }
            var before = $(currForm.target).parent().prev();
            if (before.length == 0 || $('#formTree').tree('getData', before.children()[0]).attributes.TType != "FORM") {
                return;
            }

            $(currForm.target).parent().insertBefore(before);
        }

        //下移表单
        function moveDownCCFormTree() {
            var currForm = $('#formTree').tree('getSelected');
            if (currForm == null)
                return;

            var handler = new HttpHandler("BP.WF.HttpHandler.WF_Admin_CCBPMDesigner");
            handler.AddPara("FK_MapData", currForm.id);
            var data = handler.DoMethodReturnString("CCForm_MoveDownCCFormTree");
            if (data.indexOf("err@") != -1) {
                alert(data);
                return;
            }

            var next = $(currForm.target).parent().next();
            if (next.length == 0 || $('#formTree').tree('getData', next.children()[0]).attributes.TType != "FORM") {
                return;
            }

            $(currForm.target).parent().insertAfter(next);
        }

        //删除表单
        function deleteCCFormTreeMapData() {
            var currForm = $('#formTree').tree('getSelected');
            if (currForm == null)
                return;

            OpenEasyUiConfirm("你确定要删除名称为“" + currForm.text + "”的表单吗？", function () {
                var handler = new HttpHandler("BP.WF.HttpHandler.WF_Admin_CCBPMDesigner");
                handler.AddPara("FK_MapData", currForm.id);
                var data = handler.DoMethodReturnString("CCForm_DeleteCCFormMapData");
                if (data.indexOf("err@") != -1) {
                    alert(data);
                    return;
                }
                alert("删除成功！");
                //如果右侧有打开该表单，则关闭
                var currTab = $('#tabs').tabs('getTab', currForm.text);
                if (currTab) {
                    $('#tabs').tabs('close', currForm.text);
                }
                //删除节点
                $('#formTree').tree('remove', currForm.target);

            });
        }


        //----------------------------------------------表单属性操作 End------------------------------------------------------------------------------------------
    </script>
   
   

   
    
</head>
<body class="hold-transition skin-blue sidebar-mini" style="overflow:hidden;">
	<!--<div id="ajax-loader" style="cursor: progress; position: fixed; top: -50%; left: -50%; width: 200%; height: 200%; background: #fff; z-index: 10000; overflow: hidden; display:hidden" >
		    <img src="img/ajax-loader.gif" style="position: absolute; top: 0; left: 0; right: 0; bottom: 0; margin: auto;" />
	</div>-->
	<div class="wrapper">
		<!--头部信息-->
		<header class="main-header">
			<a href="#" target="_blank" class="logo">
				<span class="logo-mini">CCFLOW</span>
				<span class="logo-lg"><strong>CCFLOW</strong></span>
			</a>
			<nav class="navbar navbar-static-top">
				<a class="sidebar-toggle">
					<span class="sr-only">Toggle navigation</span>
				</a>
				<div class="navbar-custom-menu">
					<ul class="nav navbar-nav">
                        <li class="dropdown">
                            <a href="javaScript:void(0)" data-toggle="dropdown" id="Login2App"  onclick="Login2App()">登陆前台</a>
                        </li>
						<li class="dropdown user user-menu">
							<a href="#" data-toggle="dropdown">
								<img src="img/user2-160x160.jpg" class="user-image" alt="User Image">
								<span class="hidden-xs">administrator</span>
							</a>
							<ul class="dropdown-menu pull-right">
								<li><a class="menuItem" data-id="userInfo" href="../../Setting/Default.htm"><i class="fa fa-user"></i>个人信息</a></li>
								<li><a href="javascript:void();"><i class="fa fa-trash-o"></i>清空缓存</a></li>
								<li><a href="javascript:void();"><i class="fa fa-paint-brush"></i>皮肤设置</a></li>
								<li class="divider"></li>
								<li><a href="javaScript:void(0)" onclick="LoginOut()"><i class="ace-icon fa fa-power-off"></i>安全退出</a></li>
							</ul>
						</li>
					</ul>
				</div>
			</nav>
		</header>
		<!--左边导航-->
		<div class="main-sidebar">
			<div class="sidebar">
				<div class="sidebar-shortcuts" id="sidebar-shortcuts">
					<div class="sidebar-shortcuts-large" id="sidebar-shortcuts-large" style="padding: 6px 5px;text-align:left">
						<button class="btn btn-blue">
                            <span class="tabs-title">流程树</span>
						</button>

						<button class="btn">
                            <span class="tabs-title">表单树</span>
							
						</button>

						<button class="btn">
                            <span class="tabs-title">系统管理</span>
							
						</button>
					</div>
				</div>
			<div id="sidebar">	
              <ul class="sidebar-menu" id="sidebar-menu">	
              </ul>		
				
				<!-- /.nav-list -->
			</div>
				
			</div>
		</div>
		<!--中间内容-->
		<div id="content-wrapper" class="content-wrapper">
			<div class="content-tabs">
				<button class="roll-nav roll-left tabLeft">
					<i class="fa fa-backward"></i>
				</button>
				<nav class="page-tabs menuTabs">
					<div class="page-tabs-content" style="margin-left: 0px;">
						<a href="javascript:;" class="menuTab active" data-id="default.html">欢迎首页</a>
					</div>
				</nav>
				<button class="roll-nav roll-right tabRight">
					<i class="fa fa-forward" style="margin-left: 3px;"></i>
				</button>
				<div class="btn-group roll-nav roll-right">
					<button class="dropdown tabClose" data-toggle="dropdown">
						页签操作<i class="fa fa-caret-down" style="padding-left: 3px;"></i>
					</button>
					<ul class="dropdown-menu dropdown-menu-right">
						<li><a class="tabReload" href="javascript:void(0);">刷新当前</a></li>
						<li><a class="tabCloseCurrent" href="javascript:void(0);">关闭当前</a></li>
						<li><a class="tabCloseAll" href="javascript:void(0);">全部关闭</a></li>
						<li><a class="tabCloseOther" href="javascript:void(0);">除此之外全部关闭</a></li>
					</ul>
				</div>
				<button class="roll-nav roll-right fullscreen"><i class="fa fa-arrows-alt"></i></button>
			</div>
			<div class="content-iframe" style="overflow: hidden;">
				<div class="mainContent" id="content-main" style="margin: 10px; margin-bottom: 0px; padding: 0;">
					<iframe class="LRADMS_iframe" width="100%" height="100%" src="../../../DataUser/AppCoder/FlowDesignerWelcome.htm" frameborder="0" data-id="Welcome.htm"></iframe>
				</div>
			</div>
		</div>
	</div>

    <a class="menuItem" data-id="" href="" style="display:none" id='ifnum'></a>
	<div style="display:none" id="ifback"></div>

     <script src="js/Default.js" type="text/javascript"></script>
	<script type="text/javascript">
        <!--初始化页面-- >
        $(function () {
            //获取使用的用户及使用的平台
            var handler = new HttpHandler("BP.WF.HttpHandler.WF_Admin_CCBPMDesigner");
            var data = handler.DoMethodReturnString("Default_Init");
            if (data.indexOf('err@') == 0) {
                alert(data);
                return;
            }
            if (data.indexOf('url@') == 0) {
                var url = data.replace('url@', '');
                window.location.href = url;
                return;
            }
            data = JSON.parse(data);
            initData = data;

            if (data.CustomerNo == "TianYe" || data.CustomerNo == "TianYe1") {
                $("#Login2App").html("");
            }

            //初始化页面
            InitPage();
            $.learunindex.load();
            $.learunindex.loadMenu(FLowJson, "Designer.htm?FK_Flow=@@id&UserNo=" + webUser.No + "&SID=" + webUser.SID + "&Flow_V=1");
            $.learuntab.init();
        });
        var FLowJson = "";
        var FromJSon = "";
        var SystemJson = "";
        var webUser = new WebUser();

        //处理数据
        function InitPage() {
            //获取流程、表单、系统管理的JSON数据

            //流程树
            var handler = new HttpHandler("BP.WF.HttpHandler.WF_Admin_CCBPMDesigner");
            var data = handler.DoMethodReturnString("GetFlowTreeTable2019");
            if (data.indexOf("err@") != -1) {
                alert(data);
                return;
            }
            FLowJson = JSON.parse(data);

            //表单结构
            var handler = new HttpHandler("BP.WF.HttpHandler.WF_Admin_CCBPMDesigner");
            var data = handler.DoMethodReturnString("GetFormTreeTable");
            if (data.indexOf("err@") != -1) {
                alert(data);
                return;
            }
            FromJSon = JSON.parse(data);

            //系统结构
            data = handler.DoMethodReturnString("GetTreeJson_AdminMenu");
            if (data.indexOf("err@") != -1) {
                alert(data);
                return;
            }
            SystemJson = JSON.parse(data);
        }

        $("#sidebar-shortcuts-large button").click(function () {
            var index = $(this).index();
            if (index == 0) { //流程树
                $.learunindex.loadMenu(FLowJson,"Designer.htm?FK_Flow=@@id&UserNo="+webUser.No+"&SID="+webUser.SID+"&Flow_V=1");
            }
            if (index == 1) { //表单树
                $.learunindex.loadMenu(FromJSon,"../CCFormDesigner/GoToFrmDesigner.htm?FK_MapData=@@id&UserNo="+webUser.No+"&SID="+webUser.SID);
            }
            if (index == 2) { //系统管理
                $.learunindex.loadMenu(SystemJson,"");
            }
            $("#sidebar-shortcuts-large button").eq($(this).index()).addClass("btn-blue").siblings().removeClass('btn-blue');
            $("#sidebar>ul").eq($("#sidebar-shortcuts-large button").index(this)).addClass("on").siblings().removeClass('on');
        });


        function ifnum(){
			var ifback = $.trim($('#ifback').html());	
			var arr = ifback.split('|');		
			var menuName=$('#ifnum').text(arr['0']);
			$("#ifnum").attr({"href" : arr['2'],"data-id" : arr['1'],
    		});
			if(menuName)
			 $("#ifnum").click();

	 } 
	</script>
</body>
</html>
