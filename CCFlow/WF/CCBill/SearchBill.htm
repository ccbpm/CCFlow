<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <meta name="renderer" content="webkit">
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">
    <title>单据列表</title>
    <!--jquery-->
    <script src="../Scripts/jquery-1.11.0.min.js" type="text/javascript"></script>
    <!--公共JS-->
    <script src="../Scripts/QueryString.js" type="text/javascript"></script>
    <script src="../Scripts/config.js" type="text/javascript"></script>
    <script src="../Comm/Gener.js" type="text/javascript"></script>

    <link href="../Scripts/layui/layui/css/layui.css" rel="stylesheet" />
    <link href="../Scripts/layui/style/admin.css" rel="stylesheet" />
    <script src="../Scripts/layui/layui/layui.js" type="text/javascript"></script>
    <script src="../Scripts/layui/LayuiDialog.js" type="text/javascript"></script>
    <script src="Search.js" type="text/javascript"></script>
    <style id="theme-data"></style>
</head>
<body>
    <div class="layui-fluid">
        <div class="layui-row layui-col-space15">
            <!-- 内容主体区域 -->
            <div class="layui-col-md12">
                <div class="layui-card">
                    <div class="layui-card-body">
                        <div id="view"></div>
                        <table class="layui-hide" id="lay_table_bill" lay-filter="bill"></table>
                        <div id="page"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <script id="toolbar" type="text/html">
        <div class="layui-form">
            <div class="layui-form-item">
                {{#  layui.each(d.inputSearch, function(index, item){ }}
                <div class="layui-inline">
                    <label class="layui-form-label">{{item.label}}</label>
                    <div class="layui-input-inline">
                        <input type="text" class="layui-input" id="TB_{{=item.key}}" name="TB_{{=item.key}}" value="{{item.value}}" />
                    </div>
                </div>
                {{#  }); }}
                {{#  layui.each(d.dateSearch, function(index, item){ }}
                <div class="layui-inline">
                    <label class="layui-form-label">{{item.dtFromLabel}}</label>
                    <div class="layui-input-inline">
                        <i class="input-icon layui-icon layui-icon-date"></i>
                        <input type="text" class="layui-input ccdate" data-info="{{=item.dtType}}" id="TB_{{=item.dtFromKey}}" name="TB_{{=item.dtFromKey}}" value="{{=item.dtFromValue}}" style="padding-left: 40px;" />
                    </div>
                    <label class="layui-form-label" style="width:10px">到</label>
                    <div class="layui-input-inline">
                        <i class="input-icon layui-icon layui-icon-date"></i>
                        <input type="text" class="layui-input ccdate" data-info="{{=item.dtType}}" id="TB_{{=item.dtToKey}}" name="TB_{{=item.dtToKey}}" value="{{=item.dtToValue}}" style="padding-left: 40px;" />
                    </div>
                </div>
                {{#  }); }}
                {{#  layui.each(d.selectSearch, function(index, item){ }}
                <div class="layui-inline">
                    <label class="layui-form-label">{{item.label}}</label>
                    <div class="layui-input-inline">
                        <select class="layui-input" id="DDL_{{=item.key}}" name="DDL_{{=item.key}}" value="{{item.value}}">
                            {{#  layui.each(item.operations, function(k, opt){ }}
                            <option value="{{opt.value}}" selected="{{=opt.selected}}">{{opt.name}}</option>
                            {{#  }); }}
                        </select>
                    </div>
                </div>
                {{#  }); }}
                <div class="layui-inline">
                    <div class="layui-btn-container" style=" padding-top: 10px; ">
                        {{#  layui.each(d.btns, function(index, item){ }}
                        <button type="button" class="layui-btn layui-btn-sm" data-type="{{=item.type}}" data-params="{{=item.params}}">{{item.label}}</button>
                        {{#  }); }}
                    </div>
                </div>
            </div>
        </div>
    </script>
    <script>
        var frmID = GetQueryString("FrmID");
        var ur = null;
        var webUser = new WebUser();
        var pageIdx = 1;
        var pageSize = 10;
        var orderBy = "";
        var orderWay = "DESC";
        var frmBill = new Entity("BP.CCBill.FrmBill", frmID);
        var mapData = frmBill;
        var isHaveDelOper = false;
        var isHaveSeachOper = false;
        layui.use(['table', 'laytpl', 'form', 'laydate'], function () {
            var table = layui.table,
                laytpl = layui.laytpl,
                form = layui.form,
                laydate = layui.laydate;

            document.title = frmBill.Name;

            //初始化用户查询信息
            //当前用户查询信息.
            ur = new Entity("BP.Sys.UserRegedit");
            ur.MyPK = webUser.No + frmID + "_SearchAttrs";
            ur.RetrieveFromDBSources();

            //渲染查询条件
            var getTpl = document.getElementById("toolbar").innerHTML
                , view = document.getElementById('view');
            laytpl(getTpl).render(InitToolBar(), function (html) {
                view.innerHTML = html;
            });
            $.each(searchData["selectSearch"], function (i, item) {
                $("#DDL_" + item.key).val(item.value);
            })
            form.render();
            if ($(".ccdate").length > 0) {
                $.each($(".ccdate"), function (i, item) {
                    laydate.render({
                        elem: '#' + item.id //指定元素
                        , type: $(item).attr("data-info")
                    });
                })
            }
            //获取列
            var cols = GetColoums(frmBill.GetPara("MultiTitle1"), frmBill.GetPara("MultiTitle"), frmBill.ColorSet, frmBill.SortColumns, parseInt(frmBill.RowOpenModel), frmBill.Name, 2);
            var tableData = SearchData();
            //渲染table
            //主页面数据
            var vtable = table.render({
                elem: '#lay_table_bill',
                id: 'lay_table_bill',
                data: tableData,
                title: '数据表',
                height: $(document).height() - $("#view").height() - 130,
                cellMinWidth: 120,
                size: 'lg',
                cols: cols,
                page: false
            });
            renderLaypage();
            //触发行双击事件
            table.on('rowDouble(bill)', function (obj) {
                var row = obj.data;
                var pkval = row["OID"];


                OpenIt(pkval, frmID, parseInt(frmBill.RowOpenModel), frmBill.Name, 1, row["BillState"]);
            });

            table.on('sort(bill)', function (obj) { //注：sort 是工具条事件名，test 是 table 原始容器的属性 lay-filter="对应的值"
                orderBy = obj.field; //当前排序的字段名
                orderWay = obj.type;//当前排序类型：desc（降序）、asc（升序）、null（空对象，默认排序）
                //尽管我们的 table 自带排序功能，但并没有请求服务端。
                //有些时候，你可能需要根据当前排序的字段，重新向服务端发送请求，从而实现服务端排序，如：
                tableData = SearchData();
                table.reload('lay_table_bill', tableData);

            });

            //工具栏的操作
            $('#view .layui-btn').on('click', function () {
                var type = $(this).data('type');
                switch (type) {
                    case "search":
                        Search();
                        break;
                    case "add"://新增
                        var methodNo = GetQueryString("MethodNo");
                        methodNo = methodNo == null || methodNo == undefined ? "" : methodNo;
                        var pworkid = GetQueryString("PWorkID");
                        pworkid = pworkid == null || pworkid == undefined ? 0 : pworkid;
                        if (methodNo != "" && pworkid != 0) {
                            window.location.href = "./Opt/GotoLink.htm?FrmID=" + GetQueryString("FrmID") + "&MethodNo=" + methodNo + "&WorkID=" + pworkid + "&DoType=Bill";
                            return;
                        }

                        var frmID = GetQueryString("FrmID");

                        var handler = new HttpHandler("BP.CCBill.WF_CCBill");
                        handler.AddUrlData();

                        var data = handler.DoMethodReturnString("MyBill_CreateBlankBillID");

                        if (data.indexOf('err@') == 0) {
                            alert(data);
                            return;
                        }

                        OpenIt(data, frmID, 0, "新增", 1);
                        break;
                    case "delete"://删除数据
                        var checkStatus = table.checkStatus(vtable.config.id);
                        if (checkStatus.data.length == 0) {
                            layer.alert("请选择删除的行");
                            return;
                        }
                        layer.confirm('确定要删除选择的数据吗?', function (index) {
                            var workid = "";
                            for (var i = 0; i < checkStatus.data.length; i++) {
                                workid += "'" + checkStatus.data[i]["OID"] + "',";
                            }
                            workid = workid.substring(0, workid.length - 1);
                            var handler = new HttpHandler("BP.CCBill.WF_CCBill");
                            handler.AddPara("FrmID", GetQueryString("FrmID"));
                            handler.AddPara("WorkIDs", workid);
                            var data = handler.DoMethodReturnString("MyBill_Deletes");

                            if (data.indexOf('err@') == 0) {
                                layer.alert(data);
                                return;
                            }
                            pageIdx = 1;
                            tableData = SearchData();
                            table.reload('lay_table_bill', { data: tableData });
                            layui.laypage.render();
                            layer.close(index);

                        });
                        break;
                    case "imp"://导入
                        var url = "./Opt/Imp.htm?FrmID=" + GetQueryString("FrmID") + "&EntityType=2";
                        OpenLayuiDialog(url, "导入模板数据", window.innerWidth / 2, 0, null, true);
                        break;
                    case "exp"://导出
                        table.exportFile(vtable.config.id, tableData, 'xls');
                        break;
                    case "group"://跳转到分组页面
                        url = "Group.htm?FrmID=" + GetQueryString("FrmID");
                        window.location.href = url;
                        break;
                    case "comm"://自定义的方法
                        break;
                    default:
                        layer.alert(type + "的方法还没有解析");
                        break;
                }
            });

        });
        function renderLaypage() {
            //执行一个laypage实例
            layui.laypage.render({
                elem: 'page' //注意，这里的 page 是 ID，不用加 # 号
                , count: ur.GetPara("RecCount") //数据总数，从服务端得到
                , limits: [5, 10, 15, 20, 25]
                , layout: ['count', 'prev', 'page', 'next', 'limit', 'refresh', 'skip']
                , jump: function (obj, first) {

                    if (!first) {
                        pageIdx = obj.curr;
                        pageSize = obj.limit;
                        //刷新数据
                        tableData = SearchData();
                        table.reload('lay_table_bill', { data: tableData });
                    }

                }
            });
            $('#page').css('text-align', 'right');  // 分页右对齐
            $('.layui-table-page').css('text-align', 'right');  //

        }
        /**
         * 初始化查询条件按钮功能
         */
        var searchData = {};
        function InitToolBar() {
            var handler = new HttpHandler("BP.CCBill.WF_CCBill");
            handler.AddPara("FrmID", frmID);
            var data = handler.DoMethodReturnString("Search_ToolBar");
            if (data.indexOf('err@') == 0) {
                layer.alert(data);
                console.log(data);
                return;
            }
            var data = JSON.parse(data);
            //单据表单属性
            var mapData = data.Sys_MapData;
            var attrs = data.Attrs;
            var atPara = mapData[0].AtPara;

            var inputSearch = [];
            var dateSearch = [];
            var selectSearch = [];
            var btns = [];
            var stringSearchKeys = GetPara(atPara, "StringSearchKeys");
            if (stringSearchKeys != null && stringSearchKeys != undefined && stringSearchKeys != "") {
                var strs = stringSearchKeys.split("*");
                var fieldV = ""
                $.each(strs, function (i, str) {
                    if (str != "") {
                        var item = str.split(",");
                        fieldV = ur.GetPara(item[0]);
                        if (fieldV == null || fieldV == undefined)
                            fieldV = "";
                        if (item.length == 2) {
                            inputSearch.push({
                                key: item[0],
                                label: item[1],
                                value: fieldV
                            })
                        }
                    }
                });
            } else if (GetPara(atPara, "IsSearchKey") == "1") {
                var keyLabel = GetPara(atPara, "DTSearchLabel");
                inputSearch.push({
                    key: "Key",
                    label: "关键字",
                    value: ur.SearchKey
                })
            }
            searchData["inputSearch"] = inputSearch;
            if (GetPara(atPara, "DTSearchWay") != "0") {
                var dtFrom = GetPara(atPara, "DTSearchLabel");
                if (dtFrom == undefined)
                    dtFrom = '日期从';
                dateSearch.push({
                    dtFromKey: 'DTFrom',
                    dtToKey: 'DTTo',
                    dtFromLabel: dtFrom,
                    dtFromValue: ur.DTFrom,
                    dtToValue: ur.DTTo,
                    dtType: GetPara(atPara, "DTSearchWay") == "1" ? "date" : "datetime"
                })
            }
            searchData["dateSearch"] = dateSearch;
            //格式为: @WFSta=0@FK_Dept=02
            var json = AtParaToJson(ur.Vals);

            for (var i = 0; i < attrs.length; i++) {
                var attr = attrs[i];
                var val = json[attr.Field];
                val = val == null || val == undefined ? "all" : val;
                selectSearch.push({
                    key: attr.Field,
                    label: attr.Name,
                    value: val,
                    operations: InitDDLOperation(data, attr, val)
                });
            }
            searchData["selectSearch"] = selectSearch;
            //获得配置的按钮.
            var fb = new Entity("BP.CCBill.FrmBill", frmID);

            if (fb.BtnNewLable == "") fb.BtnNewLable = "新建";
            if (fb.BtnDelLable == "") fb.BtnDelLable = "删除";
            if (fb.BtnImpExcel == "") fb.BtnImpExcel = "导入";
            if (fb.BtnExpExcel == "") fb.BtnExpExcel = "导出";
            if (fb.BtnGroupLabel == "") fb.BtnGroupLabel = "分析";

            var handler = new HttpHandler("BP.CCBill.WF_CCBill_API");
            handler.AddPara("FrmID", frmID);
            var powerData = handler.DoMethodReturnString("CCFrom_FrmPower");
            if (powerData.indexOf("err@") != -1) {
                alert(powerData);
                return;
            }
            powerData = JSON.parse(powerData);
            btns.push({
                label: "查询",
                type: 'search',
            })
            //权限判断按钮.
            if (parseInt(powerData.IsInsert) == 1)
                btns.push({
                    label: fb.BtnNewLable,
                    type: 'add',
                })
            if (parseInt(powerData.IsDelete) == 1) {
                isHaveDelOper = true;
                btns.push({
                    label: fb.BtnDelLable,
                    type: 'delete'
                })
            }
              
            if (fb.BtnImpExcelEnable == 1)
                btns.push({
                    label: fb.BtnImpExcel,
                    type: 'imp'
                })
            if (fb.BtnExpExcelEnable == 1)
                btns.push({
                    label: fb.BtnExpExcel,
                    type: 'exp'
                })
            if (fb.BtnGroupEnable == 1)
                btns.push({
                    label: fb.BtnGroupLabel,
                    type: 'group'
                })
            //增加方法.
            //获得当前的集合.
            var fms = new Entities("BP.CCBill.Template.Methods", "FrmID", frmID);
            for (var i = 0; i < fms.length; i++) {
                var fm = fms[i];
                if (fm.IsSearchBar != 1)
                    continue;
                btns.push({
                    label: fm.Name,
                    type: 'comm',
                    params: { warnMsg: fm.WarningMsg, mypk: fm.MyPK }
                })
            }
            searchData["btns"] = btns;
            return searchData;
        }

    </script>
    <script>
        $(function () {
            var theme = localStorage.getItem("themeColorInfo");
            theme = JSON.parse(theme);
            var styleScope = document.getElementById("theme-data")
            styleScope.innerHTML = "\n .layui-btn{\n background-color:" + theme.selectedMenu + ";\n}\n .layui-laypage .layui-laypage-curr .layui-laypage-em{\n background-color:" + theme.selectedMenu + ";\n}";
            styleScope.innerHTML += "\n .layui-laypage input:focus,.layui-laypage select:focus{\n border-color:" + theme.selectedMenu + " !important\n}";
            styleScope.innerHTML += "\n .layui-form-select dl dd.layui-this{\n background-color:" + theme.selectedMenu + " !important;\n}";
        })
    </script>
</body>
</html>
