<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <title>表单</title>

    <script language="JavaScript" src="../Comm/JScript.js" type="text/javascript" ></script>
    <script type="text/javascript" src="../Scripts/bootstrap/js/jquery.min.js"></script>
    <script src="../Scripts/QueryString.js" type="text/javascript"></script>
    <link href="../../DataUser/Style/ccbpm.css" rel="stylesheet"  type="text/css" />
    <link href="../../DataUser/Style/table0.css" rel="stylesheet"  type="text/css" />

    <!-- 引用通用的js文件. -->
    <script type="text/javascript" src="../Comm/Gener.js"></script>
    <script type="text/javascript" src="../Scripts/config.js"></script>
    <script type="text/javascript" language="javascript" >
        //页面启动函数.
        $(function () {

            $("#Msg").html("正在加载,请稍后......");

            //初始化groupID.
            var no = GetQueryString("FK_MapData");
            $.ajax({
                type: 'post',
                async: true,
                url: Handler + "?DoType=Frm_Init&FK_MapData=" + no + "&m=" + Math.random(),
                dataType: 'html',
                success: function (data) {
                    
                    if (data.indexOf('err@') == 0) {
                        alert(data); //如果是异常，就提提示.
                        return;
                    }

                    if (data.indexOf('url@') == 0) {
                        data = data.replace('url@', ''); //如果返回url，就直接转向.
                        window.location.href = data;
                        return;
                    }


                    //$("#Msg").html(data);
                    data = JSON.parse(data);
                    var mainTable = data.MAINTABLE; //主表单
                    var sysFrmLine = data.SYS_FRMLINE; //线
                    var sysFrmLab = data.SYS_FRMLAB; //lab
                    var sysFrmBtn = data.SYS_FRMBTN; //BTN
                    var sysFrmMapAttr = data.SYS_MAPATTR; //组件
                    

                    addLines(sysFrmLine); //增加line.
                    addLabels(sysFrmLab); //增加label
                    addBtns(sysFrmBtn); //增加按钮.
                    addMapAttr(sysFrmMapAttr); //增加字段属性.

                    //调用公共类库的方法:执行批量主表赋值
                    //GenerFullAllCtrlsVal(data);
                    return;
                }
            });

            $("#Msg").html("");
        });
    </script>
</head>
<body  >

<form id="cc">
<div id="Msg"> </div>

<script type="text/javascript">

    function Save() {

        $("#Msg").html("正在保存,请稍后......");

        var no = GetQueryString("OID");
        var checkBoxIDs = GenerCheckIDs(); //获得所有的 checkBox ID传入到后台去,用于解决checkbox控件，在没有被选择的时候，没有值的问题。
       // alert(CheckBoxIDs);
        var frmData = $("#cc").serialize();
        //alert(frmData);
        $.ajax({
            data: frmData,
            type: 'post',
            async: true,
            url: Handler + "?DoType=FrmFree_Save&CheckBoxIDs=" + checkBoxIDs + "&OID=" + no + "&m=" + Math.random(),
            dataType: 'html',
            success: function (data) {

                if (data.indexOf('err@') >= 0) {
                    $("#Msg").html("<font color=red>" + data + "</font>");
                    return;
                }

                $("#Msg").html("<font color=green>" + data + "</font>");
                var no = $('#TB_No').val();

                //window.location.href = 'Student.htm?No=' + no;
                return;
            }
        });
    }

    function Delete() {
        if (window.confirm('您确定要删除吗？') == false)
            return false;

        var oid = $("#TB_OID").val();
        $.ajax({
            type: 'post',
            async: true,
            url: Handler + "?DoType=Frm_Delete&OID=" + oid + "&m=" + Math.random(),
            dataType: 'html',
            success: function (data) {
                if (data.indexOf("err@") >= 0) {
                    alert(data);
                    return;
                }
                alert(data);
                window.close();
                return;
            }
        });
    }
</script>

<!--<fieldset>
<legend>开发约定与说明</legend>

<ul>
    
<li>需要对 /WF/Comm/Gener.js  进行引用.</li>
<li>控件的命名必须以 TB_ , DDL_, CB, RB_ 开头, 后半部分，必须与实体类的字段名称保持一致。</li>
<li>按钮必须以 Btn_ 开头, 常用的按钮名称需要保持一致，比如： Btn_Save  Btn_SaveAndClose , Btn_Close , Btn_Delete </li>
<li>常用的函数名必须保持一致，比如： Save()  SaveAncClose() Delete() Close() ...</li>
<li>每个控件的name 的值，都不能为空，否则会导致数据传递不过去，并且checkbox的ids 取不出来。</li>
<li>该界面是一个jq与bp框架的entity结合的实体信息存储，适用方面广，设计与实现比较容易，籍希望各位同事按照这个模式进行开发。</li>

</ul>

</fieldset> -->

</form>

</body>
<script type="text/javascript">
    /**
        线
    **/
    function addLines(lines) {
        var wtX = 0;
        for (var i = 0; i < lines.length; i++) {
            var line = lines[i];
            if (line.X1 == line.X2) {
                /* 一道竖线 */
                var h = line.Y1 - line.Y2;
                h = Math.abs(h);
                if (line.Y1 < line.Y2)
                {
                    x = line.X1 + wtX;
                    $("#cc").append("\t\n<img id='" + line.MYPK + "'  style=\"padding:0px;position:absolute; left:" + x + "px; top:" + line.Y1 + "px; width:" + line.BORDERWIDTH + "px; height:" + h + "px;background-color:" + line.BORDERCOLOR + "\" />");
                }
                else
                {
                    x = line.X2 + wtX;
                    $("#cc").append("\t\n<img id='" + line.MYPK + "'  style=\"padding:0px;position:absolute; left:" + x + "px; top:" + line.Y2 + "px; width:" + line.BORDERWIDTH + "px; height:" + h + "px;background-color:" + line.BORDERCOLOR + "\" />");
                }
            }
            else {
                /* 一道横线 */
                var w = line.X2 - line.X1;

                if (line.X1 < line.X2)
                {
                    x = line.X1 + wtX;
                    $("#cc").append("\t\n<img id='" + line.MYPK + "'  style=\"padding:0px;position:absolute; left:" + x + "px; top:" + line.Y1 + "px; width:" + w + "px; height:" + line.BORDERWIDTH + "px;background-color:" + line.BORDERCOLOR + "\" />");
                }
                else
                {
                    x = line.X2 + wtX;
                    $("#cc").append("\t\n<img id='" + line.MYPK + "'  style=\"padding:0px;position:absolute; left:" + x + "px; top:" + line.Y2 + "px; width:" + w + "px; height:" + line.BORDERWIDTH + "px;background-color:" + line.BORDERCOLOR + "\" />");
                }
           }
        }
    }
    /**
       标签
    **/
    function addLabels(labs) {
        for (var i = 0; i < labs.length;i++ ) {
            var lab = labs[i];
            $("#cc").append("\t\n<label style='position:absolute;left:" + lab.X + "px;top:" + lab.Y + "px;text-align:left;color:" + colorX(lab.FONTCOLOR) + ";font-family: " + lab.FONTNAME + ";font-size: " + lab.FONTSIZE + "px;' >" + lab.TEXT + "</label>");
        }
    }
    //解析颜色
    function colorX(col) {
        if (col.length == 9) {
            return '#' + col.substring(3, 9);
        }
        return col;
    }
    /**
        按钮
    **/
    function addBtns(btns) {
        var doDoc = "";
        for (var i = 0; i < btns.length; i++) {
            var btn = btns[i];
            var str = "\t\n<DIV id=u2 style='position:absolute;left:" + btn.X + "px;top:" + btn.Y + "px;text-align:left;' >";
            str += "<span><button type='button' disabled=true onclick=\"" + functionBtn(btn) + "\" >" + btn.TEXT + "</button></span>";
            str += "\t\n</DIV>";
            $("#cc").append(str);
        }
    }

    /**
        按钮事件处理
    **/
    function functionBtn(btn) {
        //console.info(btn);
    }

    /**
       处理mapattr 
    **/
    var isread = false;
    function addMapAttr(mapAttrs) {
        console.info(mapAttrs);
        for (var i = 0; i < mapAttrs.length;i++ ) {
            var obj = mapAttrs[i];
            //console.info(obj);
            if (obj.UICONTRALTYPE == 0) {//文本
                console.info(obj.MYDATATYPE);
                switch (obj.MYDATATYPE) {
               
                    case 1: //文本类型.
                        if (isread) {
                            ///return { field: obj.KeyOfEn, title: obj.Name, width: obj.UIWidth, colspan: 1, hidden: hid, align: 'center' };
                            $("#cc").append("<input class='easyui-textbox' data-options='' style='position:absolute;left:" + obj.X + "px;top:" + obj.Y + "px;text-align:left;'  />");
                        } else {
                            ///return { field: obj.KeyOfEn, title: obj.Name, width: obj.UIWidth, colspan:1, editor: { type: 'text', options: {disabled:isread,required:req} }, hidden: hid, align: 'center' };
                            $("#cc").append("<input class='easyui-textbox' data-options='' style='position:absolute;left:" + obj.X + "px;top:" + obj.Y + "px;text-align:left;width:" + obj.UIWIDTH + "px'  />");
                        }
                    case 2: //Int 类型.
                    case 3: // float 类型.
                    case 5: // AppDouble
                    case 8: // AppMoney
                    case 9: // 率百分比
                        ///return { field: obj.KeyOfEn, title: obj.Name, width: obj.UIWidth, colspan: 1, editor: { type: 'numberbox', options: { disabled: isread, required: req, precision: pre, formatter: function (value) { if (!value) { return 0.00; } else { return value } } } }, hidden: hid, align: 'center' }; //, onChange: function (newValue, oldValue) { autoFull(newValue, obj.KeyOfEn, indexArr, docArrs, AttrOfOper) }
                    case 6: ////AppDate
                        ///return { field: obj.KeyOfEn, title: obj.Name, width: obj.UIWidth, colspan: 1, editor: { type: 'datebox', options: { currentText: '当前', closeText: '关闭', okText: '确定', disabled: isread, required: req,formatter:formatterDate} }, hidden: hid, align: 'center' };
                    case 7: // AppDateTime 类型.
                        ///return { field: obj.KeyOfEn, title: obj.Name, width: obj.UIWidth, colspan: 1, editor: { type: 'datetimebox', options: { currentText: '当前', closeText: '关闭', okText: '确定', disabled: isread, required: req, formatter: formatterDateTime} }, hidden: hid, align: 'center' };
                    default:
                        ///return { field: obj.KeyOfEn, title: obj.Name, width: obj.UIWidth, colspan: 1, hidden: hid ,align:'center'};
               }
          }
        }
    }
</script>

</html>
