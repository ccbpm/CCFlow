<!DOCTYPE html>
<html>
<head>
    <title></title>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <script language="JavaScript" src="../../Comm/JScript.js" type="text/javascript"></script>
    <script type="text/javascript" src="../../Scripts/QueryString.js"></script>
    <script type="text/javascript" src="../../Scripts/config.js"></script>
    <script type="text/javascript" src="../../Comm/Gener.js"></script>
    <script src="../../Scripts/jquery-1.11.0.min.js" type="text/javascript"></script>
    <script src="../../Scripts/bootstrap/js/bootstrap.min.js" type="text/javascript"></script>
    <link href="../../Scripts/bootstrap/css/bootstrap.min.css" rel="stylesheet" type="text/css" />
    <link href="../../Scripts/bootstrap/css/font-awesome.css" rel="stylesheet" type="text/css" />

    <script src="../../Scripts/bootstrap/bootstrap-table/src/bootstrap-table.js" type="text/javascript"></script>
    <link href="../../Scripts/bootstrap/bootstrap-table/src/bootstrap-table.css" rel="stylesheet" type="text/css" />
    <script src="../../Scripts/bootstrap/bootstrap-table/src/locale/bootstrap-table-zh-CN.js" type="text/javascript"></script>

     <!-- 引入用户要重写的公共js -->
    <script src="../../../DataUser/JSLibData/CCFormRef.js" type="text/javascript"></script>

    <style type="text/css">
        .row-margin-top
        {
            margin-top: 20px;
        }
        .search-margin
        {
            margin-top: 15px;
        }
    </style>
    <script type="text/javascript">
        var mapExt = null;

        //初始化页面
        $(function () {

            var global = window;
            global.selectedRows = [];

            //获取MapExt信息
            var mypk = GetQueryString("MyPK");
            mapExt = new Entity("BP.Sys.MapExt", mypk);

            var webUser = new WebUser();

            //设置查询提示.
            var tip = mapExt.GetPara("SearchTip");

            //单选还是多选
            global.selectType = mapExt.GetPara("SelectType");

            $("#TB_Key").attr("placeholder", tip);

            //如果单选
            mapExt.ShowCheckBox = selectType == "0" ? false : true;

            //设置变量.
            global.FK_MapData = mapExt.FK_MapData;
            global.AttrOfOper = mapExt.AttrOfOper;
            global.oid = GetQueryString("OID");

            //获取列表的数据源
            var tableUrl = mapExt.Tag2;
            if (tableUrl == "") {
                alert('配置错误:查询数据源，初始化列表的数据源不能为空。');
                return;
            }

            // 初始化加载
            var frmEleDBs = new Entities("BP.Sys.FrmEleDBs");
            frmEleDBs.Retrieve("FK_MapData", FK_MapData, "EleID", AttrOfOper, "RefPKVal", oid);
            $.each(frmEleDBs, function (i, o) {
                global.selectedRows.push({
                    "No": o.Tag1,
                    "Name": o.Tag2
                });
            });

            global.searchTableColumns = [];
            
            global.searchTableColumns.push({
                field: "_checkbox",
                checkbox: true,
                formatter: function (value, row, index) {
                    if (row.checked) {
                        return {
                            "checked": true
                        };
                    }
                }
            });
           
            //显示列的中文名称.
            if (typeof columns == "string") {
                $.each(columns.split(","), function (i, o) {
                    var exp = o.split("=");
                    var field;
                    var title;
                    if (exp.length == 1) {
                        field = title = exp[0];
                    } else if (exp.length == 2) {
                        field = exp[0];
                        title = exp[1];
                    }
                    if (!isLegalName(field)) {
                        return true;
                    }
                    searchTableColumns.push({
                        field: field,
                        title: title
                    });
                });
            } else {
                // by default
                searchTableColumns.push({
                    field: 'No',
                    title: '编号'
                });
                searchTableColumns.push({
                    field: 'Name',
                    title: '名称'
                });
            }


            var options = {
                striped: true,
                cache: false,
                sortOrder: "asc",
                strictSearch: true,
                minimumCountColumns: 2,
                highlightSelected: true,
                clickToSelect: true,
                singleSelect: !mapExt.ShowCheckBox,
                sortable: false,
                cardView: false,
                detailView: false,
                uniqueId: "No",
                columns: searchTableColumns
            };
            if (selectType == "0") {
                options.onCheck = function (row, element) {
                    removeAllSelectedData();
                    addSelectedData(global.selectedRows, [row]);

                };
                options.onUncheck = function (row, element) {
                    removeSelectedData(global.selectedRows, [row]);

                };

            } else {
                options.onCheck = function (row, element) {
                    addSelectedData(global.selectedRows, [row]);

                };
                options.onUncheck = function (row, element) {
                    removeSelectedData(global.selectedRows, [row]);

                };
                options.onCheckAll = function (rows) {
                    addSelectedData(global.selectedRows, rows);

                };
                options.onUncheckAll = function (rows) {
                    removeSelectedData(global.selectedRows, rows);

                };
            }

            $('#viewGrid').bootstrapTable(options);
            // search
            $("#TB_Key").on("keyup", function () {
                var keyWord = $(this).val();
                var gridUrl = replaceAll(mapExt.Tag1, "@Key", keyWord);
                loadViewGrid(gridUrl);
            });

            if (tableUrl.indexOf("@Key") > -1) {
                tableUrl = replaceAll(treeUrl, "@Key", "");
            }

            loadViewGrid(tableUrl);
        });

        //查询列表、展示列表
        function loadViewGrid(gridUrl) {
            var global = window;
            var columns = mapExt.Tag;
           
             $('#viewGrid').bootstrapTable("showColumn", "_checkbox");
           
            var searchTableColumns = [{
                field: "_checkbox",
                checkbox: true,
                formatter: function (value, row, index) {
                    if (row.checked) {
                        return {
                            "checked": true,
                            "disabled": row.disabled
                        }
                    }
                }
            }];

  

            var json = DBAccess.RunDBSrc(gridUrl); //执行url返回json.
            if ($.isArray(json)) {
                var selectedRows = window.selectedRows;
                if ($.isArray(selectedRows)) {
                    $.each(json, function (i, o) {
                        var sel = $.grep(selectedRows, function (obj) {
                            return o.No == obj.No;
                        });
                        if (sel.length > 0) {
                            o.checked = true;
                            //多选时才需要禁用已选
                            if (mapExt.ShowCheckBox == true) {
                                o.disabled = true;
                            }
                        }
                    });
                }
                $('#viewGrid').bootstrapTable("load", json);
            }
        }

        function isLegalName(name) {
            if (!name) {
                return false;
            }
            return name.match(/^[a-zA-Z\$_][a-zA-Z\d\$_]*$/);
        }

       


        function addSelectedData(globalSelectedRows, selectedRows) {
            if (!$.isArray(globalSelectedRows) || !$.isArray(selectedRows)) {
                return;
            }
            $.each(selectedRows, function (i, o) {
                var sel = $.grep(globalSelectedRows, function (obj) {
                    return obj.No == o.No;
                });
                if (sel.length == 0) {
                    SaveVal(FK_MapData, AttrOfOper, oid, o.No, o.Name);
                    globalSelectedRows.push(o);
                }
            });
        }
        function removeSelectedData(globalSelectedRows, selectedRows) {
            if (!$.isArray(globalSelectedRows) || !$.isArray(selectedRows)) {
                return;
            }
            $.each(selectedRows, function (i, o) {
                for (var index = 0; index < globalSelectedRows.length; index++) {
                    if (o.No == globalSelectedRows[index].No) {
                        Delete(AttrOfOper, oid, o.No);
                        globalSelectedRows.splice(index, 1);
                        break;
                    }
                }
            });
        }
        function removeAllSelectedData() {
            var globalSelectedRows = selectedRows;
            if (!$.isArray(globalSelectedRows) || !$.isArray(selectedRows)) {
                return;
            }
            for (var index = 0; index < globalSelectedRows.length; index++) {
                Delete(AttrOfOper, oid, globalSelectedRows[index].No);
            }
            selectedRows = [];
        }

        //删除数据.
        function Delete(keyOfEn, oid, No) {
            var frmEleDB = new Entity("BP.Sys.FrmEleDB");
            frmEleDB.MyPK = keyOfEn + "_" + oid + "_" + No;
            frmEleDB.Delete();
        }
        //设置值.
        function SaveVal(fk_mapdata, keyOfEn, oid, val1, val2) {
            var frmEleDB = new Entity("BP.Sys.FrmEleDB");
            frmEleDB.MyPK = keyOfEn + "_" + oid + "_" + val1;
            frmEleDB.FK_MapData = fk_mapdata;
            frmEleDB.EleID = keyOfEn;
            frmEleDB.RefPKVal = oid;
            frmEleDB.Tag1 = val1;
            frmEleDB.Tag2 = val2;
            if (frmEleDB.Update() == 0) {
                frmEleDB.Insert();
            }
        }

    </script>
</head>
<body>
    <div class="container-fluid">
        <div class="row">
            <div class="col-md-12">
                <div class="row">
                    <div class="col-md-9 col-sm-9">
                        <div class="pull-center search search-margin">
                            <input class="form-control" type="text" placeholder="" id="TB_Key">
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row row-margin-top">
            <div class="col-md-4 col-sm-4" id="viewGrid_Panel">
                <table id="viewGrid"></table>
            </div>
        </div>
    </div>
</body>
</html>
