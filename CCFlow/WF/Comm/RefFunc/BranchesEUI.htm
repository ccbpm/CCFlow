<!DOCTYPE html>
<html>
<head>
    <title></title>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <script src="../../Scripts/jquery-1.11.0.min.js" type="text/javascript"></script>
    <script language="JavaScript" src="../../Comm/JScript.js" type="text/javascript"></script>
    <script type="text/javascript" src="../../Scripts/QueryString.js"></script>
    <script type="text/javascript" src="../../Scripts/config.js"></script>
    <script type="text/javascript" src="../../Comm/Gener.js"></script>
    <script src="../../Scripts/bootstrap/js/bootstrap.min.js" type="text/javascript"></script>
    <link href="../../Scripts/bootstrap/css/bootstrap.min.css" rel="stylesheet" type="text/css" />
    <link href="../../Scripts/bootstrap/css/font-awesome.css" rel="stylesheet" type="text/css" />

    <script src="../../Scripts/bootstrap/bootstrap-table/src/bootstrap-table.js" type="text/javascript"></script>
    <link href="../../Scripts/bootstrap/bootstrap-table/src/bootstrap-table.css" rel="stylesheet" type="text/css" />
    <script src="../../Scripts/bootstrap/bootstrap-table/src/locale/bootstrap-table-zh-CN.js" type="text/javascript"></script>

    <script src="../../Scripts/bootstrap/bootstrap-treeview/src/js/bootstrap-treeview.js" type="text/javascript"></script>
    <link href="../../Scripts/bootstrap/bootstrap-treeview/src/css/bootstrap-treeview.css" rel="stylesheet" type="text/css" />
    <style type="text/css">
        .row-margin-top {
            margin-top: 20px;
        }

        .search-margin {
            margin-top: 15px;
        }
    </style>
    <script type="text/javascript">
        var mapExt = null;
        $(function () {

            //global
            var global = window;
            global.selectedNodes = [];
            global.selectedRows = [];

            var pkval = GetQueryString("PKVal");

            var tip = "请输入关键字"; //mapExt.GetPara("SearchTip");
            $("#TB_Key").attr("placeholder", tip); //设置查询提示.

            //跟节点编号.
            var rootNo = "0";
            if (rootNo == "@WebUser.FK_Dept") {
                var webUser = new WebUser();
                rootNo = webUser.FK_Dept;
            }

            if (rootNo == "")
                rootNo = "0";

            //多对多实体.
            var dot2DotEnsName = new Entities(GetQueryString("Dot2DotEnsName"));

            var dot2DotEnName = new Entities(GetQueryString("Dot2DotEnName"));
            dot2DotEnsName.Retrieve(GetQueryString("AttrOfOneInMM"), pkval);
            //dot2DotEnsName.Retrieve(GetQueryString("AttrOfOneInMM"), "1000000");

            //alert(dot2DotEnsName.length);
            $.each(dot2DotEnsName, function (i, o) {

                var enDot = new Entity(dot2DotEnName, o);

                var no = enDot[GetQueryString("AttrOfMInMM")];
                var name = enDot[GetQueryString("AttrOfMInMM") + "Text"];

                // alert(no + " - " + name);

                global.selectedNodes.push({
                    "No": no,
                    "Name": name
                });
            });

            // search
            $("#TB_Key").on("keyup", function () {

                var keyWord = $(this).val();
                if (keyWord == "") {
                    $('#viewGrid_Panel').hide();
                    $('#tree_Panel').show();
                    return;
                }

                // var handler = new HttpHandler("BP.WF.HttpHandler.WF_Comm_RefFunc");
                //   handler.Domss();
                //  var gridUrl = replaceAll(mapExt.Tag1, "@Key", keyWord);
                // tree
                loadViewGrid(keyWord);

            });


            $('#viewGrid_Panel').hide();
            $('#tree_Panel').show();

            loadTree(rootNo, global);

        });

        function findChildren(jsonArray, parentNo) {

            var appendToTree = function (treeToAppend, child) {

                $.each(treeToAppend, function (i, o) {
                    if (o.id == child.ParentNo) {

                        var checked = false;

                        var selectedNodes = window.selectedNodes;
                        // alert(JSON.stringify(selectedNodes)+'='+child.No);
                        var sel = $.grep(selectedNodes, function (obj) {
                            //  alert(child.No  +'  '+ obj.No);
                            return child.No == obj.No;
                        });

                        if (sel.length > 0) {
                            checked = true;
                        }

                        //@代国强， 估计这里出问题了，装载以后，没有把已经装
                        o.nodes.push({
                            "id": child.No,
                            "text": child.Name,
                            "nodes": [],
                            "state": { checked: checked, disabled: false }
                        });
                    } else {
                        appendToTree(o.nodes, child);
                    }
                });
            };

            var jsonTree = [];

            $.each(jsonArray, function (i, o) {

                if (o.ParentNo == parentNo) {
                    var checked = false;

                    var selectedNodes = window.selectedNodes;
                    var sel = $.grep(selectedNodes, function (obj) {
                        return o.No == obj.No;
                    });

                    if (sel.length > 0) {
                        checked = true;
                    }

                    jsonTree.push({
                        "id": o.No,
                        "text": o.Name,
                        "nodes": [],
                        "state": { checked: checked, disabled: false }
                    });
                } else {
                    appendToTree(jsonTree, o);
                }
            });


            function _(treeArray) {
                $.each(treeArray, function (i, o) {
                    if ($.isArray(o.nodes)) {
                        if (o.nodes.length == 0) {
                            o.nodes = undefined;
                        } else {
                            _(o.nodes);
                        }
                    }
                });
            }
            _(jsonTree);
            return jsonTree;
        }

        function loadTree(rootNo, global) {

            //var json = DBAccess.RunDBSrc(treeUrl); // 执行url返回json.

            var ens = new Entities(GetQueryString("EnsOfM")); //BP.Port.Depts
            ens.RetrieveAll();
            var jsonTree = findChildren(ens, rootNo);

            $('#tree').treeview({
                data: jsonTree,         // 数据源
                showCheckbox: true,   //是否显示复选框
                highlightSelected: false,    //是否高亮选中
                //nodeIcon: 'glyphicon glyphicon-user',    //节点上的图标
                nodeIcon: 'glyphicon',
                emptyIcon: '',    //没有子节点的节点图标
                multiSelect: false,    //多选
                onNodeChecked: function (event, data) {

                    //  alert(JSON.stringify(data));
                    // alert(JSON.stringify(data.id));

                    var en = new Entity(GetQueryString("Dot2DotEnName"));
                    en[GetQueryString("AttrOfOneInMM")] = GetPKVal();
                    en[GetQueryString("AttrOfMInMM")] = data.id;

                    en.Insert();
                },
                onNodeUnchecked: function (event, node) {

                    var en = new Entity(GetQueryString("Dot2DotEnName"));
                    en[GetQueryString("AttrOfOneInMM")] = GetPKVal();
                    en[GetQueryString("AttrOfMInMM")] = node.id;
                    en.Delete();

                    // alert("删除成功:" + node.nodeId);
                    //$('#checkable-output').prepend('<p>' + node.text + ' was unchecked</p>');
                },
                onNodeSelected: function (event, node) {

                    var tree = $('#tree');
                    if (node.state.expanded) {
                        //处于展开状态则折叠
                        tree.treeview('collapseNode', node.nodeId);
                    } else {
                        //展开
                        tree.treeview('expandNode', node.nodeId);
                    }
                }
            });
        }

        //查询列表
        function loadViewGrid(gridUrl) {

            var global = window;
            var columns = mapExt.Tag;
            var searchTableColumns = [{
                field: "_checkbox",
                checkbox: true,
                formatter: function (value, row, index) {
                    if (row.checked) {
                        return {
                            "checked": true,
                            "disabled": row.disabled
                        }
                    }
                }
            }];

            //显示列的中文名称.
            if (typeof columns == "string") {
                $.each(columns.split(","), function (i, o) {
                    var exp = o.split("=");
                    var field;
                    var title;
                    if (exp.length == 1) {
                        field = title = exp[0];
                    } else if (exp.length == 2) {
                        field = exp[0];
                        title = exp[1];
                    }
                    if (!isLegalName(field)) {
                        return true;
                    }
                    searchTableColumns.push({
                        field: field,
                        title: title
                    });
                });
            } else {
                // by default
                searchTableColumns.push({
                    field: 'No',
                    title: '编号'
                });
                searchTableColumns.push({
                    field: 'Name',
                    title: '名称'
                });
            }
            // grid
            $('#viewGrid').bootstrapTable({
                cache: false,
                minimumCountColumns: 2,
                clickToSelect: true,
                sortable: false,
                maintainSelected: true,
                singleSelect: !mapExt.ShowCheckBox,
                uniqueId: "No",
                columns: searchTableColumns
            });

            var json = DBAccess.RunDBSrc(gridUrl, mapExt.DBType, mapExt.FK_DBSrc); //执行url返回json.
            if ($.isArray(json)) {
                $('#tree_Panel').hide();
                $('#viewGrid_Panel').show();
                var selectedRows = window.selectedNodes;
                if ($.isArray(selectedRows)) {
                    $.each(json, function (i, o) {
                        var sel = $.grep(selectedRows, function (obj) {
                            return o.No == obj.No;
                        });
                        if (sel.length > 0) {
                            o.checked = true;
                            //多选时才需要禁用已选
                            if (mapExt.ShowCheckBox == true) {
                                o.disabled = true;
                            }
                        }
                    });
                }
                $('#viewGrid').bootstrapTable("load", json);
            }
        }

        function isLegalName(name) {
            if (!name) {
                return false;
            }
            return name.match(/^[a-zA-Z\$_][a-zA-Z\d\$_]*$/);
        }


        ///获取已经勾选节点
        function GetCheckNodes() {
            var nodeIds = [];
            var gridPanel = $("#viewGrid_Panel");
            if (gridPanel.is(':hidden')) {//如果列表是隐藏的则获取树控件值
                var checkedNodes = [];
                if (mapExt.ShowCheckBox == true) {
                    checkedNodes = $('#tree').treeview("getChecked");
                } else {
                    checkedNodes = $('#tree').treeview("getSelected");
                }
                $.each(checkedNodes, function (i, node) {
                    var item = {};
                    item.No = node.id;
                    item.Name = node.text;
                    nodeIds.push(item);
                });
            } else {
                var selectedRows = $("#viewGrid").bootstrapTable("getSelections");
                $.each(selectedRows, function (i, row) {
                    var item = {};
                    item.No = row.No;
                    item.Name = row.Name;
                    nodeIds.push(item);
                });
            }
            return nodeIds;
        }
        function CheckAll() {
            alert("尚未实现.");
        }
        function UnCheckAll() {
            alert("尚未实现.");
        }

        function Search() {
            alert("尚未实现.");
        }
        function Close() {
            alert("尚未实现.");
        }

/**/</script>
</head>
<body>
    <div class="container-fluid" style=" width:100%;">
        <div class="pull-center search search-margin">
                            <input  type="text" placeholder="请输入关键字." id="TB_Key"/>
<input type="button" value="查询" id="Search" onclick="Search()"  />
<div style=" float:right">
<input type="button" value="全选" id="Save" onclick="CheckAll()"  />
<input type="button" value="全不选" id="Button1" onclick="UnCheckAll()"  />
<input type="button" value="关闭" id="Cancel" onclick="Close()"  />
</div>
                        </div>

        <div class="row row-margin-top">
                <div id="tree"></div>
        </div>
    </div>
</body>
</html>
