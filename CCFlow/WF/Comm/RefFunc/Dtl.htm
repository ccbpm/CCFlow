<!DOCTYPE HTML PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <meta charset="utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" />
    <title>ccform正在加载请稍候...</title>
    <script type="text/javascript" src="../../Scripts/QueryString.js"></script>
    <script type="text/javascript" src="../../Scripts/config.js"></script>
    <script type="text/javascript" src="../Gener.js"></script>
    <script type="text/javascript" src="../../Scripts/bootstrap/js/jquery.min.js"></script>
    <script src="../JS/Calendar/WdatePicker.js" type="text/javascript"></script>
    <link href="../JS/Calendar/skin/WdatePicker.css" rel="stylesheet" type="text/css" />
    <script type="text/javascript" src="../../Scripts/bootstrap/js/bootstrap.min.js"></script>
    <script type="text/javascript" src="../../Scripts/bootstrap/js/jquery.cokie.min.js"></script>
    <script type="text/javascript" src="../../Scripts/Cookie.js"></script>
    <script type="text/javascript" src="../../Scripts/bootstrap/js/jquery.nav.js"></script>
    <script type="text/javascript" src="../../Scripts/QueryString.js"></script>
    <script src="../../Scripts/bootstrap/BootstrapUIDialog.js" type="text/javascript"></script>
    <link href="../../Scripts/bootstrap/css/bootstrap.css" rel="Stylesheet" />
    <script src="../../Scripts/EasyUIUtility.js" type="text/javascript"></script>

    <link href="../../Scripts/bootstrap/css/font-awesome.css" rel="Stylesheet" />
    <link rel="stylesheet" href="../../Scripts/bootstrap/css/css.css" type="text/css" media="all" />

    <!-- 该文件可以被集成厂商自己定义风格,可以自己修改,以达到流程设计器与自己的系统风格统一. -->
    <link href="../../../DataUser/Style/ccbpm.css" rel="Stylesheet" />

    <!--UEditor-->
    <link href="../../Comm/umeditor1.2.3-utf8/themes/default/css/umeditor.css" type="text/css" rel="stylesheet" />
    <script type="text/javascript" src="../../Comm/umeditor1.2.3-utf8/third-party/template.min.js"></script>
    <script type="text/javascript" charset="utf-8" src="../../Comm/umeditor1.2.3-utf8/umeditor.config.js"></script>
    <script type="text/javascript" charset="utf-8" src="../../Comm/umeditor1.2.3-utf8/umeditor.min.js"></script>
    <script type="text/javascript" src="../../Comm/umeditor1.2.3-utf8/lang/zh-cn/zh-cn.js"></script>

    <script type="text/javascript">

        var newRowIdx = -1;
        var frmData;
        var mapData;
        var mainData;
        var dtM; //方法集合.

        $(function () {

            var httpHandler = new HttpHandler("BP.WF.HttpHandler.WF_CommEntity");
            httpHandler.AddUrlData();  //增加参数属性.

            var data = httpHandler.DoMethodReturnString("Dtl_Init");
            if (data.indexOf('err@') == 0) {
                $("#Msg").html(data);
                return;
            }

            //解析json.
            frmData = JSON.parse(data);

            mapData = frmData["Sys_MapData"][0];
            mapData = new Entity("BP.Sys.MapData", mapData); //把他转化成entity.
            // mainData = frmData["MainData"];
            document.title = mapData.Name;
            var isReadonly = GetQueryString("IsReadonly");
            
            InitToolbar(); //初始工具栏.

            //绑定数据.
            BindDtls(mapData, mainData, frmData);
 
        })

        function OpenEn(pkVal) {

            var ensName = GetQueryString("EnsName");
            var enName = ensName.substring(0, ensName.length - 1);

            var url = "EnOnly.htm?EnName=" + enName + "&PKVal=" + pkVal + "&RefVal=" + GetQueryString("RefVal") + "&RefKey=" + GetQueryString("RefKey");

            OpenBootStrapModal(url, "eudlgframe", this.document.title + ' : 详细', 540, 450, "icon-edit", false, function () { }, null, function () {
                
                //location = location;

            });
        }
         
        //设置按钮
        function InitToolbar() {

            var html = "";

            //权限控制.
            if (mapData.GetPara("IsInsert") == 1) {
                html += "<input type='button' value='新建' id='Btn_New' onclick='New()' />";
            }

            if (mapData.GetPara("IsUpdate") == 1) {
                html += "<input type='button' value='保存' id='Btn_Save' onclick='Save()' />";
            }

            //            if (mapData.GetPara("IsDelete") == 1) {
            //                var pkVal = GetPKVal();
            //                if (pkVal != null)
            //                    html += "<input type='button' value='删除' id='Btn_Delete' onclick='Delete()' />";
            //            }

            html += "<input type='button' value='关闭' id='close' onclick='CloseIt()' />";

            $("#Btns").append(html);
        }

        //绑定明细.
        function BindDtls(mapData, mainData, frmData) {

            frmData = frmData;
            var Sys_GroupFields = frmData.Sys_GroupField;
            var mapAtrrs = frmData.Sys_MapAttr;
            var dtls = frmData.Dtls;

            var html = "<table border=0 id='Table1' >";
            html += "<tr>";
            html += "<th>序</th>";
            html += "<th>....</th>";
            
            for (var i = 0; i < mapAtrrs.length; i++) {
                var mapAttr = mapAtrrs[i];
                mapAttr = new Entity("BP.Sys.SysMapAttr", mapAttr);
                if (mapAttr.UIVisible == "0")
                    continue;
                html += "<th>" + mapAttr.Name + "</th>";
            }
            html += "<th></th>";
            html += "</tr>";


            var hidden="";

            //生成内容.
            for (var i = 0; i < dtls.length; i++) {

                var dtl = dtls[i];
                dtl = new Entity("BP.Sys.GEDtl", dtl);
                var pkval = dtl.OID;
                html += "<tr>";
                html += "<td class='Idx'>" + (i + 1) + "</td>";
                html += "<td ><a href=\"javascript:OpenEn('"+pkval+"')\">详细</a></td>";                
 
                for (var attrIdx = 0; attrIdx < mapAtrrs.length; attrIdx++) {
                    var mapAttr = mapAtrrs[attrIdx];
                    mapAttr = new Entity("BP.Sys.SysMapAttr", mapAttr);
                    if (mapAttr.UIVisible == "0")
                    {
                        html += "<input type='hidden' id='TB_"+pkval+"_" + mapAttr.KeyOfEn + "' name='TB_"+pkval+"_" + mapAttr.KeyOfEn + "' value='" + dtl[mapAttr.KeyOfEn] + "' />";
                        continue;
                    }

                    html += "<td>" + InitMapAttrOfCtrl(mapAttr,dtl, pkval) + "</td>";
                }
                if (mapData.GetPara("IsDelete")=="1")
                 html += "<td><a href=\"javascript:Delete('"+pkval+"')\"><img src='../../Img/Btn/Delete.png' /></a></td>";
                else
                  html += "<td></td>";

                html += "</tr>";
            }
            html += "</table>";

            var html = $(html);
            $('#mytable').html("").append(html);
            $('#mytable').append(hidden);
            
          
        }
         

        function InitMapAttrOfCtrl(mapAttr,dtl, pkval) {

            var str = '';
            var defValue =  ConvertDefVal(mapAttr, dtl);
            var isInOneRow = false; //是否占一整行
            var islabelIsInEle = false; //
            var eleHtml = '';

            //外部数据源类型.
            if (mapAttr.LGType == "0" && mapAttr.MyDataType == "1" && mapAttr.UIContralType == "1") {

                //枚举类型.
                if (mapAttr.UIIsEnable == 1)
                    enableAttr = "";
                else
                    enableAttr = "disabled='disabled'";

                return "<select id='DDL_" + pkval + "_" + mapAttr.KeyOfEn + "' name='DDL_" + pkval + "_" + mapAttr.KeyOfEn + "' " + (mapAttr.UIIsEnable == 1 ? '' : 'disabled="disabled"') + ">" + InitDDLOperation(frmData, mapAttr, defValue) + "</select>";
            }

            //外键类型.
            if (mapAttr.LGType == "2" && mapAttr.MyDataType == "1") {

                //枚举类型.
                if (mapAttr.UIIsEnable == 1)
                    enableAttr = "";
                else
                    enableAttr = "disabled='disabled'";

                return "<select id='DDL_"+pkval+"_" + mapAttr.KeyOfEn + "'  name='DDL_"+pkval+"_" + mapAttr.KeyOfEn + "' " + (mapAttr.UIIsEnable == 1 ? '' : 'disabled="disabled"') + ">" + InitDDLOperation(frmData, mapAttr, defValue) + "</select>";
            }

            //外部数据类型.
            if (mapAttr.LGType == "0" && mapAttr.MyDataType == "1" && mapAttr.UIContral == 1) {

                //枚举类型.
                if (mapAttr.UIIsEnable == 1)
                    enableAttr = "";
                else
                    enableAttr = "disabled='disabled'";

                return "<select id='DDL_"+pkval+"_" + mapAttr.KeyOfEn + "' name='DDL_" + pkval + "_" + mapAttr.KeyOfEn + "' " + (mapAttr.UIIsEnable == 1 ? '' : 'disabled="disabled"') + ">" + InitDDLOperation(frmData, mapAttr, defValue) + "</select>";
            }

            //添加文本框 ，日期控件等
            //AppString
            if (mapAttr.MyDataType == "1" && mapAttr.UIContralType == 0) {  //不是外键

                //  alert(mapAttr.UIWidth);


                if (mapAttr.UIHeight <= 40) //普通的文本框.
                {
                    var enableAttr = '';
                    if (mapAttr.UIIsEnable == 0)
                        enableAttr = "disabled='disabled'"; 

                    return "<input maxlength=" + mapAttr.MaxLen + "  name='TB_" + pkval + "_" + mapAttr.KeyOfEn + "' id='TB_" + pkval + "_" + mapAttr.KeyOfEn + "' value='" + defValue + "' style='width:" + mapAttr.UIWidth + "px;height:23px;' type='text'  " + enableAttr + " />";
                }

                //普通的大块文本.
                return "<textarea maxlength=" + mapAttr.MaxLen + " style='height:" + mapAttr.UIHeight + "px;width:"+mapAtt.UIWidth+"px;' name='TB_" + pkval + "_" + mapAttr.KeyOfEn + "' id='TB_" + pkval + "_" + mapAttr.KeyOfEn + "' type='text'  " + (mapAttr.UIIsEnable == 1 ? '' : ' disabled="disabled"') + " />"
            }

            //日期类型.
            if (mapAttr.MyDataType == 6) {
                var enableAttr = '';
                if (mapAttr.UIIsEnable == 1)
                    enableAttr = 'onfocus="WdatePicker({dateFmt:' + "'yyyy-MM-dd'})" + '";';
                else
                    enableAttr = "disabled='disabled'";

                return "<input " + enableAttr + " value='" + defValue + "' style='width:80px;' name='TB_" + pkval + "_" + mapAttr.KeyOfEn + "' type='text' />";
            }

            //时期时间类型.
            if (mapAttr.MyDataType == 7) {

                var enableAttr = '';
                if (mapAttr.UIIsEnable == 1)
                    enableAttr = 'onfocus="WdatePicker({dateFmt:' + "'yyyy-MM-dd HH:mm'})" + '";';
                else
                    enableAttr = "disabled='disabled'";

                return "<input  type='text' value='" + defValue + "' style='width:120px;' " + enableAttr + " name='TB_" + pkval + "_" + mapAttr.KeyOfEn + "' />";
            }

            // boolen 类型.
            if (mapAttr.MyDataType == 4) {  // AppBoolean = 7

                if (mapAttr.UIIsEnable == 1)
                    enableAttr = "";
                else
                    enableAttr = "disabled='disabled'";

                //CHECKBOX 默认值
                var checkedStr = '';
                if (checkedStr != "true" && checkedStr != '1') {
                    checkedStr = ' checked="checked" ';
                }

                checkedStr = "";

                return "<input " + enableAttr + " value='" + defValue + "' " + (defValue == 1 ? "checked='checked'" : "") + " type='checkbox' id='CB_" + pkval + "_" + mapAttr.KeyOfEn + "'  name='CB_"+pkval+"_" + mapAttr.KeyOfEn + "' " + checkedStr + " /><label for='CB_"+pkval+"_" + mapAttr.KeyOfEn + "' >" + mapAttr.Name + "</label>";
            }

            //枚举类型.
            if (mapAttr.MyDataType == 2 && mapAttr.LGType == 1) { //AppInt Enum
                if (mapAttr.UIIsEnable == 1)
                    enableAttr = "";
                else
                    enableAttr = "disabled='disabled'";

                return "<select  name='DDL_" + pkval + "_" + mapAttr.KeyOfEn + "' " + (mapAttr.UIIsEnable == 1 ? '' : 'disabled="disabled"') + ">" + InitDDLOperation(frmData, mapAttr, defValue) + "</select>";
            }

            // AppDouble  AppFloat
            if (mapAttr.MyDataType == 5 || mapAttr.MyDataType == 3) {

                var enableAttr = '';
                if (mapAttr.UIIsEnable != 1)
                    enableAttr = "disabled='disabled'";

                // alert(mapAttr.KeyOfEn);
                return "<input style='text-align:right;width:80px;' value='" + defValue + "'  onkeyup=" + '"' + "if(isNaN(value)) execCommand('undo')" + '"' + " onafterpaste=" + '"' + "if(isNaN(value))execCommand('undo')" + '"' + " maxlength=" + mapAttr.MaxLen / 2 + "   type='text'" + enableAttr + " name='TB_" + pkval + "_" + mapAttr.KeyOfEn + "'/>";
            }

            if ((mapAttr.MyDataType == 2)) { //AppInt
                var enableAttr = '';
                if (mapAttr.UIIsEnable == 0 || mapAttr.KeyOfEn=="NodeID" ) {
                    enableAttr = "disabled='disabled'";
                }
                return "<input style='text-align:right;width:80px;' value='" + defValue + "' onkeyup=" + '"' + "if(isNaN(value) || (value%1 !== 0))execCommand('undo')" + '"' + " onafterpaste=" + '"' + "if(isNaN(value) || (value%1 !== 0))execCommand('undo')" + '"' + " maxlength=" + mapAttr.MaxLen / 2 + "   type='text'" + enableAttr + " name='TB_" + pkval + "_" + mapAttr.KeyOfEn + "'/>";
            }

            //AppMoney  AppRate
            if (mapAttr.MyDataType == 8) {
                var enableAttr = '';
                if (mapAttr.UIIsEnable == 1) {

                } else {
                    enableAttr = "disabled='disabled'";
                }
                return "<input style='text-align:right;width:80px;' value='" + defValue + "' onkeyup=" + '"' + "if(isNaN(value))execCommand('undo')" + '"' + " onafterpaste=" + '"' + "if(isNaN(value))execCommand('undo')" + '"' + " maxlength=" + mapAttr.MaxLen / 2 + "   type='text'" + enableAttr + " name='TB_" + pkval + "_" + mapAttr.KeyOfEn + "'/>";
            }

            alert(mapAttr.Name + "的类型没有判断.");
            return;
        }

        //填充默认数据
        function ConvertDefVal(attr, dtl) {

            //通过MAINTABLE返回的参数
            for (var ele in dtl) {
                if (attr.KeyOfEn == ele && dtl != '') {
                    result = dtl[ele];
                    break;
                }
            }

            if (result != undefined && typeof (result) == 'string') {
                //result = result.replace(/｛/g, "{").replace(/｝/g, "}").replace(/：/g, ":").replace(/，/g, ",").replace(/【/g, "[").replace(/】/g, "]").replace(/；/g, ";").replace(/~/g, "'").replace(/‘/g, "'").replace(/‘/g, "'");
            }
            return result = unescape(result);
        }

        //初始化下拉列表框的OPERATION
        function InitDDLOperation(flowData, mapAttr, defVal) {

            var operations = '';
            //外键类型.
            if (mapAttr.LGType == 2) {

                var data = frmData[mapAttr.KeyOfEn];
                if (data == undefined)
                    data = frmData[mapAttr.UIBindKey];

                if (data == undefined) {
                    alert('没有获得约定的数据源..' + mapAttr.KeyOfEn + " " + mapAttr.UIBindKey);
                    return;
                }
                
              //  alert(defVal);


                $.each(data, function (i, obj) {
                    operations += "<option " + (obj.No == defVal ? " selected='selected' " : "") + " value='" + obj.No + "'>" + obj.Name + "</option>";
                });
            }


            //枚举类型.
            if (mapAttr.LGType == 1) {

                var enums = frmData.Sys_Enum;
                enums = $.grep(enums, function (value) {
                    return value.EnumKey == mapAttr.UIBindKey;
                });

                $.each(enums, function (i, obj) {
                    operations += "<option " + (obj.IntKey == defVal ? " selected='selected' " : "") + " value='" + obj.IntKey + "'>" + obj.Lab + "</option>";
                });
            }


            //外部数据源类型 MyFlowGener.js.InitDDLOperation
            if (mapAttr.LGType == 0) {
                var fn;
                try {
                    if (mapAttr.UIBindKey) {
                        fn = eval(mapAttr.UIBindKey);
                    }
                } catch (e) {
                }
                if (typeof fn == "function") {
                    $.each(fn.call(), function (i, obj) {
                        operations += "<option " + (obj.No == defVal ? " selected='selected' " : "") + " value='" + obj.No + "'>" + obj.Name + "</option>";
                    });
                } else if (typeof CommonHandler == "function") {
                    CommonHandler.call("", mapAttr.UIBindKey, function (data) {
                        GenerBindDDL("DDL_" + mapAttr.KeyOfEn, data, "No", "Name");
                    })
                } else {
                    alert('没有获得约定的数据源..' + mapAttr.KeyOfEn + " " + mapAttr.UIBindKey);
                    //alert('没有获得约定的数据源.');
                }
            }
            return operations;
        }

        //新建.
        function New() {

            var ensName = GetQueryString("EnsName");
            var enName = ensName.substring(0, ensName.length - 1);
            var dtl = new Entity(enName);
            newRowIdx++;
            dtl.OID = newRowIdx;
            dtl.RefPK = GetQueryString("RefVal");

            var mapAtrrs = frmData.Sys_MapAttr;

            var html = "";
            html += "<tr>";
            html += "<td class='Idx'><font color=red>"+(newRowIdx+1)+"</font></td>";
            html += "<td >....</td>";
            
            var hidden="";

            for (var attrIdx = 0; attrIdx < mapAtrrs.length; attrIdx++) {
                var mapAttr = mapAtrrs[attrIdx];
                mapAttr = new Entity("BP.Sys.SysMapAttr", mapAttr);
                if (mapAttr.UIVisible == "0") {
                    html += "<input type='hidden' id='TB_" + newRowIdx + "_" + mapAttr.KeyOfEn + "' name='TB_" + newRowIdx + "_" + mapAttr.KeyOfEn + "' value='" + dtl[mapAttr.KeyOfEn] + "' />";
                    continue;
                }
                html += "<td>" + InitMapAttrOfCtrl(mapAttr, dtl, newRowIdx) + "</td>";
            }
            html += "<td></td>";
            html += "</tr>";

            $("#Table1 tr:last").after(html);
            $("#Table1 tr:last").after(hidden);
        }

        //更新.
        function Save() { 
 
            var handler = new HttpHandler("BP.WF.HttpHandler.WF_CommEntity");
            handler.AddUrlData();  //增加参数属性.
            handler.AddFormData();

            var data = handler.DoMethodReturnString("Dtl_Save");
            console.log(handler.getParams());
            if (data.indexOf("err@")==0)
            {    
              alert(data);
              return;
            }

           // var url = "?EnName=" + GetQueryString("EnName") + "&PKVal=" + en.pkval;
            window.location.href = window.location.href; //刷新.
        }

        function Delete(pkval) {

            if (window.confirm('您确定要删除吗？') == false)
                return;

            var ensName = GetQueryString("EnsName");
            var enName=ensName.substring(0,ensName.length-1 );

            //执行删除.
            var en = new Entity(enName);
            en.pkval = pkval;
            en.OID = pkval;
            en.Delete();

            window.location.href=window.location.href;
        }

        function CloseIt() {
            if (window.parent && window.parent.CloseBootstrapDialog) {
                window.parent.CloseBootstrapDialog("取消");
            } else {
                window.close();
            }
        }
 
    </script>
</head>
<body>

     <div id="Btns">
        <input type='button' value='保存' id='Btn_Save' onclick='Save()' />
     </div>
     <div id="Msg"></div>
       
                <form id="divCCForm"  method="post">
                   <div id="mytable"> </div>
                </form>
     
</body>

</html>
