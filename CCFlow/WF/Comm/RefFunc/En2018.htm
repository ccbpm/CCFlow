<!DOCTYPE HTML PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <meta charset="utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" />
    <title>ccform正在加载请稍候...</title>
    <script type="text/javascript" src="../../Scripts/QueryString.js"></script>
    <script type="text/javascript" src="../../Scripts/config.js"></script>
    <script type="text/javascript" src="../Gener.js"></script>
    <script type="text/javascript" src="../../Scripts/bootstrap/js/jquery.min.js"></script>
    <script src="../JS/Calendar/WdatePicker.js" type="text/javascript"></script>
    <link href="../JS/Calendar/skin/WdatePicker.css" rel="stylesheet" type="text/css" />

    <script type="text/javascript" src="../../Scripts/bootstrap/js/bootstrap.min.js"></script>
    <script type="text/javascript" src="../../Scripts/bootstrap/js/jquery.cokie.min.js"></script>
    <script type="text/javascript" src="../../Scripts/Cookie.js"></script>
    <script type="text/javascript" src="../../Scripts/bootstrap/js/jquery.nav.js"></script>
    <script type="text/javascript" src="../../Scripts/QueryString.js"></script>
    <script src="../../Scripts/bootstrap/BootstrapUIDialog.js" type="text/javascript"></script>

    <link href="../../Scripts/bootstrap/css/bootstrap.css" rel="Stylesheet" />
    <script src="../../Scripts/EasyUIUtility.js" type="text/javascript"></script>

    <link href="../../Scripts/bootstrap/css/font-awesome.css" rel="Stylesheet" />
    <link rel="stylesheet" href="../../Scripts/bootstrap/css/css.css" type="text/css" media="all" />

    <!-- 该文件可以被集成厂商自己定义风格,可以自己修改,以达到流程设计器与自己的系统风格统一. 
    <link href="../../../DataUser/Style/ccbpm.css" rel="Stylesheet" />-->

    <!--UEditor-->
    <link href="../../Comm/umeditor1.2.3-utf8/themes/default/css/umeditor.css" type="text/css" rel="stylesheet" />
    <script type="text/javascript" src="../../Comm/umeditor1.2.3-utf8/third-party/template.min.js"></script>
    <script type="text/javascript" charset="utf-8" src="../../Comm/umeditor1.2.3-utf8/umeditor.config.js"></script>
    <script type="text/javascript" charset="utf-8" src="../../Comm/umeditor1.2.3-utf8/umeditor.min.js"></script>
    <script type="text/javascript" src="../../Comm/umeditor1.2.3-utf8/lang/zh-cn/zh-cn.js"></script>

	<style type="text/css">
		.row-margin-top {
			margin-top: 20px;
		}
	</style>
    <!--杨玉慧 -->
    <script type="text/javascript">

        var frmData;
        var mapData;
        var mainData;
        var dtM; //方法集合.

        $(function () {

            var httpHandler = new HttpHandler("BP.WF.HttpHandler.WF_CommEntity");
            //            httpHandler.AddPara("EnName", "BP.Port.Emp");
            //            httpHandler.AddPara("No", "zhoupeng");

            var enName = GetQueryString("EnName");
            var pkVal = GetPKVal();
            httpHandler.AddPara("EnName", enName);

            if (pkVal != null) {
                httpHandler.AddPara("PKVal", pkVal);
            }

           //httpHandler.AddPara("EnName", "BP.WF.Template.NodeExt");
           //httpHandler.AddPara("NodeID", "102");

            var data = httpHandler.DoMethodReturnString("Entity_Init");
            if (data.indexOf('err@') == 0) {
                $("#CCForm").html(data);
                return;
            }

            //解析json.
            frmData = JSON.parse(data);

            mapData = frmData["Sys_MapData"][0];
            mapData = new Entity("BP.Sys.MapData", mapData); //把他转化成entity.
            mainData = frmData["MainData"];
            dtM = frmData["dtM"];

            document.title = mapData.Name;
            InitToolbar(); //初始工具栏.

            RefMethod(); //初始化菜单.

            //生成傻瓜表单.
            GenerFoolFrm(mapData, mainData, frmData);


            //   $.parser.parse("#CCForm");
            var isReadonly = GetQueryString("IsReadonly");

            //原有的。
            //为 DISABLED 的 TEXTAREA 加TITLE 
            var disabledTextAreas = $('#divCCForm textarea:disabled');
            $.each(disabledTextAreas, function (i, obj) {
                $(obj).attr('title', $(obj).val());
            })

            //根据NAME 设置ID的值
            var inputs = $('[name]');
            $.each(inputs, function (i, obj) {
                if ($(obj).attr("id") == undefined || $(obj).attr("id") == '') {
                    $(obj).attr("id", $(obj).attr("name"));
                }
            })

            //设置默认值
            for (var j = 0; j < frmData.Sys_MapAttr.length; j++) {

                var mapAttr = frmData.Sys_MapAttr[j];

                //添加 label
                //如果是整行的需要添加  style='clear:both'.
                var defValue = ConvertDefVal(mapAttr);

                if ($('#TB_' + mapAttr.KeyOfEn).length == 1) {
                    $('#TB_' + mapAttr.KeyOfEn).val(defValue);
                }

                if ($('#DDL_' + mapAttr.KeyOfEn).length == 1) {
                    // 判断下拉框是否有对应option, 若没有则追加
                    if ($("option[value='" + defValue + "']", '#DDL_' + mapAttr.KeyOfEn).length == 0) {
                        var mainTable = frmData.MainTable[0];
                        var selectText = mainTable[mapAttr.KeyOfEn + "Text"];
                        $('#DDL_' + mapAttr.KeyOfEn).append("<option value='" + defValue + "'>" + selectText + "</option>");
                    }
                    //
                    $('#DDL_' + mapAttr.KeyOfEn).val(defValue);
                }

                if ($('#CB_' + mapAttr.KeyOfEn).length == 1) {
                    if (defValue == "1")
                        $('#CB_' + mapAttr.KeyOfEn).attr("checked", true);
                    else
                        $('#CB_' + mapAttr.KeyOfEn).attr("checked", false);
                }

                if (mapAttr.UIIsEnable == "0") {
                    $('#TB_' + mapAttr.KeyOfEn).attr('disabled', true);
                    $('#DDL_' + mapAttr.KeyOfEn).attr('disabled', true);
                    $('#CB_' + mapAttr.KeyOfEn).attr('disabled', true);
                }
            }
        })

        function RefMethod() {

            if (dtM.length ==0 )
                return;

            //求出所有的分组名称.
            var groupName = "@基本信息";
            for (var i = 0; i < dtM.length; i++) {
                var en = dtM[i];
                if (en.GroupName == null)
                    continue;
                if (groupName.indexOf('@' + en.GroupName) == -1)
                    groupName += "@" + en.GroupName;
            }


            var gNames = groupName.split('@');

            //生成菜单.
			/*
            var html = "<table>";
            for (var i = 0; i < gNames.length; i++) {
                var gName = gNames[i];

                html += "<tr>";
                html += "<th>" + gName + "</td>";
                html += "</tr>";

                html += "<tr><td>";
                html += "<ul>";


                //填入菜单内容.
                for (var idx = 0; idx < dtM.length; idx++) {

                    var en = dtM[idx];
                    var myName = en.GroupName;
                    if (myName == null || myName == "")
                        myName = "基本信息";

                    if (gName != myName)
                        continue;

                    if (en.RefAttrKey != null || en.IsCanBatch == "1" || en.Visable == 0)
                        continue;

                    html += "<li>"+GenerRM(en)+"</li>";
                }

                html += "</ul>";
                html += "</td>";
                html += "</tr>";

            }
            html += "</table>";
			*/
			
			var html = "";
            for (var i = 0; i < gNames.length; i++) {
                var gName = gNames[i];
				if (gName == "") {
					continue;
				}
				html += '<div class="panel panel-default">';
				html += '	<div class="panel-heading">';
				html += '		<h4 class="panel-title">';
				html += '			<a data-toggle="collapse" data-parent="#Left" href="#collapse' + i + '">' + gName + '</a>';
				html += '		</h4>';
				html += '	</div>';
				html += '	<div id="collapse' + i + '" class="panel-collapse collapse in">';
                //填入菜单内容.
                for (var idx = 0; idx < dtM.length; idx++) {

                    var en = dtM[idx];
                    var myName = en.GroupName;
                    if (myName == null || myName == "")
                        myName = "基本信息";

                    if (gName != myName)
                        continue;

                    if (en.RefAttrKey != null || en.IsCanBatch == "1" || en.Visable == 0)
                        continue;

                    html += '<div class="panel-body">' + GenerRM(en) + "</div>";
                }
				html += "	</div>";
				html += "</div>";
            }

            $("#Left").append(html);
        }
        function OpenIt(url, title, w, h) {
            window.open(url);
        }
        //设置按钮
        function InitToolbar() {
            var html = "";

            //权限控制.
            if (mapData.GetPara("IsInsert") == 1) {
                html += "<input type='button' value='新建' id='Btn_New' onclick='New()' class='btn btn-default' />";
            }
            if (mapData.GetPara("IsUpdate") == 1) {
                html += "<input type='button' value='保存' id='Btn_Save' onclick='Update()' class='btn btn-default' />";
            }
            if (mapData.GetPara("IsDelete") == 1) {
                var pkVal = GetPKVal();
                if (pkVal != null)
                    html += "<input type='button' value='删除' id='Btn_Delete' onclick='Delete()' class='btn btn-default' />";
            }

            html += "<input type='button' value='关闭' id='close' onclick='CloseIt()' class='btn btn-default' />";

            $("#Btns").append(html);
        }

        function GenerFoolFrm(mapData, mainData, frmData) {

            frmData = frmData;
            var Sys_GroupFields = frmData.Sys_GroupField;
            var mapAtrrs = frmData.Sys_MapAttr;

            var tableWidth = 800; //  w - 40;
            //var html = "<table style='width:" + tableWidth + "px;' >";
			var html = '<div class="form-inline">';
            //遍历循环生成 listview
            for (var i = 0; i < Sys_GroupFields.length; i++) {

                var gf = Sys_GroupFields[i];
                //字段类的控件.
                if (gf.CtrlType == '' || gf.CtrlType == null) {
                    //html += "<tr>";
                    //html += "  <th colspan=4>" + gf.Lab + "</th>";
                    //html += "</tr>";
					html += '<div class="row row-margin-top">';
					html +=		'<div class="col-md-12">';
					html += 		"<fieldset>";
					html += 			"<legend>" + gf.Lab + "</legend>";
					//html += 				'<div class="row">';
                    html += InitMapAttr(frmData.Sys_MapAttr, mainData, gf.OID);
					//html +=					'</div>';
					html += 		"</fieldset>";
					html += 	'</div>';
					html += '</div>';
                    continue;
                }
            }
            //html += "</table>";
			html += "</div>";

            //加入隐藏控件.
            for (var i = 0; i < mapAtrrs.length; i++) {
                var attr = mapAtrrs[i];
                if (attr.UIVisible == 0) {
                    var defval = ConvertDefVal(attr);
                    html += "<input type='hidden' id='TB_" + attr.KeyOfEn + "' name='TB_" + attr.KeyOfEn + "' value='" + defval + "' />";
                }
            }


            $('#CCForm').html("").append(html);

//            //设置为只读的字段.
//            for (var i = 0; i < mapAtrrs.length; i++) {

//                var mapAttr = mapAtrrs[i];
//                //设置文本框只读.
//                if (mapAttr.UIIsEnable == false || mapAttr.UIIsEnable == 1 || 1 == 1) {

//                    //   alert(mapAttr.KeyOfEn);
//                    // alert(mapAttr.KeyOfEn);

//                    $('#TB_' + mapAttr.KeyOfEn).attr('disabled', "disabled");
//                    $('#CB_' + mapAttr.KeyOfEn).attr('disabled', "disabled");
//                    $('#DDL_' + mapAttr.KeyOfEn).attr('disabled', "disabled");
//                }
//            }
        }

        //解析表单字段 MapAttr.
        function InitMapAttr(Sys_MapAttr, mainData, groupID) {

            var html = "";
            var isDropTR = true;

            for (var i = 0; i < Sys_MapAttr.length; i++) {

                var attr = Sys_MapAttr[i];
                if (attr.GroupID != groupID || attr.UIVisible == 0)
                    continue;

                var enable = attr.UIIsEnable == "1" ? "" : " ui-state-disabled";

                var rm = null; //当前的方法.
                for (var iRm = 0; iRm < dtM.length; iRm++) {
                    if (dtM[iRm].RefAttrKey == attr.KeyOfEn) {
                        rm = dtM[iRm];
                    }
                }

                var name = null;
                if (attr.UIRefKeyText == "" || attr == null)
                    name = attr.Name;
                else
                    name = "<a href='" + attr.UIRefKeyText + "' target=_blank >" + attr.Name + "</a>";

                var lab = "";
                if (attr.UIContralType == 0)
                    lab = "<label for='TB_" + attr.KeyOfEn + "' class='" + (attr.UIIsInput == 1 ? "mustInput" : "") + "'>" + name + "</label>";

                if (attr.UIContralType == 1)
                    lab = "<label for='DDL_" + attr.KeyOfEn + "' class='" + (attr.UIIsInput == 1 ? "mustInput" : "") + "'>" + name + "</label>";

                if (attr.UIIsInput == 1 && attr.UIIsEnable == 1) {
                    lab += " <span style='color:red' class='mustInput' data-keyofen='" + attr.KeyOfEn + "' >*</span>";
                }

                //线性展示并且colspan=3
                //if (attr.ColSpan == 3 || (attr.ColSpan == 4 && attr.UIHeight < 40)) {
                //    isDropTR = true;
                //    html += "<tr>";
                //    html += "<td  class='FDesc' style='width:120px;'>" + lab + "</td>";
                //    html += "<td colspan=3>";
                //    html += InitMapAttrOfCtrl(attr);
                //    html += "</td>";
                //    html += "</tr>";
                //
                //    if (rm != null) {
                //        html += "<tr>";
                //        html += "<td class='FDesc' style='width:120px;'></td>";
                //        html += "<td colspan=3>";
                //        html += GenerRM(rm);
                //        html += "</td>";
                //        html += "</tr>";
                //        isDropTR = true;
                //    }
                //    continue;
                //}

                //线性展示并且colspan=4
                //if (attr.ColSpan == 4) {
                //    isDropTR = true;
                //    html += "<tr>";
                //    html += "<td colspan='4'>" + lab + "</br>";
                //    html += InitMapAttrOfCtrl(attr);
                //    html += "</td>";
                //    html += "</tr>";
                //
                //
                //    if (rm != null) {
                //        html += "<tr>";
                //        html += "<td class='FDesc' style='width:120px;'></td>";
                //        html += "<td colspan=3>";
                //        html += GenerRM(rm);
                //        html += "</td>";
                //        html += "</tr>";
                //        isDropTR = true;
                //    }
                //    continue;
                //}

                //if (isDropTR == true) {
                //    html += "<tr>";
                //    html += "<td class='FDesc' style='width:120px;'>" + lab + "</td>";
                //    html += "<td class='FContext'  >";
                //    html += InitMapAttrOfCtrl(attr);
                //    html += "</td>";
                //    isDropTR = !isDropTR;
                //
                //    if (rm != null) {
                //        html += "<td colspan=2>";
                //        html += GenerRM(rm);
                //        html += "</td>";
                //        html += "</tr>";
                //        isDropTR = true;
                //    }
                //    continue;
                //}

				//if (isDropTR == false) {
                //    html += "<td class='FDesc' style='width:120px;'>" + lab + "</td>";
                //    html += "<td class='FContext'>";
                //    html += InitMapAttrOfCtrl(attr);
                //    html += "</td>";
                //    html += "</tr>";
                //    isDropTR = !isDropTR;
                //    if (rm != null) {
                //        html += "<tr>";
                //        html += "<td class='FDesc' style='width:120px;'></td>";
                //        html += "<td colspan=3>";
                //        html += GenerRM(rm);
                //        html += "</td>";
                //        html += "</tr>";
                //        isDropTR = true;
                //    }
                //    continue;
                //}
				
				if (attr.ColSpan == 3 || (attr.ColSpan == 4 && attr.UIHeight < 40)) {
                    isDropTR = true;
					html += '<div class="row row-margin-top">';
					html += '	<div class="col-md-2 col-sm-2">';
					html += 		lab;
					html += '	</div>';
					html += '	<div class="col-md-8 col-sm-8">';
					html += 		InitMapAttrOfCtrl(attr);
					html += '	</div>';
					html += '</div>';
                    if (rm != null) {
						html += '<div class="row row-margin-top">';
                        html += '	<div class="col-md-2 col-sm-2"></div>';
						html += '	<div class="col-md-8 col-sm-8">';
						html += 		GenerRM(rm);
						html += '	</div>';
						html += '</div>';
                        isDropTR = true;
                    }
                    continue;
                }

				if (attr.ColSpan == 4) {
                    isDropTR = true;
					html += '<div class="row row-margin-top">';
					html += '	<div class="col-md-2 col-sm-2">';
					html += 		lab;
					html += '	</div>';
					html += '	<div class="col-md-8 col-sm-8">';
					html += 		InitMapAttrOfCtrl(attr);
					html += '	</div>';
					html += '</div>';
                    if (rm != null) {
						html += '<div class="row row-margin-top">';
						html += '	<div class="col-md-2 col-sm-2"></div>';
						html += '	<div class="col-md-8 col-sm-8">';
						html += 		GenerRM(rm);
						html += '	</div>';
						html += '</div>';
                        isDropTR = true;
                    }
                    continue;
                }
				if (isDropTR == true) {
					html += '<div class="row row-margin-top">';
					html += '	<div class="col-md-2 col-sm-2">';
					html += 		lab;
					html += '	</div>';
					html += '	<div class="col-md-4 col-sm-4">';
					html += 		InitMapAttrOfCtrl(attr);
					html += '	</div>';

                    isDropTR = !isDropTR;

                    if (rm != null) {
                        html += '	<div class="col-md-6 col-sm-6">';
                        html += 		GenerRM(rm);
						html += '	</div>';
						html += '</div>';
                        isDropTR = true;
                    }
                    continue;
                }
				if (isDropTR == false) {
					html += '	<div class="col-md-2 col-sm-2">';
					html += 		lab;
					html += '	</div>';
					html += '	<div class="col-md-4 col-sm-4">';
					html += 		InitMapAttrOfCtrl(attr);
					html += '	</div>';
					html += '</div>';
                    isDropTR = !isDropTR;
                    if (rm != null) {
						html += '<div class="row row-margin-top">';
                        html += '	<div class="col-md-6 col-sm-6">';
                        html += 		GenerRM(rm);
                        html += '	</div>';
						html += '</div>';
                        isDropTR = true;
                    }

                    continue;
                }

                
            }
            return html;
        }

        function GenerRM(rm) {

            var icon = rm.Icon;
            if (rm.Icon == "" || rm.Icon == null) {
                icon = "../../Img/dot.png";
            }

            if (rm.Icon != null && rm.Icon.indexOf('http') != 0) {
                icon = "../" + rm.Icon;
            }



            // alert('没有实现@代国强, 需要根据窗口大小，弹出模态窗口..');
            var html = "<img src='" + icon + "' border=0 style='width:16px;height:16px;' /><a href='javascript:OpenIt(\"" + rm.Url + "\",\"" + rm.Title + "\",\"" + rm.W + "\",\"" + rm.H + "\")'>" + rm.Title + "</a>";
            return html;
        }

        function InitMapAttrOfCtrl(mapAttr) {

            var str = '';
            var defValue = ""; //  ConvertDefVal(mapAttr);
            var isInOneRow = false; //是否占一整行
            var islabelIsInEle = false; //
            var eleHtml = '';

            //外部数据源类型.
            if (mapAttr.LGType == "0" && mapAttr.MyDataType == "1" && mapAttr.UIContralType == "1") {

                //枚举类型.
                if (mapAttr.UIIsEnable == 1)
                    enableAttr = "";
                else
                    enableAttr = "disabled='disabled'";

                return "<select class='form-control' name='DDL_" + mapAttr.KeyOfEn + "' " + (mapAttr.UIIsEnable == 1 ? '' : 'disabled="disabled"') + ">" + InitDDLOperation(frmData, mapAttr, defValue) + "</select>";
            }

            //外键类型.
            if (mapAttr.LGType == "2" && mapAttr.MyDataType == "1") {

                //枚举类型.
                if (mapAttr.UIIsEnable == 1)
                    enableAttr = "";
                else
                    enableAttr = "disabled='disabled'";

                return "<select class='form-control' name='DDL_" + mapAttr.KeyOfEn + "' " + (mapAttr.UIIsEnable == 1 ? '' : 'disabled="disabled"') + ">" + InitDDLOperation(frmData, mapAttr, defValue) + "</select>";
            }

            //外部数据类型.
            if (mapAttr.LGType == "0" && mapAttr.MyDataType == "1" && mapAttr.UIContral == 1) {

                //枚举类型.
                if (mapAttr.UIIsEnable == 1)
                    enableAttr = "";
                else
                    enableAttr = "disabled='disabled'";

                return "<select class='form-control' name='DDL_" + mapAttr.KeyOfEn + "' " + (mapAttr.UIIsEnable == 1 ? '' : 'disabled="disabled"') + ">" + InitDDLOperation(frmData, mapAttr, defValue) + "</select>";
            }

            //添加文本框 ，日期控件等
            //AppString
            if (mapAttr.MyDataType == "1" && mapAttr.UIContralType == 0) {  //不是外键

                if (mapAttr.UIHeight <= 40) //普通的文本框.
                {
                    var enableAttr = '';
                    if (mapAttr.UIIsEnable == 0)
                        enableAttr = "disabled='disabled'";

                    return "<input class='form-control' maxlength=" + mapAttr.MaxLen + "  name='TB_" + mapAttr.KeyOfEn + "' style='width:100%;' type='text'  " + enableAttr + " />";
                }

                //普通的大块文本.
                return "<textarea class='form-control' maxlength=" + mapAttr.MaxLen + " style='height:" + mapAttr.UIHeight + "px;width:100%;' name='TB_" + mapAttr.KeyOfEn + "' type='text'  " + (mapAttr.UIIsEnable == 1 ? '' : ' disabled="disabled"') + " />"
            }

            //日期类型.
            if (mapAttr.MyDataType == 6) {
                var enableAttr = '';
                if (mapAttr.UIIsEnable == 1)
                    enableAttr = 'onfocus="WdatePicker({dateFmt:' + "'yyyy-MM-dd'})" + '";';
                else
                    enableAttr = "disabled='disabled'";

                return "<input class='form-control' " + enableAttr + " style='width:80px;' name='TB_" + mapAttr.KeyOfEn + "' type='text' />";
            }

            //时期时间类型.
            if (mapAttr.MyDataType == 7) {

                var enableAttr = '';
                if (mapAttr.UIIsEnable == 1)
                    enableAttr = 'onfocus="WdatePicker({dateFmt:' + "'yyyy-MM-dd HH:mm'})" + '";';
                else
                    enableAttr = "disabled='disabled'";

                return "<input class='form-control' type='text'  style='width:120px;' " + enableAttr + " name='TB_" + mapAttr.KeyOfEn + "' />";
            }

            // boolen 类型.
            if (mapAttr.MyDataType == 4) {  // AppBoolean = 7

                if (mapAttr.UIIsEnable == 1)
                    enableAttr = "";
                else
                    enableAttr = "disabled='disabled'";

                //CHECKBOX 默认值
                var checkedStr = '';
                if (checkedStr != "true" && checkedStr != '1') {
                    checkedStr = ' checked="checked" ';
                }

                checkedStr = "";  

                return "<input class='form-control' " + enableAttr + " " + (defValue == 1 ? "checked='checked'" : "") + " type='checkbox' id='CB_" + mapAttr.KeyOfEn + "'  name='CB_" + mapAttr.KeyOfEn + "' " + checkedStr + " /><label for='CB_" + mapAttr.KeyOfEn + "' >" + mapAttr.Name + "</label>";
            }

            //枚举类型.
            if (mapAttr.MyDataType == 2 && mapAttr.LGType == 1) { //AppInt Enum
                if (mapAttr.UIIsEnable == 1)
                    enableAttr = "";
                else
                    enableAttr = "disabled='disabled'";

                return "<select class='form-control' name='DDL_" + mapAttr.KeyOfEn + "' " + (mapAttr.UIIsEnable == 1 ? '' : 'disabled="disabled"') + ">" + InitDDLOperation(frmData, mapAttr, defValue) + "</select>";
            }

            // AppDouble  AppFloat
            if (mapAttr.MyDataType == 5 || mapAttr.MyDataType == 3) {

                var enableAttr = '';
                if (mapAttr.UIIsEnable != 1)
                    enableAttr = "disabled='disabled'";

                // alert(mapAttr.KeyOfEn);
                return "<input class='form-control' style='text-align:right;width:80px;'  onkeyup=" + '"' + "if(isNaN(value)) execCommand('undo')" + '"' + " onafterpaste=" + '"' + "if(isNaN(value))execCommand('undo')" + '"' + " maxlength=" + mapAttr.MaxLen / 2 + "   type='text'" + enableAttr + " name='TB_" + mapAttr.KeyOfEn + "'/>";
            }

            if ((mapAttr.MyDataType == 2)) { //AppInt
                var enableAttr = '';

                //alert(mapAttr.KeyOfEn + " - " + mapAttr.UIIsEnable);

                if (mapAttr.UIIsEnable == 0 || mapAttr.KeyOfEn=="NodeID" ) {
                    enableAttr = "disabled='disabled'";
                }

                return "<input class='form-control' style='text-align:right;width:80px;' onkeyup=" + '"' + "if(isNaN(value) || (value%1 !== 0))execCommand('undo')" + '"' + " onafterpaste=" + '"' + "if(isNaN(value) || (value%1 !== 0))execCommand('undo')" + '"' + " maxlength=" + mapAttr.MaxLen / 2 + "   type='text'" + enableAttr + " name='TB_" + mapAttr.KeyOfEn + "'/>";
            }

            //AppMoney  AppRate
            if (mapAttr.MyDataType == 8) {
                var enableAttr = '';
                if (mapAttr.UIIsEnable == 1) {

                } else {
                    enableAttr = "disabled='disabled'";
                }
                return "<input class='form-control' style='text-align:right;width:80px;' onkeyup=" + '"' + "if(isNaN(value))execCommand('undo')" + '"' + " onafterpaste=" + '"' + "if(isNaN(value))execCommand('undo')" + '"' + " maxlength=" + mapAttr.MaxLen / 2 + "   type='text'" + enableAttr + " name='TB_" + mapAttr.KeyOfEn + "'/>";
            }

            alert(mapAttr.Name + "的类型没有判断.");
            return;
        }

        //填充默认数据
        function ConvertDefVal(attr) {

            //通过MAINTABLE返回的参数
            for (var ele in frmData.MainTable[0]) {
                if (attr.KeyOfEn == ele && frmData.MainTable[0] != '') {
                    result = frmData.MainTable[0][ele];
                    break;
                }
            }

            if (result != undefined && typeof (result) == 'string') {
                //result = result.replace(/｛/g, "{").replace(/｝/g, "}").replace(/：/g, ":").replace(/，/g, ",").replace(/【/g, "[").replace(/】/g, "]").replace(/；/g, ";").replace(/~/g, "'").replace(/‘/g, "'").replace(/‘/g, "'");
            }
            return result = unescape(result);
        }

        //初始化下拉列表框的OPERATION
        function InitDDLOperation(flowData, mapAttr, defVal) {

            var operations = '';
            //外键类型
            //外部数据源类型 FrmGener.js.InitDDLOperation
            if (mapAttr.LGType == 0) {
                var fn;
                try {
                    if (mapAttr.UIBindKey) {
                        fn = eval(mapAttr.UIBindKey);
                    }
                } catch (e) {
                }
                if (typeof fn == "function") {
                    $.each(fn.call(), function (i, obj) {
                        operations += "<option " + (obj.No == defVal ? " selected='selected' " : "") + " value='" + obj.No + "'>" + obj.Name + "</option>";
                    });
                } else if (typeof CommonHandler == "function") {
                    CommonHandler.call("", mapAttr.UIBindKey, function (data) {
                        GenerBindDDL("DDL_" + mapAttr.KeyOfEn, data, "No", "Name");
                    })
                } else {

                    //   alert('没有获得约定的数据源.');
                    alert('没有获得约定的数据源..' + mapAttr.KeyOfEn + " " + mapAttr.UIBindKey);

                }
            } else if (mapAttr.LGType == 2) {
                if (flowData[mapAttr.KeyOfEn] != undefined) {
                    $.each(flowData[mapAttr.KeyOfEn], function (i, obj) {
                        operations += "<option " + (obj.No == defVal ? " selected='selected' " : "") + " value='" + obj.No + "'>" + obj.Name + "</option>";
                    });
                }
                else if (flowData[mapAttr.UIBindKey] != undefined) {
                    $.each(flowData[mapAttr.UIBindKey], function (i, obj) {
                        operations += "<option " + (obj.No == defVal ? " selected='selected' " : "") + " value='" + obj.No + "'>" + obj.Name + "</option>";
                    });
                }
            } else {

                var enums = flowData.Sys_Enum;
                enums = $.grep(enums, function (value) {
                    return value.EnumKey == mapAttr.UIBindKey;
                });


                $.each(enums, function (i, obj) {
                    operations += "<option " + (obj.IntKey == defVal ? " selected='selected' " : "") + " value='" + obj.IntKey + "'>" + obj.Lab + "</option>";
                });
            }
            return operations;
        }

        //新建.
        function New() {
            var enName = GetQueryString("EnName");
            var url = "?EnName=" + GetQueryString("EnName") + "&t=" + Math.random();
            window.location.href = url; //刷新.
        }

        //更新.
        function Update() {

            var enName = GetQueryString("EnName");
            var en = new Entity(enName);
            var pkval = GetPKVal();
            //  alert(pkval);
            if (pkval == null) {
                en.CopyForm();
                var info = en.Insert();
                if (info != 1) {
                    alert('插入错误:' + info);
                    return;
                }
            } else {
                en.pkval = pkval;
                 en.RetrieveFromDBSources();
                en.CopyForm();
                en.pkval = pkval;
                var i = en.Update();
                if (info != 1) {
                    alert('更新错误:' + info);
                    return;
                }
            }

            var url = "?EnName=" + GetQueryString("EnName") + "&PKVal=" + en.pkval;
            window.location.href = url; //刷新.
        }

        function Delete() {

            if (window.confirm('您确定要删除吗？') == false)
                return;

            var enName = GetQueryString("EnName");
            var en = new Entity(enName);
            en.pkval = GetPKVal();
            en.RetrieveFromDBSources();
            en.Delete();

            $("#Btns").html("");
            $("#Left").html("");
            $("#CCForm").html("删除成功..");
        }

        function CloseIt() {
            if (window.parent && window.parent.CloseBootstrapDialog) {
                window.parent.CloseBootstrapDialog("取消");
            } else {
                window.close();
            }
        }
    </script>
</head>
<body>
<div class="container-fluid">
	<div class="row">
		<div class="col-md-12 col-sm-12">

     <div id="Btns" class="form-inline">
     </div>

		</div>
	</div>
                <form id="divCCForm"  method="post">

	<div class="row">
		<div class="col-md-12">
			<div class="row">
				<div class="col-md-4 col-sm-4">
					<div id="Left" class="panel-group"></div>
				</div>
				<div class="col-md-8 col-sm-8">
					<div class="row">
						<div class="col-md-12">
							<div id="CCForm" style="">
								<br />
								<img src='./../../Img/loading.gif' />正在初始化表单模板及数据，请耐心等待。。。
								<br />
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>

                </form>
</div>
</body>
</html>
