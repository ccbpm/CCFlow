//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.1022
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 4.0.50826.0
// 
namespace CCForm.FF {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="FF.CCFormSoap")]
    public interface CCFormSoap {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/CfgKey", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginCfgKey(string key, string UserNo, string SID, System.AsyncCallback callback, object asyncState);
        
        string EndCfgKey(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/AttachmentFiles", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginAttachmentFiles(CCForm.FF.AttachmentFilesRequest request, System.AsyncCallback callback, object asyncState);
        
        CCForm.FF.AttachmentFilesResponse EndAttachmentFiles(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/UploadFile", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginUploadFile(CCForm.FF.UploadFileRequest request, System.AsyncCallback callback, object asyncState);
        
        CCForm.FF.UploadFileResponse EndUploadFile(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/RunSQL", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginRunSQL(string sql, string UserNo, string SID, System.AsyncCallback callback, object asyncState);
        
        int EndRunSQL(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/RunSQLs", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginRunSQLs(string sqls, string UserNo, string SID, System.AsyncCallback callback, object asyncState);
        
        int EndRunSQLs(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/RunSQLReturnTable", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginRunSQLReturnTable(string sql, string UserNo, string SID, System.AsyncCallback callback, object asyncState);
        
        string EndRunSQLReturnTable(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/RunSQLReturnJson", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginRunSQLReturnJson(string sql, string UserNo, string SID, System.AsyncCallback callback, object asyncState);
        
        string EndRunSQLReturnJson(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/RunSQLReturnTable2DataTable", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginRunSQLReturnTable2DataTable(string sql, string UserNo, string SID, System.AsyncCallback callback, object asyncState);
        
        CCForm.FF.RunSQLReturnTable2DataTableResponseRunSQLReturnTable2DataTableResult EndRunSQLReturnTable2DataTable(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/RunSQLReturnString", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginRunSQLReturnString(string sql, string UserNo, string SID, System.AsyncCallback callback, object asyncState);
        
        string EndRunSQLReturnString(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/RunSQLReturnValInt", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginRunSQLReturnValInt(string sql, string UserNo, string SID, System.AsyncCallback callback, object asyncState);
        
        int EndRunSQLReturnValInt(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/RunSQLReturnValFloat", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginRunSQLReturnValFloat(string sql, string UserNo, string SID, System.AsyncCallback callback, object asyncState);
        
        float EndRunSQLReturnValFloat(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/RunSQLReturnTableS", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginRunSQLReturnTableS(string sqls, string UserNo, string SID, System.AsyncCallback callback, object asyncState);
        
        string EndRunSQLReturnTableS(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ParseStringToPinyin", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginParseStringToPinyin(string name, bool flag, System.AsyncCallback callback, object asyncState);
        
        string EndParseStringToPinyin(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/SaveEnum", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginSaveEnum(string enumKey, string enumLab, string cfg, System.AsyncCallback callback, object asyncState);
        
        string EndSaveEnum(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/SaveEnumField", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginSaveEnumField(string fk_mapData, string fieldKey, string fieldName, string enumKey, double x, double y, System.AsyncCallback callback, object asyncState);
        
        string EndSaveEnumField(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/SaveFKField", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginSaveFKField(string fk_mapData, string fieldKey, string fieldName, string enName, double x, double y, System.AsyncCallback callback, object asyncState);
        
        string EndSaveFKField(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/SaveImageAsFile", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginSaveImageAsFile(CCForm.FF.SaveImageAsFileRequest request, System.AsyncCallback callback, object asyncState);
        
        CCForm.FF.SaveImageAsFileResponse EndSaveImageAsFile(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/LoadFrmTemplete", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginLoadFrmTemplete(CCForm.FF.LoadFrmTempleteRequest request, System.AsyncCallback callback, object asyncState);
        
        CCForm.FF.LoadFrmTempleteResponse EndLoadFrmTemplete(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/LoadFrmTempleteFile", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginLoadFrmTempleteFile(string file, string fk_mapData, bool isClear, bool isSetReadonly, System.AsyncCallback callback, object asyncState);
        
        string EndLoadFrmTempleteFile(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetXmlData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginGetXmlData(string xmlFileName, System.AsyncCallback callback, object asyncState);
        
        string EndGetXmlData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/DoType", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginDoType(string dotype, string v1, string v2, string v3, string v4, string v5, System.AsyncCallback callback, object asyncState);
        
        string EndDoType(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/SaveEn", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginSaveEn(string vals, System.AsyncCallback callback, object asyncState);
        
        string EndSaveEn(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/FtpMethod", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginFtpMethod(string doType, string v1, string v2, string v3, System.AsyncCallback callback, object asyncState);
        
        string EndFtpMethod(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/RequestSFTableV1", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginRequestSFTableV1(string uiBindKey, System.AsyncCallback callback, object asyncState);
        
        string EndRequestSFTableV1(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GenerFrm", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginGenerFrm(string fk_mapdata, int workID, System.AsyncCallback callback, object asyncState);
        
        string EndGenerFrm(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/CopyFrm", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginCopyFrm(string fromMapData, string fk_mapdata, bool isClear, bool isSetReadonly, System.AsyncCallback callback, object asyncState);
        
        string EndCopyFrm(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/SaveFrm", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginSaveFrm(string fk_mapdata, string xml, string sqls, string UserNo, string SID, System.AsyncCallback callback, object asyncState);
        
        string EndSaveFrm(System.IAsyncResult result);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AttachmentFiles", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class AttachmentFilesRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string WorkID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string FK_Node;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string FK_FrmAttachment;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public string UserNo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public string UserName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=5)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] FileByte;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=6)]
        public string fileName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=7)]
        public string MyNote;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=8)]
        public string sort;
        
        public AttachmentFilesRequest() {
        }
        
        public AttachmentFilesRequest(string WorkID, string FK_Node, string FK_FrmAttachment, string UserNo, string UserName, byte[] FileByte, string fileName, string MyNote, string sort) {
            this.WorkID = WorkID;
            this.FK_Node = FK_Node;
            this.FK_FrmAttachment = FK_FrmAttachment;
            this.UserNo = UserNo;
            this.UserName = UserName;
            this.FileByte = FileByte;
            this.fileName = fileName;
            this.MyNote = MyNote;
            this.sort = sort;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AttachmentFilesResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class AttachmentFilesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string AttachmentFilesResult;
        
        public AttachmentFilesResponse() {
        }
        
        public AttachmentFilesResponse(string AttachmentFilesResult) {
            this.AttachmentFilesResult = AttachmentFilesResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UploadFile", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UploadFileRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] FileByte;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string fileName;
        
        public UploadFileRequest() {
        }
        
        public UploadFileRequest(byte[] FileByte, string fileName) {
            this.FileByte = FileByte;
            this.fileName = fileName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UploadFileResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UploadFileResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string UploadFileResult;
        
        public UploadFileResponse() {
        }
        
        public UploadFileResponse(string UploadFileResult) {
            this.UploadFileResult = UploadFileResult;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1015")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class RunSQLReturnTable2DataTableResponseRunSQLReturnTable2DataTableResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Xml.Linq.XElement[] anyField;
        
        private System.Xml.Linq.XElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.Linq.XElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.Linq.XElement Any1 {
            get {
                return this.any1Field;
            }
            set {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SaveImageAsFile", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class SaveImageAsFileRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] img;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string pkval;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string fk_Frm_Ele;
        
        public SaveImageAsFileRequest() {
        }
        
        public SaveImageAsFileRequest(byte[] img, string pkval, string fk_Frm_Ele) {
            this.img = img;
            this.pkval = pkval;
            this.fk_Frm_Ele = fk_Frm_Ele;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SaveImageAsFileResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class SaveImageAsFileResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string SaveImageAsFileResult;
        
        public SaveImageAsFileResponse() {
        }
        
        public SaveImageAsFileResponse(string SaveImageAsFileResult) {
            this.SaveImageAsFileResult = SaveImageAsFileResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="LoadFrmTemplete", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class LoadFrmTempleteRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] fileByte;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string fk_mapData;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public bool isClear;
        
        public LoadFrmTempleteRequest() {
        }
        
        public LoadFrmTempleteRequest(byte[] fileByte, string fk_mapData, bool isClear) {
            this.fileByte = fileByte;
            this.fk_mapData = fk_mapData;
            this.isClear = isClear;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="LoadFrmTempleteResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class LoadFrmTempleteResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string LoadFrmTempleteResult;
        
        public LoadFrmTempleteResponse() {
        }
        
        public LoadFrmTempleteResponse(string LoadFrmTempleteResult) {
            this.LoadFrmTempleteResult = LoadFrmTempleteResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface CCFormSoapChannel : CCForm.FF.CCFormSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CfgKeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CfgKeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AttachmentFilesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AttachmentFilesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UploadFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UploadFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RunSQLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RunSQLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RunSQLsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RunSQLsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RunSQLReturnTableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RunSQLReturnTableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RunSQLReturnJsonCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RunSQLReturnJsonCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RunSQLReturnTable2DataTableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RunSQLReturnTable2DataTableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public CCForm.FF.RunSQLReturnTable2DataTableResponseRunSQLReturnTable2DataTableResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((CCForm.FF.RunSQLReturnTable2DataTableResponseRunSQLReturnTable2DataTableResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RunSQLReturnStringCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RunSQLReturnStringCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RunSQLReturnValIntCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RunSQLReturnValIntCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RunSQLReturnValFloatCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RunSQLReturnValFloatCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public float Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((float)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RunSQLReturnTableSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RunSQLReturnTableSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ParseStringToPinyinCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ParseStringToPinyinCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SaveEnumCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SaveEnumCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SaveEnumFieldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SaveEnumFieldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SaveFKFieldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SaveFKFieldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SaveImageAsFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SaveImageAsFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LoadFrmTempleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public LoadFrmTempleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LoadFrmTempleteFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public LoadFrmTempleteFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetXmlDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetXmlDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DoTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DoTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SaveEnCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SaveEnCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FtpMethodCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public FtpMethodCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RequestSFTableV1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RequestSFTableV1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GenerFrmCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GenerFrmCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CopyFrmCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CopyFrmCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SaveFrmCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SaveFrmCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CCFormSoapClient : System.ServiceModel.ClientBase<CCForm.FF.CCFormSoap>, CCForm.FF.CCFormSoap {
        
        private BeginOperationDelegate onBeginCfgKeyDelegate;
        
        private EndOperationDelegate onEndCfgKeyDelegate;
        
        private System.Threading.SendOrPostCallback onCfgKeyCompletedDelegate;
        
        private BeginOperationDelegate onBeginAttachmentFilesDelegate;
        
        private EndOperationDelegate onEndAttachmentFilesDelegate;
        
        private System.Threading.SendOrPostCallback onAttachmentFilesCompletedDelegate;
        
        private BeginOperationDelegate onBeginUploadFileDelegate;
        
        private EndOperationDelegate onEndUploadFileDelegate;
        
        private System.Threading.SendOrPostCallback onUploadFileCompletedDelegate;
        
        private BeginOperationDelegate onBeginRunSQLDelegate;
        
        private EndOperationDelegate onEndRunSQLDelegate;
        
        private System.Threading.SendOrPostCallback onRunSQLCompletedDelegate;
        
        private BeginOperationDelegate onBeginRunSQLsDelegate;
        
        private EndOperationDelegate onEndRunSQLsDelegate;
        
        private System.Threading.SendOrPostCallback onRunSQLsCompletedDelegate;
        
        private BeginOperationDelegate onBeginRunSQLReturnTableDelegate;
        
        private EndOperationDelegate onEndRunSQLReturnTableDelegate;
        
        private System.Threading.SendOrPostCallback onRunSQLReturnTableCompletedDelegate;
        
        private BeginOperationDelegate onBeginRunSQLReturnJsonDelegate;
        
        private EndOperationDelegate onEndRunSQLReturnJsonDelegate;
        
        private System.Threading.SendOrPostCallback onRunSQLReturnJsonCompletedDelegate;
        
        private BeginOperationDelegate onBeginRunSQLReturnTable2DataTableDelegate;
        
        private EndOperationDelegate onEndRunSQLReturnTable2DataTableDelegate;
        
        private System.Threading.SendOrPostCallback onRunSQLReturnTable2DataTableCompletedDelegate;
        
        private BeginOperationDelegate onBeginRunSQLReturnStringDelegate;
        
        private EndOperationDelegate onEndRunSQLReturnStringDelegate;
        
        private System.Threading.SendOrPostCallback onRunSQLReturnStringCompletedDelegate;
        
        private BeginOperationDelegate onBeginRunSQLReturnValIntDelegate;
        
        private EndOperationDelegate onEndRunSQLReturnValIntDelegate;
        
        private System.Threading.SendOrPostCallback onRunSQLReturnValIntCompletedDelegate;
        
        private BeginOperationDelegate onBeginRunSQLReturnValFloatDelegate;
        
        private EndOperationDelegate onEndRunSQLReturnValFloatDelegate;
        
        private System.Threading.SendOrPostCallback onRunSQLReturnValFloatCompletedDelegate;
        
        private BeginOperationDelegate onBeginRunSQLReturnTableSDelegate;
        
        private EndOperationDelegate onEndRunSQLReturnTableSDelegate;
        
        private System.Threading.SendOrPostCallback onRunSQLReturnTableSCompletedDelegate;
        
        private BeginOperationDelegate onBeginParseStringToPinyinDelegate;
        
        private EndOperationDelegate onEndParseStringToPinyinDelegate;
        
        private System.Threading.SendOrPostCallback onParseStringToPinyinCompletedDelegate;
        
        private BeginOperationDelegate onBeginSaveEnumDelegate;
        
        private EndOperationDelegate onEndSaveEnumDelegate;
        
        private System.Threading.SendOrPostCallback onSaveEnumCompletedDelegate;
        
        private BeginOperationDelegate onBeginSaveEnumFieldDelegate;
        
        private EndOperationDelegate onEndSaveEnumFieldDelegate;
        
        private System.Threading.SendOrPostCallback onSaveEnumFieldCompletedDelegate;
        
        private BeginOperationDelegate onBeginSaveFKFieldDelegate;
        
        private EndOperationDelegate onEndSaveFKFieldDelegate;
        
        private System.Threading.SendOrPostCallback onSaveFKFieldCompletedDelegate;
        
        private BeginOperationDelegate onBeginSaveImageAsFileDelegate;
        
        private EndOperationDelegate onEndSaveImageAsFileDelegate;
        
        private System.Threading.SendOrPostCallback onSaveImageAsFileCompletedDelegate;
        
        private BeginOperationDelegate onBeginLoadFrmTempleteDelegate;
        
        private EndOperationDelegate onEndLoadFrmTempleteDelegate;
        
        private System.Threading.SendOrPostCallback onLoadFrmTempleteCompletedDelegate;
        
        private BeginOperationDelegate onBeginLoadFrmTempleteFileDelegate;
        
        private EndOperationDelegate onEndLoadFrmTempleteFileDelegate;
        
        private System.Threading.SendOrPostCallback onLoadFrmTempleteFileCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetXmlDataDelegate;
        
        private EndOperationDelegate onEndGetXmlDataDelegate;
        
        private System.Threading.SendOrPostCallback onGetXmlDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginDoTypeDelegate;
        
        private EndOperationDelegate onEndDoTypeDelegate;
        
        private System.Threading.SendOrPostCallback onDoTypeCompletedDelegate;
        
        private BeginOperationDelegate onBeginSaveEnDelegate;
        
        private EndOperationDelegate onEndSaveEnDelegate;
        
        private System.Threading.SendOrPostCallback onSaveEnCompletedDelegate;
        
        private BeginOperationDelegate onBeginFtpMethodDelegate;
        
        private EndOperationDelegate onEndFtpMethodDelegate;
        
        private System.Threading.SendOrPostCallback onFtpMethodCompletedDelegate;
        
        private BeginOperationDelegate onBeginRequestSFTableV1Delegate;
        
        private EndOperationDelegate onEndRequestSFTableV1Delegate;
        
        private System.Threading.SendOrPostCallback onRequestSFTableV1CompletedDelegate;
        
        private BeginOperationDelegate onBeginGenerFrmDelegate;
        
        private EndOperationDelegate onEndGenerFrmDelegate;
        
        private System.Threading.SendOrPostCallback onGenerFrmCompletedDelegate;
        
        private BeginOperationDelegate onBeginCopyFrmDelegate;
        
        private EndOperationDelegate onEndCopyFrmDelegate;
        
        private System.Threading.SendOrPostCallback onCopyFrmCompletedDelegate;
        
        private BeginOperationDelegate onBeginSaveFrmDelegate;
        
        private EndOperationDelegate onEndSaveFrmDelegate;
        
        private System.Threading.SendOrPostCallback onSaveFrmCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public CCFormSoapClient() {
        }
        
        public CCFormSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CCFormSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CCFormSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CCFormSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("无法设置 CookieContainer。请确保绑定包含 HttpCookieContainerBindingElement。");
                }
            }
        }
        
        public event System.EventHandler<CfgKeyCompletedEventArgs> CfgKeyCompleted;
        
        public event System.EventHandler<AttachmentFilesCompletedEventArgs> AttachmentFilesCompleted;
        
        public event System.EventHandler<UploadFileCompletedEventArgs> UploadFileCompleted;
        
        public event System.EventHandler<RunSQLCompletedEventArgs> RunSQLCompleted;
        
        public event System.EventHandler<RunSQLsCompletedEventArgs> RunSQLsCompleted;
        
        public event System.EventHandler<RunSQLReturnTableCompletedEventArgs> RunSQLReturnTableCompleted;
        
        public event System.EventHandler<RunSQLReturnJsonCompletedEventArgs> RunSQLReturnJsonCompleted;
        
        public event System.EventHandler<RunSQLReturnTable2DataTableCompletedEventArgs> RunSQLReturnTable2DataTableCompleted;
        
        public event System.EventHandler<RunSQLReturnStringCompletedEventArgs> RunSQLReturnStringCompleted;
        
        public event System.EventHandler<RunSQLReturnValIntCompletedEventArgs> RunSQLReturnValIntCompleted;
        
        public event System.EventHandler<RunSQLReturnValFloatCompletedEventArgs> RunSQLReturnValFloatCompleted;
        
        public event System.EventHandler<RunSQLReturnTableSCompletedEventArgs> RunSQLReturnTableSCompleted;
        
        public event System.EventHandler<ParseStringToPinyinCompletedEventArgs> ParseStringToPinyinCompleted;
        
        public event System.EventHandler<SaveEnumCompletedEventArgs> SaveEnumCompleted;
        
        public event System.EventHandler<SaveEnumFieldCompletedEventArgs> SaveEnumFieldCompleted;
        
        public event System.EventHandler<SaveFKFieldCompletedEventArgs> SaveFKFieldCompleted;
        
        public event System.EventHandler<SaveImageAsFileCompletedEventArgs> SaveImageAsFileCompleted;
        
        public event System.EventHandler<LoadFrmTempleteCompletedEventArgs> LoadFrmTempleteCompleted;
        
        public event System.EventHandler<LoadFrmTempleteFileCompletedEventArgs> LoadFrmTempleteFileCompleted;
        
        public event System.EventHandler<GetXmlDataCompletedEventArgs> GetXmlDataCompleted;
        
        public event System.EventHandler<DoTypeCompletedEventArgs> DoTypeCompleted;
        
        public event System.EventHandler<SaveEnCompletedEventArgs> SaveEnCompleted;
        
        public event System.EventHandler<FtpMethodCompletedEventArgs> FtpMethodCompleted;
        
        public event System.EventHandler<RequestSFTableV1CompletedEventArgs> RequestSFTableV1Completed;
        
        public event System.EventHandler<GenerFrmCompletedEventArgs> GenerFrmCompleted;
        
        public event System.EventHandler<CopyFrmCompletedEventArgs> CopyFrmCompleted;
        
        public event System.EventHandler<SaveFrmCompletedEventArgs> SaveFrmCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CCForm.FF.CCFormSoap.BeginCfgKey(string key, string UserNo, string SID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCfgKey(key, UserNo, SID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string CCForm.FF.CCFormSoap.EndCfgKey(System.IAsyncResult result) {
            return base.Channel.EndCfgKey(result);
        }
        
        private System.IAsyncResult OnBeginCfgKey(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string key = ((string)(inValues[0]));
            string UserNo = ((string)(inValues[1]));
            string SID = ((string)(inValues[2]));
            return ((CCForm.FF.CCFormSoap)(this)).BeginCfgKey(key, UserNo, SID, callback, asyncState);
        }
        
        private object[] OnEndCfgKey(System.IAsyncResult result) {
            string retVal = ((CCForm.FF.CCFormSoap)(this)).EndCfgKey(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCfgKeyCompleted(object state) {
            if ((this.CfgKeyCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CfgKeyCompleted(this, new CfgKeyCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CfgKeyAsync(string key, string UserNo, string SID) {
            this.CfgKeyAsync(key, UserNo, SID, null);
        }
        
        public void CfgKeyAsync(string key, string UserNo, string SID, object userState) {
            if ((this.onBeginCfgKeyDelegate == null)) {
                this.onBeginCfgKeyDelegate = new BeginOperationDelegate(this.OnBeginCfgKey);
            }
            if ((this.onEndCfgKeyDelegate == null)) {
                this.onEndCfgKeyDelegate = new EndOperationDelegate(this.OnEndCfgKey);
            }
            if ((this.onCfgKeyCompletedDelegate == null)) {
                this.onCfgKeyCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCfgKeyCompleted);
            }
            base.InvokeAsync(this.onBeginCfgKeyDelegate, new object[] {
                        key,
                        UserNo,
                        SID}, this.onEndCfgKeyDelegate, this.onCfgKeyCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CCForm.FF.CCFormSoap.BeginAttachmentFiles(CCForm.FF.AttachmentFilesRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAttachmentFiles(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginAttachmentFiles(string WorkID, string FK_Node, string FK_FrmAttachment, string UserNo, string UserName, byte[] FileByte, string fileName, string MyNote, string sort, System.AsyncCallback callback, object asyncState) {
            CCForm.FF.AttachmentFilesRequest inValue = new CCForm.FF.AttachmentFilesRequest();
            inValue.WorkID = WorkID;
            inValue.FK_Node = FK_Node;
            inValue.FK_FrmAttachment = FK_FrmAttachment;
            inValue.UserNo = UserNo;
            inValue.UserName = UserName;
            inValue.FileByte = FileByte;
            inValue.fileName = fileName;
            inValue.MyNote = MyNote;
            inValue.sort = sort;
            return ((CCForm.FF.CCFormSoap)(this)).BeginAttachmentFiles(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        CCForm.FF.AttachmentFilesResponse CCForm.FF.CCFormSoap.EndAttachmentFiles(System.IAsyncResult result) {
            return base.Channel.EndAttachmentFiles(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private string EndAttachmentFiles(System.IAsyncResult result) {
            CCForm.FF.AttachmentFilesResponse retVal = ((CCForm.FF.CCFormSoap)(this)).EndAttachmentFiles(result);
            return retVal.AttachmentFilesResult;
        }
        
        private System.IAsyncResult OnBeginAttachmentFiles(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string WorkID = ((string)(inValues[0]));
            string FK_Node = ((string)(inValues[1]));
            string FK_FrmAttachment = ((string)(inValues[2]));
            string UserNo = ((string)(inValues[3]));
            string UserName = ((string)(inValues[4]));
            byte[] FileByte = ((byte[])(inValues[5]));
            string fileName = ((string)(inValues[6]));
            string MyNote = ((string)(inValues[7]));
            string sort = ((string)(inValues[8]));
            return this.BeginAttachmentFiles(WorkID, FK_Node, FK_FrmAttachment, UserNo, UserName, FileByte, fileName, MyNote, sort, callback, asyncState);
        }
        
        private object[] OnEndAttachmentFiles(System.IAsyncResult result) {
            string retVal = this.EndAttachmentFiles(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAttachmentFilesCompleted(object state) {
            if ((this.AttachmentFilesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AttachmentFilesCompleted(this, new AttachmentFilesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AttachmentFilesAsync(string WorkID, string FK_Node, string FK_FrmAttachment, string UserNo, string UserName, byte[] FileByte, string fileName, string MyNote, string sort) {
            this.AttachmentFilesAsync(WorkID, FK_Node, FK_FrmAttachment, UserNo, UserName, FileByte, fileName, MyNote, sort, null);
        }
        
        public void AttachmentFilesAsync(string WorkID, string FK_Node, string FK_FrmAttachment, string UserNo, string UserName, byte[] FileByte, string fileName, string MyNote, string sort, object userState) {
            if ((this.onBeginAttachmentFilesDelegate == null)) {
                this.onBeginAttachmentFilesDelegate = new BeginOperationDelegate(this.OnBeginAttachmentFiles);
            }
            if ((this.onEndAttachmentFilesDelegate == null)) {
                this.onEndAttachmentFilesDelegate = new EndOperationDelegate(this.OnEndAttachmentFiles);
            }
            if ((this.onAttachmentFilesCompletedDelegate == null)) {
                this.onAttachmentFilesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAttachmentFilesCompleted);
            }
            base.InvokeAsync(this.onBeginAttachmentFilesDelegate, new object[] {
                        WorkID,
                        FK_Node,
                        FK_FrmAttachment,
                        UserNo,
                        UserName,
                        FileByte,
                        fileName,
                        MyNote,
                        sort}, this.onEndAttachmentFilesDelegate, this.onAttachmentFilesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CCForm.FF.CCFormSoap.BeginUploadFile(CCForm.FF.UploadFileRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUploadFile(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginUploadFile(byte[] FileByte, string fileName, System.AsyncCallback callback, object asyncState) {
            CCForm.FF.UploadFileRequest inValue = new CCForm.FF.UploadFileRequest();
            inValue.FileByte = FileByte;
            inValue.fileName = fileName;
            return ((CCForm.FF.CCFormSoap)(this)).BeginUploadFile(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        CCForm.FF.UploadFileResponse CCForm.FF.CCFormSoap.EndUploadFile(System.IAsyncResult result) {
            return base.Channel.EndUploadFile(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private string EndUploadFile(System.IAsyncResult result) {
            CCForm.FF.UploadFileResponse retVal = ((CCForm.FF.CCFormSoap)(this)).EndUploadFile(result);
            return retVal.UploadFileResult;
        }
        
        private System.IAsyncResult OnBeginUploadFile(object[] inValues, System.AsyncCallback callback, object asyncState) {
            byte[] FileByte = ((byte[])(inValues[0]));
            string fileName = ((string)(inValues[1]));
            return this.BeginUploadFile(FileByte, fileName, callback, asyncState);
        }
        
        private object[] OnEndUploadFile(System.IAsyncResult result) {
            string retVal = this.EndUploadFile(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUploadFileCompleted(object state) {
            if ((this.UploadFileCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UploadFileCompleted(this, new UploadFileCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UploadFileAsync(byte[] FileByte, string fileName) {
            this.UploadFileAsync(FileByte, fileName, null);
        }
        
        public void UploadFileAsync(byte[] FileByte, string fileName, object userState) {
            if ((this.onBeginUploadFileDelegate == null)) {
                this.onBeginUploadFileDelegate = new BeginOperationDelegate(this.OnBeginUploadFile);
            }
            if ((this.onEndUploadFileDelegate == null)) {
                this.onEndUploadFileDelegate = new EndOperationDelegate(this.OnEndUploadFile);
            }
            if ((this.onUploadFileCompletedDelegate == null)) {
                this.onUploadFileCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUploadFileCompleted);
            }
            base.InvokeAsync(this.onBeginUploadFileDelegate, new object[] {
                        FileByte,
                        fileName}, this.onEndUploadFileDelegate, this.onUploadFileCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CCForm.FF.CCFormSoap.BeginRunSQL(string sql, string UserNo, string SID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRunSQL(sql, UserNo, SID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int CCForm.FF.CCFormSoap.EndRunSQL(System.IAsyncResult result) {
            return base.Channel.EndRunSQL(result);
        }
        
        private System.IAsyncResult OnBeginRunSQL(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sql = ((string)(inValues[0]));
            string UserNo = ((string)(inValues[1]));
            string SID = ((string)(inValues[2]));
            return ((CCForm.FF.CCFormSoap)(this)).BeginRunSQL(sql, UserNo, SID, callback, asyncState);
        }
        
        private object[] OnEndRunSQL(System.IAsyncResult result) {
            int retVal = ((CCForm.FF.CCFormSoap)(this)).EndRunSQL(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRunSQLCompleted(object state) {
            if ((this.RunSQLCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RunSQLCompleted(this, new RunSQLCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RunSQLAsync(string sql, string UserNo, string SID) {
            this.RunSQLAsync(sql, UserNo, SID, null);
        }
        
        public void RunSQLAsync(string sql, string UserNo, string SID, object userState) {
            if ((this.onBeginRunSQLDelegate == null)) {
                this.onBeginRunSQLDelegate = new BeginOperationDelegate(this.OnBeginRunSQL);
            }
            if ((this.onEndRunSQLDelegate == null)) {
                this.onEndRunSQLDelegate = new EndOperationDelegate(this.OnEndRunSQL);
            }
            if ((this.onRunSQLCompletedDelegate == null)) {
                this.onRunSQLCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRunSQLCompleted);
            }
            base.InvokeAsync(this.onBeginRunSQLDelegate, new object[] {
                        sql,
                        UserNo,
                        SID}, this.onEndRunSQLDelegate, this.onRunSQLCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CCForm.FF.CCFormSoap.BeginRunSQLs(string sqls, string UserNo, string SID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRunSQLs(sqls, UserNo, SID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int CCForm.FF.CCFormSoap.EndRunSQLs(System.IAsyncResult result) {
            return base.Channel.EndRunSQLs(result);
        }
        
        private System.IAsyncResult OnBeginRunSQLs(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sqls = ((string)(inValues[0]));
            string UserNo = ((string)(inValues[1]));
            string SID = ((string)(inValues[2]));
            return ((CCForm.FF.CCFormSoap)(this)).BeginRunSQLs(sqls, UserNo, SID, callback, asyncState);
        }
        
        private object[] OnEndRunSQLs(System.IAsyncResult result) {
            int retVal = ((CCForm.FF.CCFormSoap)(this)).EndRunSQLs(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRunSQLsCompleted(object state) {
            if ((this.RunSQLsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RunSQLsCompleted(this, new RunSQLsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RunSQLsAsync(string sqls, string UserNo, string SID) {
            this.RunSQLsAsync(sqls, UserNo, SID, null);
        }
        
        public void RunSQLsAsync(string sqls, string UserNo, string SID, object userState) {
            if ((this.onBeginRunSQLsDelegate == null)) {
                this.onBeginRunSQLsDelegate = new BeginOperationDelegate(this.OnBeginRunSQLs);
            }
            if ((this.onEndRunSQLsDelegate == null)) {
                this.onEndRunSQLsDelegate = new EndOperationDelegate(this.OnEndRunSQLs);
            }
            if ((this.onRunSQLsCompletedDelegate == null)) {
                this.onRunSQLsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRunSQLsCompleted);
            }
            base.InvokeAsync(this.onBeginRunSQLsDelegate, new object[] {
                        sqls,
                        UserNo,
                        SID}, this.onEndRunSQLsDelegate, this.onRunSQLsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CCForm.FF.CCFormSoap.BeginRunSQLReturnTable(string sql, string UserNo, string SID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRunSQLReturnTable(sql, UserNo, SID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string CCForm.FF.CCFormSoap.EndRunSQLReturnTable(System.IAsyncResult result) {
            return base.Channel.EndRunSQLReturnTable(result);
        }
        
        private System.IAsyncResult OnBeginRunSQLReturnTable(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sql = ((string)(inValues[0]));
            string UserNo = ((string)(inValues[1]));
            string SID = ((string)(inValues[2]));
            return ((CCForm.FF.CCFormSoap)(this)).BeginRunSQLReturnTable(sql, UserNo, SID, callback, asyncState);
        }
        
        private object[] OnEndRunSQLReturnTable(System.IAsyncResult result) {
            string retVal = ((CCForm.FF.CCFormSoap)(this)).EndRunSQLReturnTable(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRunSQLReturnTableCompleted(object state) {
            if ((this.RunSQLReturnTableCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RunSQLReturnTableCompleted(this, new RunSQLReturnTableCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RunSQLReturnTableAsync(string sql, string UserNo, string SID) {
            this.RunSQLReturnTableAsync(sql, UserNo, SID, null);
        }
        
        public void RunSQLReturnTableAsync(string sql, string UserNo, string SID, object userState) {
            if ((this.onBeginRunSQLReturnTableDelegate == null)) {
                this.onBeginRunSQLReturnTableDelegate = new BeginOperationDelegate(this.OnBeginRunSQLReturnTable);
            }
            if ((this.onEndRunSQLReturnTableDelegate == null)) {
                this.onEndRunSQLReturnTableDelegate = new EndOperationDelegate(this.OnEndRunSQLReturnTable);
            }
            if ((this.onRunSQLReturnTableCompletedDelegate == null)) {
                this.onRunSQLReturnTableCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRunSQLReturnTableCompleted);
            }
            base.InvokeAsync(this.onBeginRunSQLReturnTableDelegate, new object[] {
                        sql,
                        UserNo,
                        SID}, this.onEndRunSQLReturnTableDelegate, this.onRunSQLReturnTableCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CCForm.FF.CCFormSoap.BeginRunSQLReturnJson(string sql, string UserNo, string SID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRunSQLReturnJson(sql, UserNo, SID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string CCForm.FF.CCFormSoap.EndRunSQLReturnJson(System.IAsyncResult result) {
            return base.Channel.EndRunSQLReturnJson(result);
        }
        
        private System.IAsyncResult OnBeginRunSQLReturnJson(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sql = ((string)(inValues[0]));
            string UserNo = ((string)(inValues[1]));
            string SID = ((string)(inValues[2]));
            return ((CCForm.FF.CCFormSoap)(this)).BeginRunSQLReturnJson(sql, UserNo, SID, callback, asyncState);
        }
        
        private object[] OnEndRunSQLReturnJson(System.IAsyncResult result) {
            string retVal = ((CCForm.FF.CCFormSoap)(this)).EndRunSQLReturnJson(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRunSQLReturnJsonCompleted(object state) {
            if ((this.RunSQLReturnJsonCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RunSQLReturnJsonCompleted(this, new RunSQLReturnJsonCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RunSQLReturnJsonAsync(string sql, string UserNo, string SID) {
            this.RunSQLReturnJsonAsync(sql, UserNo, SID, null);
        }
        
        public void RunSQLReturnJsonAsync(string sql, string UserNo, string SID, object userState) {
            if ((this.onBeginRunSQLReturnJsonDelegate == null)) {
                this.onBeginRunSQLReturnJsonDelegate = new BeginOperationDelegate(this.OnBeginRunSQLReturnJson);
            }
            if ((this.onEndRunSQLReturnJsonDelegate == null)) {
                this.onEndRunSQLReturnJsonDelegate = new EndOperationDelegate(this.OnEndRunSQLReturnJson);
            }
            if ((this.onRunSQLReturnJsonCompletedDelegate == null)) {
                this.onRunSQLReturnJsonCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRunSQLReturnJsonCompleted);
            }
            base.InvokeAsync(this.onBeginRunSQLReturnJsonDelegate, new object[] {
                        sql,
                        UserNo,
                        SID}, this.onEndRunSQLReturnJsonDelegate, this.onRunSQLReturnJsonCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CCForm.FF.CCFormSoap.BeginRunSQLReturnTable2DataTable(string sql, string UserNo, string SID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRunSQLReturnTable2DataTable(sql, UserNo, SID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        CCForm.FF.RunSQLReturnTable2DataTableResponseRunSQLReturnTable2DataTableResult CCForm.FF.CCFormSoap.EndRunSQLReturnTable2DataTable(System.IAsyncResult result) {
            return base.Channel.EndRunSQLReturnTable2DataTable(result);
        }
        
        private System.IAsyncResult OnBeginRunSQLReturnTable2DataTable(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sql = ((string)(inValues[0]));
            string UserNo = ((string)(inValues[1]));
            string SID = ((string)(inValues[2]));
            return ((CCForm.FF.CCFormSoap)(this)).BeginRunSQLReturnTable2DataTable(sql, UserNo, SID, callback, asyncState);
        }
        
        private object[] OnEndRunSQLReturnTable2DataTable(System.IAsyncResult result) {
            CCForm.FF.RunSQLReturnTable2DataTableResponseRunSQLReturnTable2DataTableResult retVal = ((CCForm.FF.CCFormSoap)(this)).EndRunSQLReturnTable2DataTable(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRunSQLReturnTable2DataTableCompleted(object state) {
            if ((this.RunSQLReturnTable2DataTableCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RunSQLReturnTable2DataTableCompleted(this, new RunSQLReturnTable2DataTableCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RunSQLReturnTable2DataTableAsync(string sql, string UserNo, string SID) {
            this.RunSQLReturnTable2DataTableAsync(sql, UserNo, SID, null);
        }
        
        public void RunSQLReturnTable2DataTableAsync(string sql, string UserNo, string SID, object userState) {
            if ((this.onBeginRunSQLReturnTable2DataTableDelegate == null)) {
                this.onBeginRunSQLReturnTable2DataTableDelegate = new BeginOperationDelegate(this.OnBeginRunSQLReturnTable2DataTable);
            }
            if ((this.onEndRunSQLReturnTable2DataTableDelegate == null)) {
                this.onEndRunSQLReturnTable2DataTableDelegate = new EndOperationDelegate(this.OnEndRunSQLReturnTable2DataTable);
            }
            if ((this.onRunSQLReturnTable2DataTableCompletedDelegate == null)) {
                this.onRunSQLReturnTable2DataTableCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRunSQLReturnTable2DataTableCompleted);
            }
            base.InvokeAsync(this.onBeginRunSQLReturnTable2DataTableDelegate, new object[] {
                        sql,
                        UserNo,
                        SID}, this.onEndRunSQLReturnTable2DataTableDelegate, this.onRunSQLReturnTable2DataTableCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CCForm.FF.CCFormSoap.BeginRunSQLReturnString(string sql, string UserNo, string SID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRunSQLReturnString(sql, UserNo, SID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string CCForm.FF.CCFormSoap.EndRunSQLReturnString(System.IAsyncResult result) {
            return base.Channel.EndRunSQLReturnString(result);
        }
        
        private System.IAsyncResult OnBeginRunSQLReturnString(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sql = ((string)(inValues[0]));
            string UserNo = ((string)(inValues[1]));
            string SID = ((string)(inValues[2]));
            return ((CCForm.FF.CCFormSoap)(this)).BeginRunSQLReturnString(sql, UserNo, SID, callback, asyncState);
        }
        
        private object[] OnEndRunSQLReturnString(System.IAsyncResult result) {
            string retVal = ((CCForm.FF.CCFormSoap)(this)).EndRunSQLReturnString(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRunSQLReturnStringCompleted(object state) {
            if ((this.RunSQLReturnStringCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RunSQLReturnStringCompleted(this, new RunSQLReturnStringCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RunSQLReturnStringAsync(string sql, string UserNo, string SID) {
            this.RunSQLReturnStringAsync(sql, UserNo, SID, null);
        }
        
        public void RunSQLReturnStringAsync(string sql, string UserNo, string SID, object userState) {
            if ((this.onBeginRunSQLReturnStringDelegate == null)) {
                this.onBeginRunSQLReturnStringDelegate = new BeginOperationDelegate(this.OnBeginRunSQLReturnString);
            }
            if ((this.onEndRunSQLReturnStringDelegate == null)) {
                this.onEndRunSQLReturnStringDelegate = new EndOperationDelegate(this.OnEndRunSQLReturnString);
            }
            if ((this.onRunSQLReturnStringCompletedDelegate == null)) {
                this.onRunSQLReturnStringCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRunSQLReturnStringCompleted);
            }
            base.InvokeAsync(this.onBeginRunSQLReturnStringDelegate, new object[] {
                        sql,
                        UserNo,
                        SID}, this.onEndRunSQLReturnStringDelegate, this.onRunSQLReturnStringCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CCForm.FF.CCFormSoap.BeginRunSQLReturnValInt(string sql, string UserNo, string SID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRunSQLReturnValInt(sql, UserNo, SID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int CCForm.FF.CCFormSoap.EndRunSQLReturnValInt(System.IAsyncResult result) {
            return base.Channel.EndRunSQLReturnValInt(result);
        }
        
        private System.IAsyncResult OnBeginRunSQLReturnValInt(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sql = ((string)(inValues[0]));
            string UserNo = ((string)(inValues[1]));
            string SID = ((string)(inValues[2]));
            return ((CCForm.FF.CCFormSoap)(this)).BeginRunSQLReturnValInt(sql, UserNo, SID, callback, asyncState);
        }
        
        private object[] OnEndRunSQLReturnValInt(System.IAsyncResult result) {
            int retVal = ((CCForm.FF.CCFormSoap)(this)).EndRunSQLReturnValInt(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRunSQLReturnValIntCompleted(object state) {
            if ((this.RunSQLReturnValIntCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RunSQLReturnValIntCompleted(this, new RunSQLReturnValIntCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RunSQLReturnValIntAsync(string sql, string UserNo, string SID) {
            this.RunSQLReturnValIntAsync(sql, UserNo, SID, null);
        }
        
        public void RunSQLReturnValIntAsync(string sql, string UserNo, string SID, object userState) {
            if ((this.onBeginRunSQLReturnValIntDelegate == null)) {
                this.onBeginRunSQLReturnValIntDelegate = new BeginOperationDelegate(this.OnBeginRunSQLReturnValInt);
            }
            if ((this.onEndRunSQLReturnValIntDelegate == null)) {
                this.onEndRunSQLReturnValIntDelegate = new EndOperationDelegate(this.OnEndRunSQLReturnValInt);
            }
            if ((this.onRunSQLReturnValIntCompletedDelegate == null)) {
                this.onRunSQLReturnValIntCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRunSQLReturnValIntCompleted);
            }
            base.InvokeAsync(this.onBeginRunSQLReturnValIntDelegate, new object[] {
                        sql,
                        UserNo,
                        SID}, this.onEndRunSQLReturnValIntDelegate, this.onRunSQLReturnValIntCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CCForm.FF.CCFormSoap.BeginRunSQLReturnValFloat(string sql, string UserNo, string SID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRunSQLReturnValFloat(sql, UserNo, SID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        float CCForm.FF.CCFormSoap.EndRunSQLReturnValFloat(System.IAsyncResult result) {
            return base.Channel.EndRunSQLReturnValFloat(result);
        }
        
        private System.IAsyncResult OnBeginRunSQLReturnValFloat(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sql = ((string)(inValues[0]));
            string UserNo = ((string)(inValues[1]));
            string SID = ((string)(inValues[2]));
            return ((CCForm.FF.CCFormSoap)(this)).BeginRunSQLReturnValFloat(sql, UserNo, SID, callback, asyncState);
        }
        
        private object[] OnEndRunSQLReturnValFloat(System.IAsyncResult result) {
            float retVal = ((CCForm.FF.CCFormSoap)(this)).EndRunSQLReturnValFloat(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRunSQLReturnValFloatCompleted(object state) {
            if ((this.RunSQLReturnValFloatCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RunSQLReturnValFloatCompleted(this, new RunSQLReturnValFloatCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RunSQLReturnValFloatAsync(string sql, string UserNo, string SID) {
            this.RunSQLReturnValFloatAsync(sql, UserNo, SID, null);
        }
        
        public void RunSQLReturnValFloatAsync(string sql, string UserNo, string SID, object userState) {
            if ((this.onBeginRunSQLReturnValFloatDelegate == null)) {
                this.onBeginRunSQLReturnValFloatDelegate = new BeginOperationDelegate(this.OnBeginRunSQLReturnValFloat);
            }
            if ((this.onEndRunSQLReturnValFloatDelegate == null)) {
                this.onEndRunSQLReturnValFloatDelegate = new EndOperationDelegate(this.OnEndRunSQLReturnValFloat);
            }
            if ((this.onRunSQLReturnValFloatCompletedDelegate == null)) {
                this.onRunSQLReturnValFloatCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRunSQLReturnValFloatCompleted);
            }
            base.InvokeAsync(this.onBeginRunSQLReturnValFloatDelegate, new object[] {
                        sql,
                        UserNo,
                        SID}, this.onEndRunSQLReturnValFloatDelegate, this.onRunSQLReturnValFloatCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CCForm.FF.CCFormSoap.BeginRunSQLReturnTableS(string sqls, string UserNo, string SID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRunSQLReturnTableS(sqls, UserNo, SID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string CCForm.FF.CCFormSoap.EndRunSQLReturnTableS(System.IAsyncResult result) {
            return base.Channel.EndRunSQLReturnTableS(result);
        }
        
        private System.IAsyncResult OnBeginRunSQLReturnTableS(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sqls = ((string)(inValues[0]));
            string UserNo = ((string)(inValues[1]));
            string SID = ((string)(inValues[2]));
            return ((CCForm.FF.CCFormSoap)(this)).BeginRunSQLReturnTableS(sqls, UserNo, SID, callback, asyncState);
        }
        
        private object[] OnEndRunSQLReturnTableS(System.IAsyncResult result) {
            string retVal = ((CCForm.FF.CCFormSoap)(this)).EndRunSQLReturnTableS(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRunSQLReturnTableSCompleted(object state) {
            if ((this.RunSQLReturnTableSCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RunSQLReturnTableSCompleted(this, new RunSQLReturnTableSCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RunSQLReturnTableSAsync(string sqls, string UserNo, string SID) {
            this.RunSQLReturnTableSAsync(sqls, UserNo, SID, null);
        }
        
        public void RunSQLReturnTableSAsync(string sqls, string UserNo, string SID, object userState) {
            if ((this.onBeginRunSQLReturnTableSDelegate == null)) {
                this.onBeginRunSQLReturnTableSDelegate = new BeginOperationDelegate(this.OnBeginRunSQLReturnTableS);
            }
            if ((this.onEndRunSQLReturnTableSDelegate == null)) {
                this.onEndRunSQLReturnTableSDelegate = new EndOperationDelegate(this.OnEndRunSQLReturnTableS);
            }
            if ((this.onRunSQLReturnTableSCompletedDelegate == null)) {
                this.onRunSQLReturnTableSCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRunSQLReturnTableSCompleted);
            }
            base.InvokeAsync(this.onBeginRunSQLReturnTableSDelegate, new object[] {
                        sqls,
                        UserNo,
                        SID}, this.onEndRunSQLReturnTableSDelegate, this.onRunSQLReturnTableSCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CCForm.FF.CCFormSoap.BeginParseStringToPinyin(string name, bool flag, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginParseStringToPinyin(name, flag, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string CCForm.FF.CCFormSoap.EndParseStringToPinyin(System.IAsyncResult result) {
            return base.Channel.EndParseStringToPinyin(result);
        }
        
        private System.IAsyncResult OnBeginParseStringToPinyin(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string name = ((string)(inValues[0]));
            bool flag = ((bool)(inValues[1]));
            return ((CCForm.FF.CCFormSoap)(this)).BeginParseStringToPinyin(name, flag, callback, asyncState);
        }
        
        private object[] OnEndParseStringToPinyin(System.IAsyncResult result) {
            string retVal = ((CCForm.FF.CCFormSoap)(this)).EndParseStringToPinyin(result);
            return new object[] {
                    retVal};
        }
        
        private void OnParseStringToPinyinCompleted(object state) {
            if ((this.ParseStringToPinyinCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ParseStringToPinyinCompleted(this, new ParseStringToPinyinCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ParseStringToPinyinAsync(string name, bool flag) {
            this.ParseStringToPinyinAsync(name, flag, null);
        }
        
        public void ParseStringToPinyinAsync(string name, bool flag, object userState) {
            if ((this.onBeginParseStringToPinyinDelegate == null)) {
                this.onBeginParseStringToPinyinDelegate = new BeginOperationDelegate(this.OnBeginParseStringToPinyin);
            }
            if ((this.onEndParseStringToPinyinDelegate == null)) {
                this.onEndParseStringToPinyinDelegate = new EndOperationDelegate(this.OnEndParseStringToPinyin);
            }
            if ((this.onParseStringToPinyinCompletedDelegate == null)) {
                this.onParseStringToPinyinCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnParseStringToPinyinCompleted);
            }
            base.InvokeAsync(this.onBeginParseStringToPinyinDelegate, new object[] {
                        name,
                        flag}, this.onEndParseStringToPinyinDelegate, this.onParseStringToPinyinCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CCForm.FF.CCFormSoap.BeginSaveEnum(string enumKey, string enumLab, string cfg, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSaveEnum(enumKey, enumLab, cfg, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string CCForm.FF.CCFormSoap.EndSaveEnum(System.IAsyncResult result) {
            return base.Channel.EndSaveEnum(result);
        }
        
        private System.IAsyncResult OnBeginSaveEnum(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string enumKey = ((string)(inValues[0]));
            string enumLab = ((string)(inValues[1]));
            string cfg = ((string)(inValues[2]));
            return ((CCForm.FF.CCFormSoap)(this)).BeginSaveEnum(enumKey, enumLab, cfg, callback, asyncState);
        }
        
        private object[] OnEndSaveEnum(System.IAsyncResult result) {
            string retVal = ((CCForm.FF.CCFormSoap)(this)).EndSaveEnum(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSaveEnumCompleted(object state) {
            if ((this.SaveEnumCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaveEnumCompleted(this, new SaveEnumCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SaveEnumAsync(string enumKey, string enumLab, string cfg) {
            this.SaveEnumAsync(enumKey, enumLab, cfg, null);
        }
        
        public void SaveEnumAsync(string enumKey, string enumLab, string cfg, object userState) {
            if ((this.onBeginSaveEnumDelegate == null)) {
                this.onBeginSaveEnumDelegate = new BeginOperationDelegate(this.OnBeginSaveEnum);
            }
            if ((this.onEndSaveEnumDelegate == null)) {
                this.onEndSaveEnumDelegate = new EndOperationDelegate(this.OnEndSaveEnum);
            }
            if ((this.onSaveEnumCompletedDelegate == null)) {
                this.onSaveEnumCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveEnumCompleted);
            }
            base.InvokeAsync(this.onBeginSaveEnumDelegate, new object[] {
                        enumKey,
                        enumLab,
                        cfg}, this.onEndSaveEnumDelegate, this.onSaveEnumCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CCForm.FF.CCFormSoap.BeginSaveEnumField(string fk_mapData, string fieldKey, string fieldName, string enumKey, double x, double y, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSaveEnumField(fk_mapData, fieldKey, fieldName, enumKey, x, y, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string CCForm.FF.CCFormSoap.EndSaveEnumField(System.IAsyncResult result) {
            return base.Channel.EndSaveEnumField(result);
        }
        
        private System.IAsyncResult OnBeginSaveEnumField(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string fk_mapData = ((string)(inValues[0]));
            string fieldKey = ((string)(inValues[1]));
            string fieldName = ((string)(inValues[2]));
            string enumKey = ((string)(inValues[3]));
            double x = ((double)(inValues[4]));
            double y = ((double)(inValues[5]));
            return ((CCForm.FF.CCFormSoap)(this)).BeginSaveEnumField(fk_mapData, fieldKey, fieldName, enumKey, x, y, callback, asyncState);
        }
        
        private object[] OnEndSaveEnumField(System.IAsyncResult result) {
            string retVal = ((CCForm.FF.CCFormSoap)(this)).EndSaveEnumField(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSaveEnumFieldCompleted(object state) {
            if ((this.SaveEnumFieldCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaveEnumFieldCompleted(this, new SaveEnumFieldCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SaveEnumFieldAsync(string fk_mapData, string fieldKey, string fieldName, string enumKey, double x, double y) {
            this.SaveEnumFieldAsync(fk_mapData, fieldKey, fieldName, enumKey, x, y, null);
        }
        
        public void SaveEnumFieldAsync(string fk_mapData, string fieldKey, string fieldName, string enumKey, double x, double y, object userState) {
            if ((this.onBeginSaveEnumFieldDelegate == null)) {
                this.onBeginSaveEnumFieldDelegate = new BeginOperationDelegate(this.OnBeginSaveEnumField);
            }
            if ((this.onEndSaveEnumFieldDelegate == null)) {
                this.onEndSaveEnumFieldDelegate = new EndOperationDelegate(this.OnEndSaveEnumField);
            }
            if ((this.onSaveEnumFieldCompletedDelegate == null)) {
                this.onSaveEnumFieldCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveEnumFieldCompleted);
            }
            base.InvokeAsync(this.onBeginSaveEnumFieldDelegate, new object[] {
                        fk_mapData,
                        fieldKey,
                        fieldName,
                        enumKey,
                        x,
                        y}, this.onEndSaveEnumFieldDelegate, this.onSaveEnumFieldCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CCForm.FF.CCFormSoap.BeginSaveFKField(string fk_mapData, string fieldKey, string fieldName, string enName, double x, double y, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSaveFKField(fk_mapData, fieldKey, fieldName, enName, x, y, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string CCForm.FF.CCFormSoap.EndSaveFKField(System.IAsyncResult result) {
            return base.Channel.EndSaveFKField(result);
        }
        
        private System.IAsyncResult OnBeginSaveFKField(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string fk_mapData = ((string)(inValues[0]));
            string fieldKey = ((string)(inValues[1]));
            string fieldName = ((string)(inValues[2]));
            string enName = ((string)(inValues[3]));
            double x = ((double)(inValues[4]));
            double y = ((double)(inValues[5]));
            return ((CCForm.FF.CCFormSoap)(this)).BeginSaveFKField(fk_mapData, fieldKey, fieldName, enName, x, y, callback, asyncState);
        }
        
        private object[] OnEndSaveFKField(System.IAsyncResult result) {
            string retVal = ((CCForm.FF.CCFormSoap)(this)).EndSaveFKField(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSaveFKFieldCompleted(object state) {
            if ((this.SaveFKFieldCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaveFKFieldCompleted(this, new SaveFKFieldCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SaveFKFieldAsync(string fk_mapData, string fieldKey, string fieldName, string enName, double x, double y) {
            this.SaveFKFieldAsync(fk_mapData, fieldKey, fieldName, enName, x, y, null);
        }
        
        public void SaveFKFieldAsync(string fk_mapData, string fieldKey, string fieldName, string enName, double x, double y, object userState) {
            if ((this.onBeginSaveFKFieldDelegate == null)) {
                this.onBeginSaveFKFieldDelegate = new BeginOperationDelegate(this.OnBeginSaveFKField);
            }
            if ((this.onEndSaveFKFieldDelegate == null)) {
                this.onEndSaveFKFieldDelegate = new EndOperationDelegate(this.OnEndSaveFKField);
            }
            if ((this.onSaveFKFieldCompletedDelegate == null)) {
                this.onSaveFKFieldCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveFKFieldCompleted);
            }
            base.InvokeAsync(this.onBeginSaveFKFieldDelegate, new object[] {
                        fk_mapData,
                        fieldKey,
                        fieldName,
                        enName,
                        x,
                        y}, this.onEndSaveFKFieldDelegate, this.onSaveFKFieldCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CCForm.FF.CCFormSoap.BeginSaveImageAsFile(CCForm.FF.SaveImageAsFileRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSaveImageAsFile(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginSaveImageAsFile(byte[] img, string pkval, string fk_Frm_Ele, System.AsyncCallback callback, object asyncState) {
            CCForm.FF.SaveImageAsFileRequest inValue = new CCForm.FF.SaveImageAsFileRequest();
            inValue.img = img;
            inValue.pkval = pkval;
            inValue.fk_Frm_Ele = fk_Frm_Ele;
            return ((CCForm.FF.CCFormSoap)(this)).BeginSaveImageAsFile(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        CCForm.FF.SaveImageAsFileResponse CCForm.FF.CCFormSoap.EndSaveImageAsFile(System.IAsyncResult result) {
            return base.Channel.EndSaveImageAsFile(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private string EndSaveImageAsFile(System.IAsyncResult result) {
            CCForm.FF.SaveImageAsFileResponse retVal = ((CCForm.FF.CCFormSoap)(this)).EndSaveImageAsFile(result);
            return retVal.SaveImageAsFileResult;
        }
        
        private System.IAsyncResult OnBeginSaveImageAsFile(object[] inValues, System.AsyncCallback callback, object asyncState) {
            byte[] img = ((byte[])(inValues[0]));
            string pkval = ((string)(inValues[1]));
            string fk_Frm_Ele = ((string)(inValues[2]));
            return this.BeginSaveImageAsFile(img, pkval, fk_Frm_Ele, callback, asyncState);
        }
        
        private object[] OnEndSaveImageAsFile(System.IAsyncResult result) {
            string retVal = this.EndSaveImageAsFile(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSaveImageAsFileCompleted(object state) {
            if ((this.SaveImageAsFileCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaveImageAsFileCompleted(this, new SaveImageAsFileCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SaveImageAsFileAsync(byte[] img, string pkval, string fk_Frm_Ele) {
            this.SaveImageAsFileAsync(img, pkval, fk_Frm_Ele, null);
        }
        
        public void SaveImageAsFileAsync(byte[] img, string pkval, string fk_Frm_Ele, object userState) {
            if ((this.onBeginSaveImageAsFileDelegate == null)) {
                this.onBeginSaveImageAsFileDelegate = new BeginOperationDelegate(this.OnBeginSaveImageAsFile);
            }
            if ((this.onEndSaveImageAsFileDelegate == null)) {
                this.onEndSaveImageAsFileDelegate = new EndOperationDelegate(this.OnEndSaveImageAsFile);
            }
            if ((this.onSaveImageAsFileCompletedDelegate == null)) {
                this.onSaveImageAsFileCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveImageAsFileCompleted);
            }
            base.InvokeAsync(this.onBeginSaveImageAsFileDelegate, new object[] {
                        img,
                        pkval,
                        fk_Frm_Ele}, this.onEndSaveImageAsFileDelegate, this.onSaveImageAsFileCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CCForm.FF.CCFormSoap.BeginLoadFrmTemplete(CCForm.FF.LoadFrmTempleteRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLoadFrmTemplete(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginLoadFrmTemplete(byte[] fileByte, string fk_mapData, bool isClear, System.AsyncCallback callback, object asyncState) {
            CCForm.FF.LoadFrmTempleteRequest inValue = new CCForm.FF.LoadFrmTempleteRequest();
            inValue.fileByte = fileByte;
            inValue.fk_mapData = fk_mapData;
            inValue.isClear = isClear;
            return ((CCForm.FF.CCFormSoap)(this)).BeginLoadFrmTemplete(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        CCForm.FF.LoadFrmTempleteResponse CCForm.FF.CCFormSoap.EndLoadFrmTemplete(System.IAsyncResult result) {
            return base.Channel.EndLoadFrmTemplete(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private string EndLoadFrmTemplete(System.IAsyncResult result) {
            CCForm.FF.LoadFrmTempleteResponse retVal = ((CCForm.FF.CCFormSoap)(this)).EndLoadFrmTemplete(result);
            return retVal.LoadFrmTempleteResult;
        }
        
        private System.IAsyncResult OnBeginLoadFrmTemplete(object[] inValues, System.AsyncCallback callback, object asyncState) {
            byte[] fileByte = ((byte[])(inValues[0]));
            string fk_mapData = ((string)(inValues[1]));
            bool isClear = ((bool)(inValues[2]));
            return this.BeginLoadFrmTemplete(fileByte, fk_mapData, isClear, callback, asyncState);
        }
        
        private object[] OnEndLoadFrmTemplete(System.IAsyncResult result) {
            string retVal = this.EndLoadFrmTemplete(result);
            return new object[] {
                    retVal};
        }
        
        private void OnLoadFrmTempleteCompleted(object state) {
            if ((this.LoadFrmTempleteCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LoadFrmTempleteCompleted(this, new LoadFrmTempleteCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LoadFrmTempleteAsync(byte[] fileByte, string fk_mapData, bool isClear) {
            this.LoadFrmTempleteAsync(fileByte, fk_mapData, isClear, null);
        }
        
        public void LoadFrmTempleteAsync(byte[] fileByte, string fk_mapData, bool isClear, object userState) {
            if ((this.onBeginLoadFrmTempleteDelegate == null)) {
                this.onBeginLoadFrmTempleteDelegate = new BeginOperationDelegate(this.OnBeginLoadFrmTemplete);
            }
            if ((this.onEndLoadFrmTempleteDelegate == null)) {
                this.onEndLoadFrmTempleteDelegate = new EndOperationDelegate(this.OnEndLoadFrmTemplete);
            }
            if ((this.onLoadFrmTempleteCompletedDelegate == null)) {
                this.onLoadFrmTempleteCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLoadFrmTempleteCompleted);
            }
            base.InvokeAsync(this.onBeginLoadFrmTempleteDelegate, new object[] {
                        fileByte,
                        fk_mapData,
                        isClear}, this.onEndLoadFrmTempleteDelegate, this.onLoadFrmTempleteCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CCForm.FF.CCFormSoap.BeginLoadFrmTempleteFile(string file, string fk_mapData, bool isClear, bool isSetReadonly, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLoadFrmTempleteFile(file, fk_mapData, isClear, isSetReadonly, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string CCForm.FF.CCFormSoap.EndLoadFrmTempleteFile(System.IAsyncResult result) {
            return base.Channel.EndLoadFrmTempleteFile(result);
        }
        
        private System.IAsyncResult OnBeginLoadFrmTempleteFile(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string file = ((string)(inValues[0]));
            string fk_mapData = ((string)(inValues[1]));
            bool isClear = ((bool)(inValues[2]));
            bool isSetReadonly = ((bool)(inValues[3]));
            return ((CCForm.FF.CCFormSoap)(this)).BeginLoadFrmTempleteFile(file, fk_mapData, isClear, isSetReadonly, callback, asyncState);
        }
        
        private object[] OnEndLoadFrmTempleteFile(System.IAsyncResult result) {
            string retVal = ((CCForm.FF.CCFormSoap)(this)).EndLoadFrmTempleteFile(result);
            return new object[] {
                    retVal};
        }
        
        private void OnLoadFrmTempleteFileCompleted(object state) {
            if ((this.LoadFrmTempleteFileCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LoadFrmTempleteFileCompleted(this, new LoadFrmTempleteFileCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LoadFrmTempleteFileAsync(string file, string fk_mapData, bool isClear, bool isSetReadonly) {
            this.LoadFrmTempleteFileAsync(file, fk_mapData, isClear, isSetReadonly, null);
        }
        
        public void LoadFrmTempleteFileAsync(string file, string fk_mapData, bool isClear, bool isSetReadonly, object userState) {
            if ((this.onBeginLoadFrmTempleteFileDelegate == null)) {
                this.onBeginLoadFrmTempleteFileDelegate = new BeginOperationDelegate(this.OnBeginLoadFrmTempleteFile);
            }
            if ((this.onEndLoadFrmTempleteFileDelegate == null)) {
                this.onEndLoadFrmTempleteFileDelegate = new EndOperationDelegate(this.OnEndLoadFrmTempleteFile);
            }
            if ((this.onLoadFrmTempleteFileCompletedDelegate == null)) {
                this.onLoadFrmTempleteFileCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLoadFrmTempleteFileCompleted);
            }
            base.InvokeAsync(this.onBeginLoadFrmTempleteFileDelegate, new object[] {
                        file,
                        fk_mapData,
                        isClear,
                        isSetReadonly}, this.onEndLoadFrmTempleteFileDelegate, this.onLoadFrmTempleteFileCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CCForm.FF.CCFormSoap.BeginGetXmlData(string xmlFileName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetXmlData(xmlFileName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string CCForm.FF.CCFormSoap.EndGetXmlData(System.IAsyncResult result) {
            return base.Channel.EndGetXmlData(result);
        }
        
        private System.IAsyncResult OnBeginGetXmlData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string xmlFileName = ((string)(inValues[0]));
            return ((CCForm.FF.CCFormSoap)(this)).BeginGetXmlData(xmlFileName, callback, asyncState);
        }
        
        private object[] OnEndGetXmlData(System.IAsyncResult result) {
            string retVal = ((CCForm.FF.CCFormSoap)(this)).EndGetXmlData(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetXmlDataCompleted(object state) {
            if ((this.GetXmlDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetXmlDataCompleted(this, new GetXmlDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetXmlDataAsync(string xmlFileName) {
            this.GetXmlDataAsync(xmlFileName, null);
        }
        
        public void GetXmlDataAsync(string xmlFileName, object userState) {
            if ((this.onBeginGetXmlDataDelegate == null)) {
                this.onBeginGetXmlDataDelegate = new BeginOperationDelegate(this.OnBeginGetXmlData);
            }
            if ((this.onEndGetXmlDataDelegate == null)) {
                this.onEndGetXmlDataDelegate = new EndOperationDelegate(this.OnEndGetXmlData);
            }
            if ((this.onGetXmlDataCompletedDelegate == null)) {
                this.onGetXmlDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetXmlDataCompleted);
            }
            base.InvokeAsync(this.onBeginGetXmlDataDelegate, new object[] {
                        xmlFileName}, this.onEndGetXmlDataDelegate, this.onGetXmlDataCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CCForm.FF.CCFormSoap.BeginDoType(string dotype, string v1, string v2, string v3, string v4, string v5, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDoType(dotype, v1, v2, v3, v4, v5, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string CCForm.FF.CCFormSoap.EndDoType(System.IAsyncResult result) {
            return base.Channel.EndDoType(result);
        }
        
        private System.IAsyncResult OnBeginDoType(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string dotype = ((string)(inValues[0]));
            string v1 = ((string)(inValues[1]));
            string v2 = ((string)(inValues[2]));
            string v3 = ((string)(inValues[3]));
            string v4 = ((string)(inValues[4]));
            string v5 = ((string)(inValues[5]));
            return ((CCForm.FF.CCFormSoap)(this)).BeginDoType(dotype, v1, v2, v3, v4, v5, callback, asyncState);
        }
        
        private object[] OnEndDoType(System.IAsyncResult result) {
            string retVal = ((CCForm.FF.CCFormSoap)(this)).EndDoType(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDoTypeCompleted(object state) {
            if ((this.DoTypeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DoTypeCompleted(this, new DoTypeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DoTypeAsync(string dotype, string v1, string v2, string v3, string v4, string v5) {
            this.DoTypeAsync(dotype, v1, v2, v3, v4, v5, null);
        }
        
        public void DoTypeAsync(string dotype, string v1, string v2, string v3, string v4, string v5, object userState) {
            if ((this.onBeginDoTypeDelegate == null)) {
                this.onBeginDoTypeDelegate = new BeginOperationDelegate(this.OnBeginDoType);
            }
            if ((this.onEndDoTypeDelegate == null)) {
                this.onEndDoTypeDelegate = new EndOperationDelegate(this.OnEndDoType);
            }
            if ((this.onDoTypeCompletedDelegate == null)) {
                this.onDoTypeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDoTypeCompleted);
            }
            base.InvokeAsync(this.onBeginDoTypeDelegate, new object[] {
                        dotype,
                        v1,
                        v2,
                        v3,
                        v4,
                        v5}, this.onEndDoTypeDelegate, this.onDoTypeCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CCForm.FF.CCFormSoap.BeginSaveEn(string vals, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSaveEn(vals, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string CCForm.FF.CCFormSoap.EndSaveEn(System.IAsyncResult result) {
            return base.Channel.EndSaveEn(result);
        }
        
        private System.IAsyncResult OnBeginSaveEn(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string vals = ((string)(inValues[0]));
            return ((CCForm.FF.CCFormSoap)(this)).BeginSaveEn(vals, callback, asyncState);
        }
        
        private object[] OnEndSaveEn(System.IAsyncResult result) {
            string retVal = ((CCForm.FF.CCFormSoap)(this)).EndSaveEn(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSaveEnCompleted(object state) {
            if ((this.SaveEnCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaveEnCompleted(this, new SaveEnCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SaveEnAsync(string vals) {
            this.SaveEnAsync(vals, null);
        }
        
        public void SaveEnAsync(string vals, object userState) {
            if ((this.onBeginSaveEnDelegate == null)) {
                this.onBeginSaveEnDelegate = new BeginOperationDelegate(this.OnBeginSaveEn);
            }
            if ((this.onEndSaveEnDelegate == null)) {
                this.onEndSaveEnDelegate = new EndOperationDelegate(this.OnEndSaveEn);
            }
            if ((this.onSaveEnCompletedDelegate == null)) {
                this.onSaveEnCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveEnCompleted);
            }
            base.InvokeAsync(this.onBeginSaveEnDelegate, new object[] {
                        vals}, this.onEndSaveEnDelegate, this.onSaveEnCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CCForm.FF.CCFormSoap.BeginFtpMethod(string doType, string v1, string v2, string v3, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginFtpMethod(doType, v1, v2, v3, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string CCForm.FF.CCFormSoap.EndFtpMethod(System.IAsyncResult result) {
            return base.Channel.EndFtpMethod(result);
        }
        
        private System.IAsyncResult OnBeginFtpMethod(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string doType = ((string)(inValues[0]));
            string v1 = ((string)(inValues[1]));
            string v2 = ((string)(inValues[2]));
            string v3 = ((string)(inValues[3]));
            return ((CCForm.FF.CCFormSoap)(this)).BeginFtpMethod(doType, v1, v2, v3, callback, asyncState);
        }
        
        private object[] OnEndFtpMethod(System.IAsyncResult result) {
            string retVal = ((CCForm.FF.CCFormSoap)(this)).EndFtpMethod(result);
            return new object[] {
                    retVal};
        }
        
        private void OnFtpMethodCompleted(object state) {
            if ((this.FtpMethodCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.FtpMethodCompleted(this, new FtpMethodCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void FtpMethodAsync(string doType, string v1, string v2, string v3) {
            this.FtpMethodAsync(doType, v1, v2, v3, null);
        }
        
        public void FtpMethodAsync(string doType, string v1, string v2, string v3, object userState) {
            if ((this.onBeginFtpMethodDelegate == null)) {
                this.onBeginFtpMethodDelegate = new BeginOperationDelegate(this.OnBeginFtpMethod);
            }
            if ((this.onEndFtpMethodDelegate == null)) {
                this.onEndFtpMethodDelegate = new EndOperationDelegate(this.OnEndFtpMethod);
            }
            if ((this.onFtpMethodCompletedDelegate == null)) {
                this.onFtpMethodCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnFtpMethodCompleted);
            }
            base.InvokeAsync(this.onBeginFtpMethodDelegate, new object[] {
                        doType,
                        v1,
                        v2,
                        v3}, this.onEndFtpMethodDelegate, this.onFtpMethodCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CCForm.FF.CCFormSoap.BeginRequestSFTableV1(string uiBindKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRequestSFTableV1(uiBindKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string CCForm.FF.CCFormSoap.EndRequestSFTableV1(System.IAsyncResult result) {
            return base.Channel.EndRequestSFTableV1(result);
        }
        
        private System.IAsyncResult OnBeginRequestSFTableV1(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string uiBindKey = ((string)(inValues[0]));
            return ((CCForm.FF.CCFormSoap)(this)).BeginRequestSFTableV1(uiBindKey, callback, asyncState);
        }
        
        private object[] OnEndRequestSFTableV1(System.IAsyncResult result) {
            string retVal = ((CCForm.FF.CCFormSoap)(this)).EndRequestSFTableV1(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRequestSFTableV1Completed(object state) {
            if ((this.RequestSFTableV1Completed != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RequestSFTableV1Completed(this, new RequestSFTableV1CompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RequestSFTableV1Async(string uiBindKey) {
            this.RequestSFTableV1Async(uiBindKey, null);
        }
        
        public void RequestSFTableV1Async(string uiBindKey, object userState) {
            if ((this.onBeginRequestSFTableV1Delegate == null)) {
                this.onBeginRequestSFTableV1Delegate = new BeginOperationDelegate(this.OnBeginRequestSFTableV1);
            }
            if ((this.onEndRequestSFTableV1Delegate == null)) {
                this.onEndRequestSFTableV1Delegate = new EndOperationDelegate(this.OnEndRequestSFTableV1);
            }
            if ((this.onRequestSFTableV1CompletedDelegate == null)) {
                this.onRequestSFTableV1CompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRequestSFTableV1Completed);
            }
            base.InvokeAsync(this.onBeginRequestSFTableV1Delegate, new object[] {
                        uiBindKey}, this.onEndRequestSFTableV1Delegate, this.onRequestSFTableV1CompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CCForm.FF.CCFormSoap.BeginGenerFrm(string fk_mapdata, int workID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGenerFrm(fk_mapdata, workID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string CCForm.FF.CCFormSoap.EndGenerFrm(System.IAsyncResult result) {
            return base.Channel.EndGenerFrm(result);
        }
        
        private System.IAsyncResult OnBeginGenerFrm(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string fk_mapdata = ((string)(inValues[0]));
            int workID = ((int)(inValues[1]));
            return ((CCForm.FF.CCFormSoap)(this)).BeginGenerFrm(fk_mapdata, workID, callback, asyncState);
        }
        
        private object[] OnEndGenerFrm(System.IAsyncResult result) {
            string retVal = ((CCForm.FF.CCFormSoap)(this)).EndGenerFrm(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGenerFrmCompleted(object state) {
            if ((this.GenerFrmCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GenerFrmCompleted(this, new GenerFrmCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GenerFrmAsync(string fk_mapdata, int workID) {
            this.GenerFrmAsync(fk_mapdata, workID, null);
        }
        
        public void GenerFrmAsync(string fk_mapdata, int workID, object userState) {
            if ((this.onBeginGenerFrmDelegate == null)) {
                this.onBeginGenerFrmDelegate = new BeginOperationDelegate(this.OnBeginGenerFrm);
            }
            if ((this.onEndGenerFrmDelegate == null)) {
                this.onEndGenerFrmDelegate = new EndOperationDelegate(this.OnEndGenerFrm);
            }
            if ((this.onGenerFrmCompletedDelegate == null)) {
                this.onGenerFrmCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGenerFrmCompleted);
            }
            base.InvokeAsync(this.onBeginGenerFrmDelegate, new object[] {
                        fk_mapdata,
                        workID}, this.onEndGenerFrmDelegate, this.onGenerFrmCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CCForm.FF.CCFormSoap.BeginCopyFrm(string fromMapData, string fk_mapdata, bool isClear, bool isSetReadonly, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCopyFrm(fromMapData, fk_mapdata, isClear, isSetReadonly, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string CCForm.FF.CCFormSoap.EndCopyFrm(System.IAsyncResult result) {
            return base.Channel.EndCopyFrm(result);
        }
        
        private System.IAsyncResult OnBeginCopyFrm(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string fromMapData = ((string)(inValues[0]));
            string fk_mapdata = ((string)(inValues[1]));
            bool isClear = ((bool)(inValues[2]));
            bool isSetReadonly = ((bool)(inValues[3]));
            return ((CCForm.FF.CCFormSoap)(this)).BeginCopyFrm(fromMapData, fk_mapdata, isClear, isSetReadonly, callback, asyncState);
        }
        
        private object[] OnEndCopyFrm(System.IAsyncResult result) {
            string retVal = ((CCForm.FF.CCFormSoap)(this)).EndCopyFrm(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCopyFrmCompleted(object state) {
            if ((this.CopyFrmCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CopyFrmCompleted(this, new CopyFrmCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CopyFrmAsync(string fromMapData, string fk_mapdata, bool isClear, bool isSetReadonly) {
            this.CopyFrmAsync(fromMapData, fk_mapdata, isClear, isSetReadonly, null);
        }
        
        public void CopyFrmAsync(string fromMapData, string fk_mapdata, bool isClear, bool isSetReadonly, object userState) {
            if ((this.onBeginCopyFrmDelegate == null)) {
                this.onBeginCopyFrmDelegate = new BeginOperationDelegate(this.OnBeginCopyFrm);
            }
            if ((this.onEndCopyFrmDelegate == null)) {
                this.onEndCopyFrmDelegate = new EndOperationDelegate(this.OnEndCopyFrm);
            }
            if ((this.onCopyFrmCompletedDelegate == null)) {
                this.onCopyFrmCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCopyFrmCompleted);
            }
            base.InvokeAsync(this.onBeginCopyFrmDelegate, new object[] {
                        fromMapData,
                        fk_mapdata,
                        isClear,
                        isSetReadonly}, this.onEndCopyFrmDelegate, this.onCopyFrmCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CCForm.FF.CCFormSoap.BeginSaveFrm(string fk_mapdata, string xml, string sqls, string UserNo, string SID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSaveFrm(fk_mapdata, xml, sqls, UserNo, SID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string CCForm.FF.CCFormSoap.EndSaveFrm(System.IAsyncResult result) {
            return base.Channel.EndSaveFrm(result);
        }
        
        private System.IAsyncResult OnBeginSaveFrm(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string fk_mapdata = ((string)(inValues[0]));
            string xml = ((string)(inValues[1]));
            string sqls = ((string)(inValues[2]));
            string UserNo = ((string)(inValues[3]));
            string SID = ((string)(inValues[4]));
            return ((CCForm.FF.CCFormSoap)(this)).BeginSaveFrm(fk_mapdata, xml, sqls, UserNo, SID, callback, asyncState);
        }
        
        private object[] OnEndSaveFrm(System.IAsyncResult result) {
            string retVal = ((CCForm.FF.CCFormSoap)(this)).EndSaveFrm(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSaveFrmCompleted(object state) {
            if ((this.SaveFrmCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaveFrmCompleted(this, new SaveFrmCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SaveFrmAsync(string fk_mapdata, string xml, string sqls, string UserNo, string SID) {
            this.SaveFrmAsync(fk_mapdata, xml, sqls, UserNo, SID, null);
        }
        
        public void SaveFrmAsync(string fk_mapdata, string xml, string sqls, string UserNo, string SID, object userState) {
            if ((this.onBeginSaveFrmDelegate == null)) {
                this.onBeginSaveFrmDelegate = new BeginOperationDelegate(this.OnBeginSaveFrm);
            }
            if ((this.onEndSaveFrmDelegate == null)) {
                this.onEndSaveFrmDelegate = new EndOperationDelegate(this.OnEndSaveFrm);
            }
            if ((this.onSaveFrmCompletedDelegate == null)) {
                this.onSaveFrmCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveFrmCompleted);
            }
            base.InvokeAsync(this.onBeginSaveFrmDelegate, new object[] {
                        fk_mapdata,
                        xml,
                        sqls,
                        UserNo,
                        SID}, this.onEndSaveFrmDelegate, this.onSaveFrmCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override CCForm.FF.CCFormSoap CreateChannel() {
            return new CCFormSoapClientChannel(this);
        }
        
        private class CCFormSoapClientChannel : ChannelBase<CCForm.FF.CCFormSoap>, CCForm.FF.CCFormSoap {
            
            public CCFormSoapClientChannel(System.ServiceModel.ClientBase<CCForm.FF.CCFormSoap> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginCfgKey(string key, string UserNo, string SID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = key;
                _args[1] = UserNo;
                _args[2] = SID;
                System.IAsyncResult _result = base.BeginInvoke("CfgKey", _args, callback, asyncState);
                return _result;
            }
            
            public string EndCfgKey(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("CfgKey", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginAttachmentFiles(CCForm.FF.AttachmentFilesRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("AttachmentFiles", _args, callback, asyncState);
                return _result;
            }
            
            public CCForm.FF.AttachmentFilesResponse EndAttachmentFiles(System.IAsyncResult result) {
                object[] _args = new object[0];
                CCForm.FF.AttachmentFilesResponse _result = ((CCForm.FF.AttachmentFilesResponse)(base.EndInvoke("AttachmentFiles", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUploadFile(CCForm.FF.UploadFileRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("UploadFile", _args, callback, asyncState);
                return _result;
            }
            
            public CCForm.FF.UploadFileResponse EndUploadFile(System.IAsyncResult result) {
                object[] _args = new object[0];
                CCForm.FF.UploadFileResponse _result = ((CCForm.FF.UploadFileResponse)(base.EndInvoke("UploadFile", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRunSQL(string sql, string UserNo, string SID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = sql;
                _args[1] = UserNo;
                _args[2] = SID;
                System.IAsyncResult _result = base.BeginInvoke("RunSQL", _args, callback, asyncState);
                return _result;
            }
            
            public int EndRunSQL(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("RunSQL", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRunSQLs(string sqls, string UserNo, string SID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = sqls;
                _args[1] = UserNo;
                _args[2] = SID;
                System.IAsyncResult _result = base.BeginInvoke("RunSQLs", _args, callback, asyncState);
                return _result;
            }
            
            public int EndRunSQLs(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("RunSQLs", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRunSQLReturnTable(string sql, string UserNo, string SID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = sql;
                _args[1] = UserNo;
                _args[2] = SID;
                System.IAsyncResult _result = base.BeginInvoke("RunSQLReturnTable", _args, callback, asyncState);
                return _result;
            }
            
            public string EndRunSQLReturnTable(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("RunSQLReturnTable", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRunSQLReturnJson(string sql, string UserNo, string SID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = sql;
                _args[1] = UserNo;
                _args[2] = SID;
                System.IAsyncResult _result = base.BeginInvoke("RunSQLReturnJson", _args, callback, asyncState);
                return _result;
            }
            
            public string EndRunSQLReturnJson(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("RunSQLReturnJson", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRunSQLReturnTable2DataTable(string sql, string UserNo, string SID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = sql;
                _args[1] = UserNo;
                _args[2] = SID;
                System.IAsyncResult _result = base.BeginInvoke("RunSQLReturnTable2DataTable", _args, callback, asyncState);
                return _result;
            }
            
            public CCForm.FF.RunSQLReturnTable2DataTableResponseRunSQLReturnTable2DataTableResult EndRunSQLReturnTable2DataTable(System.IAsyncResult result) {
                object[] _args = new object[0];
                CCForm.FF.RunSQLReturnTable2DataTableResponseRunSQLReturnTable2DataTableResult _result = ((CCForm.FF.RunSQLReturnTable2DataTableResponseRunSQLReturnTable2DataTableResult)(base.EndInvoke("RunSQLReturnTable2DataTable", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRunSQLReturnString(string sql, string UserNo, string SID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = sql;
                _args[1] = UserNo;
                _args[2] = SID;
                System.IAsyncResult _result = base.BeginInvoke("RunSQLReturnString", _args, callback, asyncState);
                return _result;
            }
            
            public string EndRunSQLReturnString(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("RunSQLReturnString", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRunSQLReturnValInt(string sql, string UserNo, string SID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = sql;
                _args[1] = UserNo;
                _args[2] = SID;
                System.IAsyncResult _result = base.BeginInvoke("RunSQLReturnValInt", _args, callback, asyncState);
                return _result;
            }
            
            public int EndRunSQLReturnValInt(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("RunSQLReturnValInt", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRunSQLReturnValFloat(string sql, string UserNo, string SID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = sql;
                _args[1] = UserNo;
                _args[2] = SID;
                System.IAsyncResult _result = base.BeginInvoke("RunSQLReturnValFloat", _args, callback, asyncState);
                return _result;
            }
            
            public float EndRunSQLReturnValFloat(System.IAsyncResult result) {
                object[] _args = new object[0];
                float _result = ((float)(base.EndInvoke("RunSQLReturnValFloat", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRunSQLReturnTableS(string sqls, string UserNo, string SID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = sqls;
                _args[1] = UserNo;
                _args[2] = SID;
                System.IAsyncResult _result = base.BeginInvoke("RunSQLReturnTableS", _args, callback, asyncState);
                return _result;
            }
            
            public string EndRunSQLReturnTableS(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("RunSQLReturnTableS", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginParseStringToPinyin(string name, bool flag, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = name;
                _args[1] = flag;
                System.IAsyncResult _result = base.BeginInvoke("ParseStringToPinyin", _args, callback, asyncState);
                return _result;
            }
            
            public string EndParseStringToPinyin(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("ParseStringToPinyin", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSaveEnum(string enumKey, string enumLab, string cfg, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = enumKey;
                _args[1] = enumLab;
                _args[2] = cfg;
                System.IAsyncResult _result = base.BeginInvoke("SaveEnum", _args, callback, asyncState);
                return _result;
            }
            
            public string EndSaveEnum(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("SaveEnum", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSaveEnumField(string fk_mapData, string fieldKey, string fieldName, string enumKey, double x, double y, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[6];
                _args[0] = fk_mapData;
                _args[1] = fieldKey;
                _args[2] = fieldName;
                _args[3] = enumKey;
                _args[4] = x;
                _args[5] = y;
                System.IAsyncResult _result = base.BeginInvoke("SaveEnumField", _args, callback, asyncState);
                return _result;
            }
            
            public string EndSaveEnumField(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("SaveEnumField", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSaveFKField(string fk_mapData, string fieldKey, string fieldName, string enName, double x, double y, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[6];
                _args[0] = fk_mapData;
                _args[1] = fieldKey;
                _args[2] = fieldName;
                _args[3] = enName;
                _args[4] = x;
                _args[5] = y;
                System.IAsyncResult _result = base.BeginInvoke("SaveFKField", _args, callback, asyncState);
                return _result;
            }
            
            public string EndSaveFKField(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("SaveFKField", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSaveImageAsFile(CCForm.FF.SaveImageAsFileRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("SaveImageAsFile", _args, callback, asyncState);
                return _result;
            }
            
            public CCForm.FF.SaveImageAsFileResponse EndSaveImageAsFile(System.IAsyncResult result) {
                object[] _args = new object[0];
                CCForm.FF.SaveImageAsFileResponse _result = ((CCForm.FF.SaveImageAsFileResponse)(base.EndInvoke("SaveImageAsFile", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginLoadFrmTemplete(CCForm.FF.LoadFrmTempleteRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("LoadFrmTemplete", _args, callback, asyncState);
                return _result;
            }
            
            public CCForm.FF.LoadFrmTempleteResponse EndLoadFrmTemplete(System.IAsyncResult result) {
                object[] _args = new object[0];
                CCForm.FF.LoadFrmTempleteResponse _result = ((CCForm.FF.LoadFrmTempleteResponse)(base.EndInvoke("LoadFrmTemplete", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginLoadFrmTempleteFile(string file, string fk_mapData, bool isClear, bool isSetReadonly, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = file;
                _args[1] = fk_mapData;
                _args[2] = isClear;
                _args[3] = isSetReadonly;
                System.IAsyncResult _result = base.BeginInvoke("LoadFrmTempleteFile", _args, callback, asyncState);
                return _result;
            }
            
            public string EndLoadFrmTempleteFile(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("LoadFrmTempleteFile", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetXmlData(string xmlFileName, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = xmlFileName;
                System.IAsyncResult _result = base.BeginInvoke("GetXmlData", _args, callback, asyncState);
                return _result;
            }
            
            public string EndGetXmlData(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("GetXmlData", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDoType(string dotype, string v1, string v2, string v3, string v4, string v5, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[6];
                _args[0] = dotype;
                _args[1] = v1;
                _args[2] = v2;
                _args[3] = v3;
                _args[4] = v4;
                _args[5] = v5;
                System.IAsyncResult _result = base.BeginInvoke("DoType", _args, callback, asyncState);
                return _result;
            }
            
            public string EndDoType(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("DoType", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSaveEn(string vals, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = vals;
                System.IAsyncResult _result = base.BeginInvoke("SaveEn", _args, callback, asyncState);
                return _result;
            }
            
            public string EndSaveEn(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("SaveEn", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginFtpMethod(string doType, string v1, string v2, string v3, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = doType;
                _args[1] = v1;
                _args[2] = v2;
                _args[3] = v3;
                System.IAsyncResult _result = base.BeginInvoke("FtpMethod", _args, callback, asyncState);
                return _result;
            }
            
            public string EndFtpMethod(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("FtpMethod", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRequestSFTableV1(string uiBindKey, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = uiBindKey;
                System.IAsyncResult _result = base.BeginInvoke("RequestSFTableV1", _args, callback, asyncState);
                return _result;
            }
            
            public string EndRequestSFTableV1(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("RequestSFTableV1", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGenerFrm(string fk_mapdata, int workID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = fk_mapdata;
                _args[1] = workID;
                System.IAsyncResult _result = base.BeginInvoke("GenerFrm", _args, callback, asyncState);
                return _result;
            }
            
            public string EndGenerFrm(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("GenerFrm", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCopyFrm(string fromMapData, string fk_mapdata, bool isClear, bool isSetReadonly, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = fromMapData;
                _args[1] = fk_mapdata;
                _args[2] = isClear;
                _args[3] = isSetReadonly;
                System.IAsyncResult _result = base.BeginInvoke("CopyFrm", _args, callback, asyncState);
                return _result;
            }
            
            public string EndCopyFrm(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("CopyFrm", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSaveFrm(string fk_mapdata, string xml, string sqls, string UserNo, string SID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[5];
                _args[0] = fk_mapdata;
                _args[1] = xml;
                _args[2] = sqls;
                _args[3] = UserNo;
                _args[4] = SID;
                System.IAsyncResult _result = base.BeginInvoke("SaveFrm", _args, callback, asyncState);
                return _result;
            }
            
            public string EndSaveFrm(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("SaveFrm", _args, result)));
                return _result;
            }
        }
    }
}
