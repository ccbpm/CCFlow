//------------------------------------------------------------------------------
// <auto-generated>
//     “请勿覆盖”。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using BP.En;

namespace BP.Sys
{
    /// <summary>
    /// 数据提取类型
    /// </summary>
    public enum ExcelType
    {
        /// <summary>
        /// 普通文件数据提取
        /// </summary>
        NormalFile = 0,
        /// <summary>
        /// 流程附件数据提取
        /// </summary>
        FlowAttachment = 1
    }
    /// <summary>
    /// Excel模板字段常量
    /// </summary>
    public class ExcelFileAttr : EntityNoNameAttr
    {
        /// <summary>
        /// 标识
        /// </summary>
        public const string Mark = "Mark";

        /// <summary>
        /// 类型
        /// </summary>
        public const string ExcelType = "ExcelType";

        /// <summary>
        /// 上传说明
        /// </summary>
        public const string Note = "Note";

    }

    /// <summary>
    /// Excel模板
    /// </summary>
    public class ExcelFile : EntityNoName
    {
        #region 属性
        /// <summary>
        /// 获取或设置标识
        /// </summary>
        public string Mark
        {
            get
            {
                return this.GetValStrByKey(ExcelFileAttr.Mark);
            }
            set
            {
                this.SetValByKey(ExcelFileAttr.Mark, value);
            }
        }

        /// <summary>
        /// 获取或设置类型
        /// </summary>
        public ExcelType ExcelType
        {
            get
            {
                return (ExcelType)this.GetValIntByKey(ExcelFileAttr.ExcelType);
            }
            set
            {
                this.SetValByKey(ExcelFileAttr.ExcelType, value);
            }
        }

        /// <summary>
        /// 获取或设置上传说明
        /// </summary>
        public string Note
        {
            get
            {
                return this.GetValStrByKey(ExcelFileAttr.Note);
            }
            set
            {
                this.SetValByKey(ExcelFileAttr.Note, value);
            }
        }

        #endregion 属性

        #region 构造方法
        public ExcelFile()
        {
        }

        public ExcelFile(string no)
        {
            this.Retrieve(ExcelFileAttr.No, no);
        }
        #endregion 构造方法

        #region 权限控制
        public override UAC HisUAC
        {
            get
            {
                UAC uac = new UAC();
                uac.OpenAll();
                return uac;
            }
        }
        #endregion 权限控制

        #region EnMap
        /// <summary>
        /// Excel模板Map
        /// </summary>
        public override Map EnMap
        {
            get
            {
                if (this._enMap != null)
                    return this._enMap;

                Map map = new Map("Sys_ExcelFile");
                map.EnDesc = "Excel模板";

                map.AddTBStringPK(ExcelFileAttr.No, null, "编号", true, true, 1, 36, 200);
                map.AddTBString(ExcelFileAttr.Name, null, "名称", true, false, 1, 50, 100, true);
                map.AddTBString(ExcelFileAttr.Mark, null, "标识", true, false, 1, 50, 100);
                map.AddDDLSysEnum(ExcelFileAttr.ExcelType, 0, "类型", true, true, ExcelFileAttr.ExcelType, "@0=普通文件数据提取@1=流程附件数据提取");
                map.AddTBStringDoc(ExcelFileAttr.Note, null, "上传说明", true, false, true);

                map.AddSearchAttr(ExcelFileAttr.ExcelType);

                map.AddMyFile("模板文件", "*.xls|*.xlsx");

                RefMethod rm = new RefMethod();
                rm.Title = "模板配置";
                rm.ClassMethodName = this + ".ExcelConfig";
                rm.RefMethodType = RefMethodType.RightFrameOpen;
                map.AddRefMethod(rm);

                this._enMap = map;
                return this._enMap;
            }
        }
        #endregion EnMap

        public string ExcelConfig()
        {
            return SystemConfig.CCFlowWebPath + "WF/Admin/ExcelUploadConfig.htm?No=" + this.No;
        }

        #region 重写事件
        /// <summary>
        /// 记录添加前事件
        /// </summary>
        protected override bool beforeInsert()
        {
            this.No = Guid.NewGuid().ToString("d");
            return base.beforeInsert();
        }

        protected override bool beforeUpdateInsertAction()
        {
            if (string.IsNullOrWhiteSpace(this.Mark))
                this.Mark = BP.Tools.chs2py.ConvertStr2Code(this.Name);

            return base.beforeUpdateInsertAction();
        }

        #endregion 重写事件
    }

    /// <summary>
    /// Excel模板集合
    /// </summary>
    public class ExcelFiles : EntitiesNoName
    {
        #region 属性
        /// <summary>
        /// 生成Excel模板实体
        /// </summary>
        public override Entity GetNewEntity
        {
            get
            {
                return new ExcelFile();
            }
        }
        #endregion 属性

        #region 构造方法
        public ExcelFiles()
        {
        }
        #endregion 构造方法
    }
}
