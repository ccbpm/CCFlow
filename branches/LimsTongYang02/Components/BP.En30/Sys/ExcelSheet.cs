//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由 代码生成器 自动生成。
//
//     可以对此文件进行更改。为避免无意中覆盖更改，请在更改此文件后删除本行并标注为“请勿覆盖”。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using BP.En;

namespace BP.Sys
{
    /// <summary>
    /// ExcelSheet字段常量
    /// </summary>
    public class ExcelSheetAttr : EntityNoNameAttr
    {
        /// <summary>
        /// Excel模板
        /// </summary>
        public const string FK_ExcelFile = "FK_ExcelFile";

        /// <summary>
        /// Sheet索引
        /// </summary>
        public const string SheetIndex = "SheetIndex";

    }

    /// <summary>
    /// ExcelSheet
    /// </summary>
    public class ExcelSheet : EntityNoName
    {
        #region 属性
        /// <summary>
        /// 获取或设置Excel模板
        /// </summary>
        public string FK_ExcelFile
        {
            get
            {
                return this.GetValStrByKey(ExcelSheetAttr.FK_ExcelFile);
            }
            set
            {
                this.SetValByKey(ExcelSheetAttr.FK_ExcelFile, value);
            }
        }

        /// <summary>
        /// 获取或设置Sheet索引
        /// </summary>
        public int SheetIndex
        {
            get
            {
                return this.GetValIntByKey(ExcelSheetAttr.SheetIndex);
            }
            set
            {
                this.SetValByKey(ExcelSheetAttr.SheetIndex, value);
            }
        }

        #endregion 属性

        #region 构造方法
        public ExcelSheet()
        {
        }
        #endregion 构造方法

        #region 权限控制
        public override UAC HisUAC
        {
            get
            {
                UAC uac = new UAC();
                uac.OpenAll();
                return uac;
            }
        }
        #endregion 权限控制

        #region EnMap
        /// <summary>
        /// ExcelSheetMap
        /// </summary>
        public override Map EnMap
        {
            get
            {
                if (this._enMap != null)
                    return this._enMap;

                Map map = new Map("Sys_ExcelSheet");
                map.EnDesc = "ExcelSheet";

                map.AddTBStringPK(ExcelSheetAttr.No, null, "No", true, true, 1, 36, 200);
                map.AddTBString(ExcelSheetAttr.Name, null, "Sheet名称", true, false, 1, 50, 100);
                map.AddDDLEntities(ExcelSheetAttr.FK_ExcelFile, null, "Excel模板", new ExcelFiles(), true);
                map.AddTBInt(ExcelSheetAttr.SheetIndex, 0, "Sheet索引", true, false);

                this._enMap = map;
                return this._enMap;
            }
        }
        #endregion EnMap

        #region 重写事件
        /// <summary>
        /// 记录添加前事件
        /// </summary>
        protected override bool beforeInsert()
        {
            this.No = Guid.NewGuid().ToString("d");
            return base.beforeInsert();
        }

        #endregion 重写事件
    }

    /// <summary>
    /// ExcelSheet集合
    /// </summary>
    public class ExcelSheets : EntitiesNoName
    {
        #region 属性
        /// <summary>
        /// 生成ExcelSheet实体
        /// </summary>
        public override Entity GetNewEntity
        {
            get
            {
                return new ExcelSheet();
            }
        }
        #endregion 属性

        #region 构造方法
        public ExcelSheets()
        {
        }

        public ExcelSheets(string fk_excelfile)
        {
            this.Retrieve(ExcelSheetAttr.FK_ExcelFile, fk_excelfile);
        }
        #endregion 构造方法
    }
}
