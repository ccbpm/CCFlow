<html>

<head>
    <title>LitJSON使用方法</title>
<meta http-equiv=Content-Type content="text/html; charset=gb2312">
<meta name=Generator content="Microsoft Word 12 (filtered)">
<style>
<!--
 /* Font Definitions */
 @font-face
	{font-family:宋体;
	panose-1:2 1 6 0 3 1 1 1 1 1;}
@font-face
	{font-family:"Cambria Math";
	panose-1:0 0 0 0 0 0 0 0 0 0;}
@font-face
	{font-family:Calibri;
	panose-1:2 15 5 2 2 2 4 3 2 4;}
@font-face
	{font-family:"\@宋体";
	panose-1:2 1 6 0 3 1 1 1 1 1;}
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{margin:0cm;
	margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	font-size:10.5pt;
	font-family:"Calibri","sans-serif";}
p.MsoHeader, li.MsoHeader, div.MsoHeader
	{mso-style-link:"页眉 Char";
	margin:0cm;
	margin-bottom:.0001pt;
	text-align:center;
	layout-grid-mode:char;
	border:none;
	padding:0cm;
	font-size:9.0pt;
	font-family:"Calibri","sans-serif";}
p.MsoFooter, li.MsoFooter, div.MsoFooter
	{mso-style-link:"页脚 Char";
	margin:0cm;
	margin-bottom:.0001pt;
	layout-grid-mode:char;
	font-size:9.0pt;
	font-family:"Calibri","sans-serif";}
a:link, span.MsoHyperlink
	{color:#000088;
	text-decoration:none none;}
a:visited, span.MsoHyperlinkFollowed
	{color:purple;
	text-decoration:underline;}
span.Char
	{mso-style-name:"页眉 Char";
	mso-style-link:页眉;}
span.Char0
	{mso-style-name:"页脚 Char";
	mso-style-link:页脚;}
 /* Page Definitions */
 @page Section1
	{size:595.3pt 841.9pt;
	margin:72.0pt 90.0pt 72.0pt 90.0pt;
	layout-grid:15.6pt;}
div.Section1
	{page:Section1;}
-->
</style>

</head>

<body lang=ZH-CN link="#000088" vlink=purple style='text-justify-trim:punctuation'>

<div class=Section1 style='layout-grid:15.6pt'>

<p class=MsoNormal align=left style='margin-left:36.0pt;text-align:left'><span
style='font-size:9.0pt;font-family:宋体;color:#333333'>一个简单示例：</span><span
style='font-size:9.0pt;font-family:"Arial","sans-serif";color:#333333'> </span></p>

<p class=MsoNormal align=left style='margin-left:36.0pt;text-align:left;
background:#F9F9F9'><span lang=EN-US style='font-size:9.0pt;font-family:"Arial","sans-serif";
color:#888888'>String str =
&quot;{’name’:’cyf’,’id’:10,’items’:[{’itemid’:1001,’itemname’:’hello’},{’itemid’:1002,’itemname’:’hello2’}]}&quot;;&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <br>
//*** </span><span style='font-size:9.0pt;font-family:宋体;color:#888888'>读取</span><span
lang=EN-US style='font-size:9.0pt;font-family:"Arial","sans-serif";color:#888888'>JSON</span><span
style='font-size:9.0pt;font-family:宋体;color:#888888'>字符串中的数据</span><span
lang=EN-US style='font-size:9.0pt;font-family:"Arial","sans-serif";color:#888888'>
*******************************&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <br>
JsonData jd = JsonMapper.ToObject(str);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <br>
String name = (String)jd[&quot;name&quot;];&nbsp; <br>
long id = (long)jd[&quot;id&quot;];&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <br>
JsonData jdItems = jd[&quot;items&quot;];&nbsp; &nbsp; &nbsp; <br>
int itemCnt = jdItems.Count; <br>
// </span><span style='font-size:9.0pt;font-family:宋体;color:#888888'>数组</span><span
lang=EN-US style='font-size:9.0pt;font-family:"Arial","sans-serif";color:#888888'>
items </span><span style='font-size:9.0pt;font-family:宋体;color:#888888'>中项的数量</span><span
lang=EN-US style='font-size:9.0pt;font-family:"Arial","sans-serif";color:#888888'>
<br>
foreach (JsonData item in jdItems)<br>
// </span><span style='font-size:9.0pt;font-family:宋体;color:#888888'>遍历数组</span><span
lang=EN-US style='font-size:9.0pt;font-family:"Arial","sans-serif";color:#888888'>
items&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <br>
{int itemID = (int)item[&quot;itemid&quot;];&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; <br>
String itemName = (String)item[&quot;itemname&quot;];&nbsp; &nbsp; &nbsp;
&nbsp; <br>
}&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <br>
<br>
//*** </span><span style='font-size:9.0pt;font-family:宋体;color:#888888'>将</span><span
lang=EN-US style='font-size:9.0pt;font-family:"Arial","sans-serif";color:#888888'>JsonData</span><span
style='font-size:9.0pt;font-family:宋体;color:#888888'>转换为</span><span
lang=EN-US style='font-size:9.0pt;font-family:"Arial","sans-serif";color:#888888'>JSON</span><span
style='font-size:9.0pt;font-family:宋体;color:#888888'>字符串</span><span
lang=EN-US style='font-size:9.0pt;font-family:"Arial","sans-serif";color:#888888'>
***************************&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <br>
<br>
String str2 = jd.ToJson();</span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:9.0pt;font-family:"Arial","sans-serif";
color:#333333'><br>
<br>
</span><span style='font-size:9.0pt;font-family:宋体;color:#333333'>下载地址</span><span
style='font-size:9.0pt;font-family:"Arial","sans-serif";color:#333333'> </span><span
style='font-size:9.0pt;font-family:宋体;color:#333333'>：</span><span lang=EN-US
style='font-size:9.0pt;font-family:"Arial","sans-serif";color:#333333'><a
href="http://code.google.com/p/litjsonmd/" target="_blank"><span lang=EN-US
style='font-family:宋体'><span lang=EN-US>下载</span></span></a><br>
<br>
LitJSON</span><span style='font-size:9.0pt;font-family:宋体;color:#333333'>是一个</span><span
lang=EN-US style='font-size:9.0pt;font-family:"Arial","sans-serif";color:#333333'>.NET</span><span
style='font-size:9.0pt;font-family:宋体;color:#333333'>平台下处理</span><span
lang=EN-US style='font-size:9.0pt;font-family:"Arial","sans-serif";color:#333333'><a
href="http://www.87cool.com/article-239.aspx" target="_blank">JSON<span
lang=EN-US style='font-family:宋体'><span lang=EN-US>格式数据</span></span></a></span><span
style='font-size:9.0pt;font-family:宋体;color:#333333'>的类库，小巧、快速。它的源代码使用</span><span
lang=EN-US style='font-size:9.0pt;font-family:"Arial","sans-serif";color:#333333'>C#</span><span
style='font-size:9.0pt;font-family:宋体;color:#333333'>编写，可以通过任何</span><span
lang=EN-US style='font-size:9.0pt;font-family:"Arial","sans-serif";color:#333333'>.Net</span><span
style='font-size:9.0pt;font-family:宋体;color:#333333'>平台上的语言进行调用，目前最新版本为</span><span
lang=EN-US style='font-size:9.0pt;font-family:"Arial","sans-serif";color:#333333'>LitJSON
0.5.0</span><span style='font-size:9.0pt;font-family:宋体;color:#333333'>。</span><span
lang=EN-US style='font-size:9.0pt;font-family:"Arial","sans-serif";color:#333333'><br>
<br>
</span><span style='font-size:9.0pt;font-family:宋体;color:#333333'>与以下这几个</span><span
lang=EN-US style='font-size:9.0pt;font-family:"Arial","sans-serif";color:#333333'>.Net</span><span
style='font-size:9.0pt;font-family:宋体;color:#333333'>平台上的开源</span><span
lang=EN-US style='font-size:9.0pt;font-family:"Arial","sans-serif";color:#333333'>JSON</span><span
style='font-size:9.0pt;font-family:宋体;color:#333333'>库相比，</span><span
lang=EN-US style='font-size:9.0pt;font-family:"Arial","sans-serif";color:#333333'>LitJSON</span><span
style='font-size:9.0pt;font-family:宋体;color:#333333'>的性能遥遥领先：</span><span
lang=EN-US style='font-size:9.0pt;font-family:"Arial","sans-serif";color:#333333'><br>
<br>
<a href="http://jayrock.berlios.de/" target="_blank">Jayrock</a> version
0.9.8316<br>
<br>
<a href="http://litjson.sourceforge.net/" target="_blank">LitJSON</a> version
0.3.0<br>
<br>
<a href="http://www.newtonsoft.com/products/json/" target="_blank">Newtonsoft</a>
Json.NET version 1.1<br>
<br>
</span><span style='font-size:9.0pt;font-family:宋体;color:#333333'>下面介绍</span><span
lang=EN-US style='font-size:9.0pt;font-family:"Arial","sans-serif";color:#333333'>LitJSON</span><span
style='font-size:9.0pt;font-family:宋体;color:#333333'>中常用的方法：</span><span
lang=EN-US style='font-size:9.0pt;font-family:"Arial","sans-serif";color:#333333'><br>
<br>
</span><span style='font-size:9.0pt;font-family:宋体;color:#333333'>以下示例需要先添加引用</span><span
lang=EN-US style='font-size:9.0pt;font-family:"Arial","sans-serif";color:#333333'>LitJson.dll</span><span
style='font-size:9.0pt;font-family:宋体;color:#333333'>，再导入命名空间</span><span
lang=EN-US style='font-size:9.0pt;font-family:"Arial","sans-serif";color:#333333'>
using LitJson;<br>
<br>
</span><span style='font-size:9.0pt;font-family:宋体;color:#333333'>点击直接下载</span><span
lang=EN-US style='font-size:9.0pt;font-family:"Arial","sans-serif";color:#333333'><a
href="http://www.uushare.com/user/liaojunbo/file/3513053" target="_blank">LitJSON.dll</a></span><span
style='font-size:9.0pt;font-family:宋体;color:#333333'>，也可以到</span><span
lang=EN-US style='font-size:9.0pt;font-family:"Arial","sans-serif";color:#333333'>http://litjson.sourceforge.net</span><span
style='font-size:9.0pt;font-family:宋体;color:#333333'>去下载。</span><span
lang=EN-US style='font-size:9.0pt;font-family:"Arial","sans-serif";color:#333333'>
<br>
<br>
1</span><span style='font-size:9.0pt;font-family:宋体;color:#333333'>、</span><span
lang=EN-US style='font-size:9.0pt;font-family:"Arial","sans-serif";color:#333333'>Json
</span><span style='font-size:9.0pt;font-family:宋体;color:#333333'>与</span><span
lang=EN-US style='font-size:9.0pt;font-family:"Arial","sans-serif";color:#333333'>
C#</span><span style='font-size:9.0pt;font-family:宋体;color:#333333'>中</span><span
style='font-size:9.0pt;font-family:"Arial","sans-serif";color:#333333'> </span><span
style='font-size:9.0pt;font-family:宋体;color:#333333'>实体对象</span><span
style='font-size:9.0pt;font-family:"Arial","sans-serif";color:#333333'> </span><span
style='font-size:9.0pt;font-family:宋体;color:#333333'>的相互转换</span><span
lang=EN-US style='font-size:9.0pt;font-family:"Arial","sans-serif";color:#333333'><br>
<br>
</span><b><span style='font-size:9.0pt;font-family:宋体;color:#333333'>例</span></b><b><span
lang=EN-US style='font-size:9.0pt;font-family:"Arial","sans-serif";color:#333333'>
1.1</span></b><b><span style='font-size:9.0pt;font-family:宋体;color:#333333'>：使用</span></b><b><span
lang=EN-US style='font-size:9.0pt;font-family:"Arial","sans-serif";color:#333333'>
JsonMapper </span></b><b><span style='font-size:9.0pt;font-family:宋体;
color:#333333'>类实现数据的转换</span></b><span lang=EN-US style='font-size:9.0pt;
font-family:"Arial","sans-serif";color:#333333'><br>
<br>
ublic class Person<br>
&nbsp; &nbsp; {<br>
&nbsp; &nbsp; &nbsp; &nbsp; public string Name { get; set; }<br>
&nbsp; &nbsp; &nbsp; &nbsp; public int Age { get; set; }<br>
&nbsp; &nbsp; &nbsp; &nbsp; public DateTime Birthday { get; set; }<br>
&nbsp; &nbsp; }<br>
&nbsp; &nbsp; public class JsonSample<br>
&nbsp; &nbsp; {<br>
&nbsp; &nbsp; &nbsp; &nbsp; public static void Main()<br>
&nbsp; &nbsp; &nbsp; &nbsp; {<br>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; PersonToJson();<br>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; JsonToPerson();<br>
&nbsp; &nbsp; &nbsp; &nbsp; }<br>
&nbsp; &nbsp; &nbsp; &nbsp; /// <br>
&nbsp; &nbsp; &nbsp; &nbsp; /// </span><span style='font-size:9.0pt;font-family:
宋体;color:#333333'>将实体类转换成</span><span lang=EN-US style='font-size:9.0pt;
font-family:"Arial","sans-serif";color:#333333'>Json</span><span
style='font-size:9.0pt;font-family:宋体;color:#333333'>格式</span><span lang=EN-US
style='font-size:9.0pt;font-family:"Arial","sans-serif";color:#333333'><br>
&nbsp; &nbsp; &nbsp; &nbsp; /// <br>
&nbsp; &nbsp; &nbsp; &nbsp; public static void PersonToJson()<br>
&nbsp; &nbsp; &nbsp; &nbsp; {<br>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Person bill = new Person();<br>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; bill.Name =
&quot;www.87cool.com&quot;;<br>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; bill.Age = 3;<br>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; bill.Birthday = new DateTime(2007, 7,
17);<br>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; string json_bill =
JsonMapper.ToJson(bill);<br>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Console.WriteLine(json_bill);<br>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //</span><span style='font-size:9.0pt;
font-family:宋体;color:#333333'>输出：</span><span lang=EN-US style='font-size:9.0pt;
font-family:"Arial","sans-serif";color:#333333'>{&quot;Name&quot;:&quot;www.87cool.com&quot;,&quot;Age&quot;:3,&quot;Birthday&quot;:&quot;07/17/2007
00:00:00&quot;}<br>
&nbsp; &nbsp; &nbsp; &nbsp; }<br>
<br>
&nbsp; &nbsp; &nbsp; &nbsp; /// <br>
&nbsp; &nbsp; &nbsp; &nbsp; /// </span><span style='font-size:9.0pt;font-family:
宋体;color:#333333'>将</span><span lang=EN-US style='font-size:9.0pt;font-family:
"Arial","sans-serif";color:#333333'>Json</span><span style='font-size:9.0pt;
font-family:宋体;color:#333333'>数据转换成实体类</span><span lang=EN-US style='font-size:
9.0pt;font-family:"Arial","sans-serif";color:#333333'><br>
&nbsp; &nbsp; &nbsp; &nbsp; /// <br>
&nbsp; &nbsp; &nbsp; &nbsp; public static void JsonToPerson()<br>
&nbsp; &nbsp; &nbsp; &nbsp; {<br>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; string json = @&quot;<br>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {<br>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&quot;&quot;Name&quot;&quot;&nbsp; &nbsp; :
&quot;&quot;www.87cool.com&quot;&quot;,<br>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&quot;&quot;Age&quot;&quot;&nbsp; &nbsp; &nbsp; : 3,<br>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&quot;&quot;Birthday&quot;&quot; : &quot;&quot;07/17/2007 00:00:00&quot;&quot;<br>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&quot;;<br>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Person thomas =
JsonMapper.ToObject(json);<br>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Console.WriteLine(&quot;’87cool’ age:
{0}&quot;, thomas.Age);<br>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //</span><span style='font-size:9.0pt;
font-family:宋体;color:#333333'>输出：</span><span lang=EN-US style='font-size:9.0pt;
font-family:"Arial","sans-serif";color:#333333'>’87cool’ age: 3<br>
&nbsp; &nbsp; &nbsp; &nbsp; }<br>
&nbsp; &nbsp; }<br>
<br>
</span><b><span style='font-size:9.0pt;font-family:宋体;color:#333333'>例</span></b><b><span
lang=EN-US style='font-size:9.0pt;font-family:"Arial","sans-serif";color:#333333'>
1.2</span></b><b><span style='font-size:9.0pt;font-family:宋体;color:#333333'>：使用</span></b><b><span
lang=EN-US style='font-size:9.0pt;font-family:"Arial","sans-serif";color:#333333'>
JsonMapper </span></b><b><span style='font-size:9.0pt;font-family:宋体;
color:#333333'>类将</span></b><b><span lang=EN-US style='font-size:9.0pt;
font-family:"Arial","sans-serif";color:#333333'>Json</span></b><b><span
style='font-size:9.0pt;font-family:宋体;color:#333333'>字符串转换为</span></b><b><span
lang=EN-US style='font-size:9.0pt;font-family:"Arial","sans-serif";color:#333333'>C#</span></b><b><span
style='font-size:9.0pt;font-family:宋体;color:#333333'>认识的</span></b><b><span
lang=EN-US style='font-size:9.0pt;font-family:"Arial","sans-serif";color:#333333'>JsonData</span></b><b><span
style='font-size:9.0pt;font-family:宋体;color:#333333'>，再通过</span></b><b><span
lang=EN-US style='font-size:9.0pt;font-family:"Arial","sans-serif";color:#333333'>Json</span></b><b><span
style='font-size:9.0pt;font-family:宋体;color:#333333'>数据的属性名或索引获取其值。</span></b><span
lang=EN-US style='font-size:9.0pt;font-family:"Arial","sans-serif";color:#333333'><br>
<br>
</span><span style='font-size:9.0pt;font-family:宋体;color:#333333'>在</span><span
lang=EN-US style='font-size:9.0pt;font-family:"Arial","sans-serif";color:#333333'>C#</span><span
style='font-size:9.0pt;font-family:宋体;color:#333333'>中读取</span><span
lang=EN-US style='font-size:9.0pt;font-family:"Arial","sans-serif";color:#333333'>JsonData</span><span
style='font-size:9.0pt;font-family:宋体;color:#333333'>对象</span><span
style='font-size:9.0pt;font-family:"Arial","sans-serif";color:#333333'> </span><span
style='font-size:9.0pt;font-family:宋体;color:#333333'>和</span><span
style='font-size:9.0pt;font-family:"Arial","sans-serif";color:#333333'> </span><span
style='font-size:9.0pt;font-family:宋体;color:#333333'>在</span><span lang=EN-US
style='font-size:9.0pt;font-family:"Arial","sans-serif";color:#333333'><a
href="http://www.87cool.com/article-239.aspx" target="_blank">JavaScript<span
lang=EN-US style='font-family:宋体'><span lang=EN-US>中读取</span></span>Json<span
lang=EN-US style='font-family:宋体'><span lang=EN-US>对像</span></span></a></span><span
style='font-size:9.0pt;font-family:宋体;color:#333333'>的方法完全一样；</span><span
lang=EN-US style='font-size:9.0pt;font-family:"Arial","sans-serif";color:#333333'><br>
<br>
</span><span style='font-size:9.0pt;font-family:宋体;color:#333333'>对</span><span
lang=EN-US style='font-size:9.0pt;font-family:"Arial","sans-serif";color:#333333'>Json</span><span
style='font-size:9.0pt;font-family:宋体;color:#333333'>的这种读取方式在</span><span
lang=EN-US style='font-size:9.0pt;font-family:"Arial","sans-serif";color:#333333'>C#</span><span
style='font-size:9.0pt;font-family:宋体;color:#333333'>中用起来非常爽，同时也很实用，因为现在很多网络应用提供的</span><span
lang=EN-US style='font-size:9.0pt;font-family:"Arial","sans-serif";color:#333333'>API</span><span
style='font-size:9.0pt;font-family:宋体;color:#333333'>所返回的数据都是</span><span
lang=EN-US style='font-size:9.0pt;font-family:"Arial","sans-serif";color:#333333'>Json</span><span
style='font-size:9.0pt;font-family:宋体;color:#333333'>格式的，</span><span
lang=EN-US style='font-size:9.0pt;font-family:"Arial","sans-serif";color:#333333'><br>
<br>
</span><span style='font-size:9.0pt;font-family:宋体;color:#333333'>如</span><span
lang=EN-US style='font-size:9.0pt;font-family:"Arial","sans-serif";color:#333333'>Flickr</span><span
style='font-size:9.0pt;font-family:宋体;color:#333333'>相册</span><span lang=EN-US
style='font-size:9.0pt;font-family:"Arial","sans-serif";color:#333333'>API</span><span
style='font-size:9.0pt;font-family:宋体;color:#333333'>返回的就是</span><span
lang=EN-US style='font-size:9.0pt;font-family:"Arial","sans-serif";color:#333333'>json</span><span
style='font-size:9.0pt;font-family:宋体;color:#333333'>格式的数据。</span><span
lang=EN-US style='font-size:9.0pt;font-family:"Arial","sans-serif";color:#333333'><br>
&nbsp; &nbsp; &nbsp; &nbsp; public static void LoadAlbumData(string json_text)<br>
&nbsp; &nbsp; &nbsp; &nbsp; {<br>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; JsonData data =
JsonMapper.ToObject(json_text);<br>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Console.WriteLine(&quot;Album’s name:
{0}&quot;, data[&quot;album&quot;][&quot;name&quot;]);<br>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; string artist =
(string)data[&quot;album&quot;][&quot;name&quot;];<br>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; int year =
(int)data[&quot;album&quot;][&quot;year&quot;];<br>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Console.WriteLine(&quot;First track:
{0}&quot;, data[&quot;album&quot;][&quot;tracks&quot;][0]);<br>
&nbsp; &nbsp; &nbsp; &nbsp; }<br>
<br>
2</span><span style='font-size:9.0pt;font-family:宋体;color:#333333'>、</span><span
lang=EN-US style='font-size:9.0pt;font-family:"Arial","sans-serif";color:#333333'>C#
</span><span style='font-size:9.0pt;font-family:宋体;color:#333333'>中对</span><span
lang=EN-US style='font-size:9.0pt;font-family:"Arial","sans-serif";color:#333333'>
Json </span><span style='font-size:9.0pt;font-family:宋体;color:#333333'>的</span><span
lang=EN-US style='font-size:9.0pt;font-family:"Arial","sans-serif";color:#333333'>
Readers </span><span style='font-size:9.0pt;font-family:宋体;color:#333333'>和</span><span
lang=EN-US style='font-size:9.0pt;font-family:"Arial","sans-serif";color:#333333'>
Writers<br>
<br>
</span><b><span style='font-size:9.0pt;font-family:宋体;color:#333333'>例</span></b><b><span
lang=EN-US style='font-size:9.0pt;font-family:"Arial","sans-serif";color:#333333'>
2.1</span></b><b><span style='font-size:9.0pt;font-family:宋体;color:#333333'>：</span></b><b><span
lang=EN-US style='font-size:9.0pt;font-family:"Arial","sans-serif";color:#333333'>JsonReader</span></b><b><span
style='font-size:9.0pt;font-family:宋体;color:#333333'>类的使用方法</span></b><b><span
style='font-size:9.0pt;font-family:"Arial","sans-serif";color:#333333'> </span></b><span
lang=EN-US style='font-size:9.0pt;font-family:"Arial","sans-serif";color:#333333'><br>
public class DataReader<br>
{<br>
&nbsp; &nbsp; public static void Main ()<br>
&nbsp; &nbsp; {<br>
&nbsp; &nbsp; &nbsp; &nbsp; string sample = @&quot;{<br>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;&quot;name&quot;&quot;&nbsp; :
&quot;&quot;Bill&quot;&quot;,<br>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;&quot;age&quot;&quot;&nbsp; :
32,<br>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;&quot;awake&quot;&quot; : true,<br>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;&quot;n&quot;&quot;&nbsp;
&nbsp; : 1994.0226,<br>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;&quot;note&quot;&quot;&nbsp; :
[ &quot;&quot;life&quot;&quot;, &quot;&quot;is&quot;&quot;,
&quot;&quot;but&quot;&quot;, &quot;&quot;a&quot;&quot;,
&quot;&quot;dream&quot;&quot; ]<br>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&quot;;<br>
&nbsp; &nbsp; &nbsp; &nbsp; ReadJson (sample);<br>
&nbsp; &nbsp; }<br>
&nbsp; &nbsp; //</span><span style='font-size:9.0pt;font-family:宋体;color:#333333'>输出所有</span><span
lang=EN-US style='font-size:9.0pt;font-family:"Arial","sans-serif";color:#333333'>Json</span><span
style='font-size:9.0pt;font-family:宋体;color:#333333'>数据的类型和值</span><span
lang=EN-US style='font-size:9.0pt;font-family:"Arial","sans-serif";color:#333333'><br>
&nbsp; &nbsp; public static void ReadJson (string json)<br>
&nbsp; &nbsp; {<br>
&nbsp; &nbsp; &nbsp; &nbsp; JsonReader reader = new JsonReader (json);<br>
&nbsp; &nbsp; &nbsp; &nbsp; <br>
&nbsp; &nbsp; &nbsp; &nbsp; Console.WriteLine (&quot;{0,14} {1,10}
{2,16}&quot;, &quot;Token&quot;, &quot;Value&quot;, &quot;Type&quot;);<br>
&nbsp; &nbsp; &nbsp; &nbsp; Console.WriteLine (new String (’-’, 42));<br>
&nbsp; &nbsp; &nbsp; &nbsp; while (reader.Read())<br>
&nbsp; &nbsp; &nbsp; &nbsp; {<br>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; string type = reader.Value != null ?
reader.Value.GetType().ToString() : &quot;&quot;;<br>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Console.WriteLine(&quot;{0,14} {1,10}
{2,16}&quot;, reader.Token, reader.Value, type);<br>
&nbsp; &nbsp; &nbsp; &nbsp; }<br>
&nbsp; &nbsp; }<br>
}<br>
&nbsp; &nbsp; &nbsp; <br>
//</span><span style='font-size:9.0pt;font-family:宋体;color:#333333'>输出结果</span><span
lang=EN-US style='font-size:9.0pt;font-family:"Arial","sans-serif";color:#333333'>:<br>
<br>
//&nbsp; &nbsp; &nbsp; Json</span><span style='font-size:9.0pt;font-family:
宋体;color:#333333'>类型</span><span lang=EN-US style='font-size:9.0pt;font-family:
"Arial","sans-serif";color:#333333'>&nbsp; &nbsp; &nbsp; &nbsp; </span><span
style='font-size:9.0pt;font-family:宋体;color:#333333'>值</span><span lang=EN-US
style='font-size:9.0pt;font-family:"Arial","sans-serif";color:#333333'>&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; C#</span><span style='font-size:9.0pt;font-family:
宋体;color:#333333'>类型</span><span lang=EN-US style='font-size:9.0pt;font-family:
"Arial","sans-serif";color:#333333'><br>
//------------------------------------------<br>
//&nbsp; ObjectStart&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <br>
//&nbsp; PropertyName&nbsp; &nbsp; &nbsp; name&nbsp; &nbsp; System.String<br>
//&nbsp; &nbsp; &nbsp; &nbsp; String&nbsp; &nbsp; &nbsp; Bill&nbsp; &nbsp;
System.String<br>
//&nbsp; PropertyName&nbsp; &nbsp; &nbsp; &nbsp; age&nbsp; &nbsp; System.String<br>
//&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Int&nbsp; &nbsp; &nbsp; &nbsp; 32&nbsp;
&nbsp; System.Int32<br>
//&nbsp; PropertyName&nbsp; &nbsp; &nbsp; awake&nbsp; &nbsp; System.String<br>
//&nbsp; &nbsp; &nbsp; Boolean&nbsp; &nbsp; &nbsp; True&nbsp; System.Boolean<br>
//&nbsp; PropertyName&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; n&nbsp; &nbsp;
System.String<br>
//&nbsp; &nbsp; &nbsp; &nbsp; Double&nbsp; 1994.0226&nbsp; &nbsp; System.Double<br>
//&nbsp; PropertyName&nbsp; &nbsp; &nbsp; note&nbsp; &nbsp; System.String<br>
//&nbsp; &nbsp; ArrayStart&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <br>
//&nbsp; &nbsp; &nbsp; &nbsp; String&nbsp; &nbsp; &nbsp; life&nbsp; &nbsp;
System.String<br>
//&nbsp; &nbsp; &nbsp; &nbsp; String&nbsp; &nbsp; &nbsp; &nbsp; is&nbsp; &nbsp;
System.String<br>
//&nbsp; &nbsp; &nbsp; &nbsp; String&nbsp; &nbsp; &nbsp; &nbsp; but&nbsp;
&nbsp; System.String<br>
//&nbsp; &nbsp; &nbsp; &nbsp; String&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; a&nbsp;
&nbsp; System.String<br>
//&nbsp; &nbsp; &nbsp; &nbsp; String&nbsp; &nbsp; &nbsp; dream&nbsp; &nbsp;
System.String<br>
//&nbsp; &nbsp; &nbsp; ArrayEnd&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <br>
//&nbsp; &nbsp; ObjectEnd<br>
<br>
</span><b><span style='font-size:9.0pt;font-family:宋体;color:#333333'>例</span></b><b><span
lang=EN-US style='font-size:9.0pt;font-family:"Arial","sans-serif";color:#333333'>
2.2</span></b><b><span style='font-size:9.0pt;font-family:宋体;color:#333333'>：</span></b><b><span
lang=EN-US style='font-size:9.0pt;font-family:"Arial","sans-serif";color:#333333'>JsonWriter</span></b><b><span
style='font-size:9.0pt;font-family:宋体;color:#333333'>类的使用方法</span></b><b><span
style='font-size:9.0pt;font-family:"Arial","sans-serif";color:#333333'> </span></b><span
lang=EN-US style='font-size:9.0pt;font-family:"Arial","sans-serif";color:#333333'><br>
public class DataReader<br>
{<br>
&nbsp; &nbsp; //</span><span style='font-size:9.0pt;font-family:宋体;color:#333333'>通过</span><span
lang=EN-US style='font-size:9.0pt;font-family:"Arial","sans-serif";color:#333333'>JsonWriter</span><span
style='font-size:9.0pt;font-family:宋体;color:#333333'>类创建一个</span><span
lang=EN-US style='font-size:9.0pt;font-family:"Arial","sans-serif";color:#333333'>Json</span><span
style='font-size:9.0pt;font-family:宋体;color:#333333'>对象</span><span lang=EN-US
style='font-size:9.0pt;font-family:"Arial","sans-serif";color:#333333'><br>
&nbsp; &nbsp; public static void WriteJson ()<br>
&nbsp; &nbsp; {<br>
&nbsp; &nbsp; &nbsp; &nbsp; System.Text.StringBuilder sb = new
System.Text.StringBuilder();<br>
&nbsp; &nbsp; &nbsp; &nbsp; JsonWriter writer = new JsonWriter (sb);<br>
&nbsp; &nbsp; &nbsp; &nbsp; writer.WriteArrayStart ();<br>
&nbsp; &nbsp; &nbsp; &nbsp; writer.Write (1);<br>
&nbsp; &nbsp; &nbsp; &nbsp; writer.Write (2);<br>
&nbsp; &nbsp; &nbsp; &nbsp; writer.Write (3);<br>
&nbsp; &nbsp; &nbsp; &nbsp; writer.WriteObjectStart ();<br>
&nbsp; &nbsp; &nbsp; &nbsp; writer.WritePropertyName (&quot;color&quot;);<br>
&nbsp; &nbsp; &nbsp; &nbsp; writer.Write (&quot;blue&quot;);<br>
&nbsp; &nbsp; &nbsp; &nbsp; writer.WriteObjectEnd ();<br>
&nbsp; &nbsp; &nbsp; &nbsp; writer.WriteArrayEnd ();<br>
&nbsp; &nbsp; &nbsp; &nbsp; Console.WriteLine (sb.ToString ());<br>
&nbsp; &nbsp; &nbsp; &nbsp; //</span><span style='font-size:9.0pt;font-family:
宋体;color:#333333'>输出：</span><span lang=EN-US style='font-size:9.0pt;font-family:
"Arial","sans-serif";color:#333333'>[1,2,3,{&quot;color&quot;:&quot;blue&quot;}]<br>
&nbsp; &nbsp; }<br>
}</span></p>

</div>

</body>

</html>
